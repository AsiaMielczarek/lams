<?xml version="1.0"?>

<!-- 
The DOCTYPE declaration declares the location of database-specific parts of the
Ant build file. 
-->
<!DOCTYPE project [
	<!ENTITY properties SYSTEM "file:./properties.xml">
]>

<project name="lams_tool_openid" basedir=".">

	<!-- import properties from the specified file -->
	<property file="build.properties" />
	
	<property name="name" value="lams_openid" />
	<property name="product" value="lams_openid"/>
	<property name="toolContext" value="openid"/>

	<path id="all-libs">
		<fileset dir="${sharedlib}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${j2eelibs}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="lib">
			<include name="*.jar" />
		</fileset>
	</path>

	<path id="project.classpath">
		<path refid="all-libs" />
		<!-- Java CLASSPATH should be added as the last item -->
		<!-- This property is supposed to be set in eclipse  -->
		<pathelement location="${java.class.path}" />
		<pathelement location="lib" />
	</path>
	
	<path id="schemaexport.classpath">
		<path refid="project.classpath"/>
		<pathelement location="${build.classes.java}"/>
	</path>
	
	

	
	<target name="print-classpath">
		<echo message="java.class.path = ${java.class.path}" />
		<property name="path.string" refid="project.classpath" />
		<echo message="project.classpath = ${path.string}" />
	</target>

	<!-- ================================================================ -->
	<!-- Preparations									                  -->
	<!-- ================================================================ -->
	<target name="preparedirs">
		<mkdir dir="${build}" />
		<mkdir dir="${build.classes.java}" />
		<mkdir dir="${build.lib}" />
	</target>


	<target name="clean-build" description="removes all class files">
		<delete dir="${build.classes.java}" />
		<delete dir="${build.classes.test}" />
		<delete dir="${build.lib}" />
		<delete dir="${build.deploy}"/>
		<mkdir dir="${build.classes.java}" />
		<mkdir dir="${build.lib}" />
	</target>

	<!-- ================================================================ -->
	<!-- Compilations								                  -->
	<!-- ================================================================ -->

	<target name="compile-java" depends="clean-build" description="compile java sources">
		<javac srcdir="${src.java.dir}" compiler="modern" destdir="${build.classes.java}" deprecation="on" debug="on">
			<compilerarg value="-Xlint:unchecked"/>
			<classpath>
				<path refid="project.classpath" />
			</classpath>
		</javac>
		<copy overwrite="yes" todir="${build.classes.java}/${package}">
			
			<fileset dir="${src.java.dir}/${package}">
				<include name="*.xml" />
			</fileset>
		</copy>
	</target>

	<!-- ================================================================ -->
	<!-- Make jar archive for deployment        		    	          -->
	<!-- ================================================================ -->
	<target name="build-jar" depends="compile-java" description="creates jar file">
		<delete file="${build.lib}/${product}.jar" />
		<jar jarfile="${build.lib}/${product}.jar" manifest="${conf.dir}/jar/META-INF/MANIFEST.MF">
			<fileset dir="${build.classes.java}">
			</fileset>
		</jar>
	</target>

	<!-- = = = = = = = = = = = = = = = = = = = = = = = =  -->
	<!-- Make the war archive  for deployment             -->
	<!-- = = = = = = = = = = = = = = = = = = = = = = = =  -->
	<target name="build-war" depends="build-jar,jsp-plaincopy,jsp-precompile" description="creates war file">
	 	<copy todir="${build.war.assembly}/WEB-INF/lib">
			<fileset dir="${build.lib}">
				 <include name="${product}.jar"/>
			</fileset>
	 	</copy>
		<delete file="${build.lib}/${product}.war" />
		<war warfile="${build.lib}/${product}.war" 
  				webxml="${build.war}/WEB-INF/web.xml" manifest="${conf.dir}/war/META-INF/MANIFEST.MF">
			<fileset dir="${build.war.assembly}">
				<include name="**" />
			</fileset>
		</war>
	</target>

	   <target name="copy-tags" depends="" description="copy the lams.tld and the lams tags">
	   		<copy todir="${conf.webinf.dir}" overwrite="yes" file="${tag.web.dir}/lams.tld" />	
			<copy todir="${conf.webinf.dir}/tags" overwrite="yes">
				<fileset dir="${tag.web.dir}/tags">
					<include name="*.tag" />
				</fileset>
			</copy>
	   </target>

	<!-- =================================================================== -->
	<!-- Deploy the openid struts jar and war                               -->
	<!-- =================================================================== -->
	<target name="deploy-war" depends="build-war" description="Deploy the tool war file and jar file">
		<delete quiet="true">
			<fileset dir="${jboss.deploy}/tmp" />
			<fileset dir="${jboss.deploy}/work" />
		</delete>
		<copy file="${build.lib}/${product}.war" todir="${jboss.deploy}" />
	</target>

	


	<!-- ================================= -->
	<!--          target: synchronize-jsp  -->            
	<!--  ================================= -->
	<target name="synchronize-deploy" description="copy non-java file into deploy folder">
		<copy verbose="yes" todir="${jboss.deploy}/${product}.war">
			<fileset dir="${conf.web.dir}">
				<include name="**/*.*" />
			</fileset>
		</copy>
	</target>
	
	<!-- Runs if jsp.precompile setting is set in lams_build/common.properties -->
	<target name="jsp-precompile" if="jsp.precompile">
		<!-- Work on a copy of web files, not originals-->
		<echo>Copying web files</echo>
		<delete dir="${build.war}" quiet="false"/>
	 	<copy overwrite="yes" todir="${build.war}">
			<fileset dir="${conf.web.dir}">
				<include name="**"/>
				<exclude name="WEB-INF/classes"/>
			</fileset>
	 	</copy>
		
		<!-- Define JSP compiler -->
		<path id="jsp.precompile.classpath">
			<path refid="project.classpath"/>
			<pathelement location="${build.classes.java}"/>
			<fileset dir="${jboss.home}/lib">
				<include name="jboss-common-core.jar" />
				<include name="jboss-logging-spi.jar" />
			</fileset>
			<fileset dir="${jboss.ear.deployers}/jbossweb.deployer">
				<include name="*.jar" />
			</fileset>
	        <fileset dir="${jboss.ear.deploy}/jbossweb.sar">
	            <include name="jbossweb.jar" />
	        </fileset>
		</path>
		<taskdef classname="org.apache.jasper.JspC" name="jasper2" classpathref="jsp.precompile.classpath" />
		
		<!-- Generate Java files and put servlet mappings in web.xml file -->
		<echo>Generating Java source from JSP pages</echo>
		<jasper2 uriroot="${build.war}"
			webXmlFragment="${build.war}/WEB-INF/generated_web.xml"
			outputDir="${build.war}/WEB-INF/src"
			package="${jsp.java.src.package}"
			addWebXmlMappings="true" validateXml="false" failOnError="true"
		/>
		
		<!-- Compile main Java source as some JSPs refer to it
		Uncomment if you get "class not found" errors when precompiling JSPs
		<antcall target="compile-java"/>
		-->
		
		<!-- Compile Java files generated from JSPs -->
		<echo>Compiling JSP classes</echo>
		
		<!-- Make src folder if it does not exist i.e. no JSPs were compiled in previous step -->
		<mkdir dir="${build.war}/WEB-INF/src"/>
		<mkdir dir="${build.war}/WEB-INF/classes"/>
	    <javac destdir="${build.war}/WEB-INF/classes"
	           optimize="on"
	           debug="off" failonerror="true"
	           srcdir="${build.war}/WEB-INF/src" 
		  	   excludes="**/*.smap"
	    	   classpathref="jsp.precompile.classpath">
	      <include name="**" />
	      <exclude name="tags/**" />
	    </javac>
		
		<!-- Prepare files for WAR, exclude plain JSP and tags -->
		<echo>Copying web resources</echo>
		<copy todir="${build.war.assembly}">	
			<fileset dir="${build.war}">
				<include name="**"/>
				<exclude name="WEB-INF/src/"/>
				<exclude name="WEB-INF/web.xml"/>
				<exclude name="**/*.java"/>
				<exclude name="**/*.jsp"/>
				<exclude name="**/*.tag"/>
				<exclude name="**/*.tld"/>
				<exclude name="**/.cvsignore"/>
			</fileset>
		</copy>
		
	 	<copy todir="${build.war.assembly}/WEB-INF/lib" flatten="true" failonerror="false">
			<fileset dir="${basedir}/lib">
				<include name="**/*"/>
			</fileset>
	 	</copy>
	</target>
					
	<!-- Runs if jsp.precompile setting is NOT set in lams_build/common.properties 
		 JSPs will be compiled at runtime, which is default behaviour allowing hotdeploy -->
	<target name="jsp-plaincopy" unless="jsp.precompile">
		<delete dir="${build.war}" quiet="false"/>
		
		<echo>Copying web resources</echo>
	 	<copy todir="${build.war}">
			<fileset dir="${conf.web.dir}">
				<include name="WEB-INF/web.xml"/>
			</fileset>
	 	</copy>
		
	 	<copy todir="${build.war.assembly}">
			<fileset dir="${conf.web.dir}">
				<include name="**"/>
				<exclude name="WEB-INF/web.xml"/>
				<exclude name="WEB-INF/classes"/>
				<exclude name="**/.cvsignore"/>
			</fileset>
	 	</copy>
		
	 	<copy todir="${build.war.assembly}/WEB-INF/lib" flatten="true" failonerror="false">
			<fileset dir="${basedir}/lib">
				<include name="**/*"/>
			</fileset>
	 	</copy>
	</target>
</project>

