<?xml version="1.0" encoding="UTF-8"?>

<web-app xmlns="http://java.sun.com/xml/ns/j2ee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"
	version="2.4">
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			classpath:/org/lamsfoundation/lams/applicationContext.xml
			classpath:/org/lamsfoundation/lams/toolApplicationContext.xml
			classpath:/org/lamsfoundation/lams/contentrepository/applicationContext.xml
			classpath:/org/lamsfoundation/lams/authoring/authoringApplicationContext.xml
			classpath:/org/lamsfoundation/lams/monitoring/monitoringApplicationContext.xml
			classpath:/org/lamsfoundation/lams/workspace/workspaceApplicationContext.xml
			classpath:/org/lamsfoundation/lams/web/webApplicationContext.xml
			classpath:/org/lamsfoundation/lams/integrationContext.xml
			classpath:/org/lamsfoundation/lams/usermanagement/ldapContext.xml
			classpath:/org/lamsfoundation/lams/lesson/lessonApplicationContext.xml
			classpath:/org/lamsfoundation/lams/learning/learningApplicationContext.xml
			classpath:/org/lamsfoundation/lams/openid/openIdApplicationContext.xml
		</param-value>
	</context-param>

	<filter>
		<filter-name>SystemSessionFilter</filter-name>
		<filter-class>
			org.lamsfoundation.lams.web.session.SystemSessionFilter
		</filter-class>
	</filter>
	<filter>
		<filter-name>HibernateFilter</filter-name>
		<filter-class>
			org.lamsfoundation.lams.util.CustomizedOpenSessionInViewFilter
		</filter-class>
		<init-param>
			<param-name>sessionFactoryBeanName</param-name>
			<param-value>coreSessionFactory</param-value>
		</init-param>
		<init-param>
			<param-name>singleSession</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	
	<filter-mapping>
		<filter-name>SystemSessionFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>HibernateFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter>
		<filter-name>OpenIdFilter</filter-name>
		<filter-class>
			org.verisign.joid.consumer.OpenIdFilter
		</filter-class>
		<init-param>
			<param-name>saveInCookie</param-name>
			<param-value>true</param-value>
		</init-param>
		<!--
			<init-param>
			<param-name>cookieDomain</param-name>
			<param-value>www.mydomain.com</param-value>
			<description>Optional. Domain to store cookie based on RFC 2109. Defaults to current context.</description>
			</init-param>
		-->
		<init-param>
			<param-name>ignorePaths</param-name>
			<param-value>/login,/server,/echo</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>OpenIdFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!--  
	<filter>
		<filter-name>UserUrlFilter</filter-name>
		<description>
			This filter (for Server side) takes url's of the form:
			http://hostname/user/username to provide an id page for each
			user.
		</description>
		<filter-class>examples.server.UserUrlFilter</filter-class>
		<init-param>
			<param-name>idJsp</param-name>
			<param-value>/me.jsp</param-value>
			<description>
				Required. The jsp page used as the identity page.
			</description>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>UserUrlFilter</filter-name>
		<url-pattern>/user/*</url-pattern>
	</filter-mapping>
	
	
	
	-->

	<listener>
		<listener-class>
			org.springframework.web.context.ContextLoaderListener
		</listener-class>
	</listener>
	<listener>
		<listener-class>
			org.lamsfoundation.lams.web.session.SetMaxTimeoutListener
		</listener-class>
	</listener>

	<!--  
	<servlet>
		<servlet-name>joid</servlet-name>
		<servlet-class>examples.server.OpenIdServlet</servlet-class>
	</servlet>

	<servlet>
		<servlet-name>echo</servlet-name>
		<servlet-class>examples.server.EchoServlet</servlet-class>
	</servlet>

	<servlet>
		<servlet-name>loginServlet</servlet-name>
		<servlet-class>
			org.verisign.joid.server.OpenIdServlet
		</servlet-class>
		<init-param>
			<param-name>endPointUrl</param-name>
			<param-value>http://localhost:8080/joid/login</param-value>
		</init-param>
		<init-param>
			<param-name>loginPage</param-name>
			<param-value>login.jsp</param-value>
		</init-param>
		<init-param>
			<param-name>storeClassName</param-name>
			<param-value>
				org.verisign.joid.server.MemoryStore
			</param-value>
		</init-param>
		<init-param>
			<param-name>userManagerClassName</param-name>
			<param-value>
				org.verisign.joid.server.MemoryUserManager
			</param-value>
		</init-param>
	</servlet>

	<servlet-mapping>
		<servlet-name>joid</servlet-name>
		<url-pattern>/server</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>echo</servlet-name>
		<url-pattern>/echo</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>loginServlet</servlet-name>
		<url-pattern>/login</url-pattern>
	</servlet-mapping>
	-->

	<servlet>
		<servlet-name>LoginUsingOpenId</servlet-name>
		<servlet-class>
			org.lamsfoundation.lams.openid.web.LamsOpenIdServlet
		</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>LoginUsingOpenId</servlet-name>
		<url-pattern>/LoginUsingOpenId</url-pattern>
	</servlet-mapping>

	<servlet>
		<servlet-name>RegisterOpenId</servlet-name>
		<servlet-class>
			org.lamsfoundation.lams.openid.web.LamsOpenIdRegisterServlet
		</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>RegisterOpenId</servlet-name>
		<url-pattern>/RegisterOpenId</url-pattern>
	</servlet-mapping>

</web-app>

