<?xml version="1.0" encoding="UTF-8"?>

<project name="LAMS Build" basedir="." default="print-usage">

	<!-- Import properties from the shared and o/s specific files -->
	<property file="common.properties" />
	<property file="build.properties"/>
	<property file="${osPropertiesName}.properties" />
	
	
	<target name="print-usage" description="Displays Ant targets descriptions">
		<echo>
		LAMS main build file
		------------------------------------------------------
		
		Available targets are:
		print-usage               --> Display this information
		copy-tags                 --> Copies custom JSP tags from Central to all other projects
		build-tool-deploy-utility --> Rebuilds Tool deployer and updates copy in lams_build
		build-db                  --> Creates database tables and entries
		deploy-ear                --> Builds and deploys LAMS EAR
		deploy-ear-updater        --> Builds and deploys LAMS EAR for updater
		deploy-tools              --> Standard Tool deployment
		deploy-tools-minimal      --> Deploys only Tools required to run LAMS
		deploy-tools-updater      --> Deploys Tools for updater
		deploy-learning-libraries --> Deploys complex Tools
		lams-cruise               --> Runs full LAMS redeployment
		lams-cruise-min-tools     --> Runs full LAMS redeployment with minimal Tools set
		slim-jboss                --> Removes unused JBoss files
		slim-jboss-revert         --> Puts back JBoss files removed in slimming process
			
		If you want to run full deployment, execute lams-cruise.
		</echo>
	</target>

	
	<target name="_clean-dirs">
		<!-- Internal target: Recreates dirs for compiled output files. -->
		<echo>${ant.project.name}: Removing cache and build folders</echo>
		<delete dir="${server.home}server/default/tmp" />
		<!-- <delete dir="${server.home}server/default/work" /> -->
		<delete dir="assembly" />
		
		<echo>${ant.project.name}: Creating build dir structure</echo>
		<mkdir dir="assembly" />
	</target>

	
	<target name="_clean-core" depends="_clean-dirs">
		<!-- Internal target: Removes output dirs of Core projects -->
		<ant antfile="../lams_common/build.xml"            target="_clean-dirs" inheritAll="false" />
		<ant antfile="../lams_contentrepository/build.xml" target="_clean-dirs" inheritAll="false" />
		<ant antfile="../lams_central/build.xml"           target="_clean-dirs" inheritAll="false" />
		<ant antfile="../lams_learning/build.xml"          target="_clean-dirs" inheritAll="false" />
		<ant antfile="../lams_monitoring/build.xml"        target="_clean-dirs" inheritAll="false" />
		<ant antfile="../lams_admin/build.xml"             target="_clean-dirs" inheritAll="false" />
		<ant antfile="../lams_www/build.xml"               target="_clean-dirs" inheritAll="false" />
		<ant antfile="../lams_gradebook/build.xml"         target="_clean-dirs" inheritAll="false" />
	</target>

	
	<target name="_clean-tools">
		<!-- Internal target: Removes output dirs of Tools -->
		<ant antfile="../lams_tool_assessment/build.xml"    target="_clean-dirs" inheritAll="false"/>
		<ant antfile="../lams_tool_bbb/build.xml"           target="_clean-dirs" inheritAll="false"/>
		<ant antfile="../lams_tool_chat/build.xml"          target="_clean-dirs" inheritAll="false"/>
		<ant antfile="../lams_tool_daco/build.xml"          target="_clean-dirs" inheritAll="false"/>
		<ant antfile="../lams_tool_eadventure/build.xml"    target="_clean-dirs" inheritAll="false"/>
		<ant antfile="../lams_tool_forum/build.xml"         target="_clean-dirs" inheritAll="false"/>
		<ant antfile="../lams_tool_gmap/build.xml"          target="_clean-dirs" inheritAll="false"/>
		<ant antfile="../lams_tool_images/build.xml"        target="_clean-dirs" inheritAll="false"/>
		<ant antfile="../lams_tool_imscc/build.xml"         target="_clean-dirs" inheritAll="false"/>
		<ant antfile="../lams_tool_lamc/build.xml"          target="_clean-dirs" inheritAll="false"/>
		<ant antfile="../lams_tool_laqa/build.xml"          target="_clean-dirs" inheritAll="false"/>
		<ant antfile="../lams_tool_larsrc/build.xml"        target="_clean-dirs" inheritAll="false"/>
		<ant antfile="../lams_tool_leader/build.xml"        target="_clean-dirs" inheritAll="false"/>
		<ant antfile="../lams_tool_nb/build.xml"          	target="_clean-dirs" inheritAll="false"/>
		<ant antfile="../lams_tool_notebook/build.xml"      target="_clean-dirs" inheritAll="false"/>
		<ant antfile="../lams_tool_pixlr/build.xml"         target="_clean-dirs" inheritAll="false"/>
		<ant antfile="../lams_tool_sbmt/build.xml"          target="_clean-dirs" inheritAll="false"/>
		<ant antfile="../lams_tool_scratchie/build.xml"     target="_clean-dirs" inheritAll="false"/>
		<ant antfile="../lams_tool_scribe/build.xml"        target="_clean-dirs" inheritAll="false"/>
		<ant antfile="../lams_tool_spreadsheet/build.xml"   target="_clean-dirs" inheritAll="false"/>
		<ant antfile="../lams_tool_survey/build.xml"        target="_clean-dirs" inheritAll="false"/>
		<ant antfile="../lams_tool_task/build.xml"          target="_clean-dirs" inheritAll="false"/>
		<ant antfile="../lams_tool_videorecorder/build.xml" target="_clean-dirs" inheritAll="false"/>
		<ant antfile="../lams_tool_vote/build.xml"          target="_clean-dirs" inheritAll="false"/>
		<ant antfile="../lams_tool_wiki/build.xml"          target="_clean-dirs" inheritAll="false"/>
       	<ant antfile="../lams_tool_wookie/build.xml"    	target="_clean-dirs" inheritAll="false"/>
		<ant antfile="../lams_tool_kaltura/build.xml"       target="_clean-dirs" inheritAll="false"/>
	</target>
	
	
	<target name="clean-all" depends="_clean-core, _clean-tools" 
		    description="Removes output dirs of Core projects and Tools (used for CruiseControl instance)" />

	
	<target name="copy-tags" description="Copies lams.tld and LAMS Tags from lams-central to other projects.">
		<ant antfile="../lams_admin/build.xml"              target="copy-tags" inheritAll="false"/>
		<ant antfile="../lams_learning/build.xml"           target="copy-tags" inheritAll="false"/>
		<ant antfile="../lams_monitoring/build.xml"         target="copy-tags" inheritAll="false"/>
		<ant antfile="../lams_gradebook/build.xml"          target="copy-tags" inheritAll="false"/>
		<ant antfile="../lams_www/build.xml"                target="copy-tags" inheritAll="false"/>
		<ant antfile="../lams_tool_assessment/build.xml"    target="copy-tags" inheritAll="false"/>
		<ant antfile="../lams_tool_bbb/build.xml"           target="copy-tags" inheritAll="false"/>
		<ant antfile="../lams_tool_chat/build.xml"          target="copy-tags" inheritAll="false"/>
		<ant antfile="../lams_tool_daco/build.xml"          target="copy-tags" inheritAll="false"/>
		<ant antfile="../lams_tool_eadventure/build.xml"    target="copy-tags" inheritAll="false"/>
		<ant antfile="../lams_tool_forum/build.xml"         target="copy-tags" inheritAll="false"/>
		<ant antfile="../lams_tool_gmap/build.xml"          target="copy-tags" inheritAll="false"/>
		<ant antfile="../lams_tool_images/build.xml"        target="copy-tags" inheritAll="false"/>
		<ant antfile="../lams_tool_imscc/build.xml"         target="copy-tags" inheritAll="false"/>
		<ant antfile="../lams_tool_lamc/build.xml"          target="copy-tags" inheritAll="false"/>
		<ant antfile="../lams_tool_laqa/build.xml"          target="copy-tags" inheritAll="false"/>
		<ant antfile="../lams_tool_larsrc/build.xml"        target="copy-tags" inheritAll="false"/>
		<ant antfile="../lams_tool_leader/build.xml"        target="copy-tags" inheritAll="false"/>
		<ant antfile="../lams_tool_nb/build.xml"          	target="copy-tags" inheritAll="false"/>
		<ant antfile="../lams_tool_mindmap/build.xml"       target="copy-tags" inheritAll="false"/>
		<ant antfile="../lams_tool_notebook/build.xml"      target="copy-tags" inheritAll="false"/>
		<ant antfile="../lams_tool_pixlr/build.xml"         target="copy-tags" inheritAll="false"/>
		<ant antfile="../lams_tool_sbmt/build.xml"          target="copy-tags" inheritAll="false"/>
		<ant antfile="../lams_tool_scratchie/build.xml"     target="copy-tags" inheritAll="false"/>
		<ant antfile="../lams_tool_scribe/build.xml"        target="copy-tags" inheritAll="false"/>
		<ant antfile="../lams_tool_spreadsheet/build.xml"   target="copy-tags" inheritAll="false"/>
		<ant antfile="../lams_tool_survey/build.xml"        target="copy-tags" inheritAll="false"/>
		<ant antfile="../lams_tool_task/build.xml"          target="copy-tags" inheritAll="false"/>
		<ant antfile="../lams_tool_videorecorder/build.xml" target="copy-tags" inheritAll="false"/>
		<ant antfile="../lams_tool_vote/build.xml"          target="copy-tags" inheritAll="false"/>
		<ant antfile="../lams_tool_wiki/build.xml"          target="copy-tags" inheritAll="false"/>
        	<ant antfile="../lams_tool_wookie/build.xml"    target="copy-tags" inheritAll="false"/>
		<ant antfile="../lams_tool_kaltura/build.xml"       target="copy-tags" inheritAll="false"/>
		<echo>MANUALLY COPY TAGS TO UNLISTED PROJECTS:
			  Kaltura and other public and private tools</echo>
	</target>

	
	<target name="build-db" description="Rebuilds LAMS Database.">
		<echo>Copying embedded MySQL drivers to library dir, if available</echo>
		<copy todir="../lams_build/lib/mysql" overwrite="false" verbose="true">
			<fileset dir="../mysql_embedded/connectors" erroronmissingdir="false">
				<include name="*-driver.jar" />
				<include name="*-db-files-${osPropertiesName}.jar" />
			</fileset>
		</copy>
		
		<ant antfile="../lams_common/build.xml" target="build-db" inheritAll="false" />
	</target>
	
			
	<target name="_build-core">
		<!-- Internal target: Builds LAMS core projects -->
		<echo>Building LAMS core projects</echo>
		<ant antfile="../lams_common/build.xml"            target="_build-jar"     inheritAll="false" />
		<ant antfile="../lams_contentrepository/build.xml" target="_build-jar"     inheritAll="false" />
		<ant antfile="../lams_central/build.xml"           target="_build-product" inheritAll="false" />
		<ant antfile="../lams_learning/build.xml"          target="_build-product" inheritAll="false" />
		<ant antfile="../lams_monitoring/build.xml"        target="_build-product" inheritAll="false" />
		<ant antfile="../lams_admin/build.xml"             target="_build-product" inheritAll="false" />
		<ant antfile="../lams_www/build.xml"               target="_build-war"     inheritAll="false" />
		<ant antfile="../lams_gradebook/build.xml"         target="_build-product" inheritAll="false" />
	</target>
	
	
	<target name="copy-to-lams-lib"
		    description="Copies LAMS core JARs to lams_build library for other projects to use">
		<echo>Copying LAMS core projects' JARs to lams_build/lib/lams</echo>
		<ant antfile="../lams_common/build.xml"            target="copy-to-lams-lib" inheritAll="false" />
		<ant antfile="../lams_central/build.xml"           target="copy-to-lams-lib" inheritAll="false" />
		<ant antfile="../lams_contentrepository/build.xml" target="copy-to-lams-lib" inheritAll="false" />
		<ant antfile="../lams_learning/build.xml"          target="copy-to-lams-lib" inheritAll="false" />
		<ant antfile="../lams_monitoring/build.xml"        target="copy-to-lams-lib" inheritAll="false" />
		<ant antfile="../lams_admin/build.xml"             target="copy-to-lams-lib" inheritAll="false" />
		<ant antfile="../lams_gradebook/build.xml"         target="copy-to-lams-lib" inheritAll="false" />
	</target>
	
	
	<target name="_build-ear" depends="_clean-dirs, _build-core">
		<!-- Internal target: Assembles LAMS EAR in exploded form -->
		<echo>${ant.project.name}: Copying libraries</echo>
		<copy todir="assembly/lams.ear" flatten="true">
			<fileset dir="..">
				<include name="lams_common/build/lib/lams.jar" />
				<include name="lams_contentrepository/build/lib/*.jar" />
				<include name="lams_central/build/lib/*.jar" />
				<include name="lams_monitoring/build/lib/*.jar"/>
				<include name="lams_monitoring/build/lib/*.war"/>
				<include name="lams_learning/build/lib/*.jar"/>
				<include name="lams_learning/build/lib/*.war"/>
				<include name="lams_admin/build/lib/*.jar"/>
				<include name="lams_admin/build/lib/*.war"/>
				<include name="lams_gradebook/build/lib/*.jar"/>
				<include name="lams_gradebook/build/lib/*.war"/>
			</fileset>
		</copy>
		

		<echo>Copying lams-central.war</echo>
		<copy todir="assembly/lams.ear/lams-central.war">
			<fileset dir="../lams_central/build/lib/lams-central.war" />
		</copy>
		
		<echo>Expanding lams-www.war</echo>
		<unjar src="../lams_www/build/lib/lams-www.war" 
			   dest="assembly/lams.ear/lams-www.war"
		/>
		
		<echo>Copying language files</echo>
		<copy todir="assembly/lams.ear/lams-dictionary.jar">
			<fileset dir="../lams_common/build/lib/language" />
			<fileset dir="../lams_contentrepository/build/lib/language" />
			<fileset dir="../lams_central/build/lib/language" />
			<fileset dir="../lams_monitoring/build/lib/language" />
			<fileset dir="../lams_learning/build/lib/language" />
			<fileset dir="../lams_admin/build/lib/language" />
			<fileset dir="../lams_gradebook/build/lib/language" />
		</copy>

		<echo>Copying EAR configuration files</echo>
		<copy tofile="assembly/lams.ear/META-INF/MANIFEST.MF" verbose="true">
			<fileset dir="${conf.dir}/j2ee">
				<include name="MANIFEST-template.MF" />
			</fileset>
	        <filterset>
	        	<filter token="version" value="${project.version}"/>
	        </filterset>
		</copy>
		
		<copy todir="assembly/lams.ear/META-INF" verbose="true">
			<fileset dir="${conf.dir}/j2ee">
				<include name="*.xml" />
			</fileset>
		</copy>
	</target>

	
	<target name="deploy-ear" depends="_build-ear" description="Deploys EAR.">
		<echo>Deploying EAR</echo>
		<delete dir="${server.home}/standalone/deployments/lams.ear"/>
		<copy todir="${server.home}/standalone/deployments/lams.ear">
			<fileset dir="assembly/lams.ear" />
		</copy>
	</target>
	
	
	<target name="deploy-ear-updater" depends="_build-ear"
		description="Deploys EAR file to the win_installer directory.">
		<echo>Deploying EAR to Windows Installer dir</echo>
		<delete dir="../win_installer/assembly"/>
		<copy todir="../win_installer/assembly/lams.ear">
			<fileset dir="assembly/lams.ear" />
		</copy>
	</target>

	
	<target name="deploy-tools-minimal" description="Deploys minimal set of Tools.">
		<echo>Deploying minimal set of Tools</echo>
  		<ant antfile="../lams_tool_notebook/build.xml" target="deploy-tool" inheritAll="false" />
		<ant antfile="../lams_tool_wiki/build.xml" 	 target="deploy-tool" inheritAll="false" />
	</target>
	
	
	<target name="_deploy-tools">
		<echo>Deploying Tools</echo>
		<ant antfile="../lams_tool_assessment/build.xml"    target="deploy-tool" inheritAll="false" />
		<ant antfile="../lams_tool_bbb/build.xml"           target="deploy-tool" inheritAll="false" />
		<ant antfile="../lams_tool_chat/build.xml"          target="deploy-tool" inheritAll="false" />
		<ant antfile="../lams_tool_daco/build.xml"          target="deploy-tool" inheritAll="false" />
		<ant antfile="../lams_tool_eadventure/build.xml"    target="deploy-tool" inheritAll="false" />
		<ant antfile="../lams_tool_forum/build.xml"         target="deploy-tool" inheritAll="false" />
		<ant antfile="../lams_tool_gmap/build.xml"          target="deploy-tool" inheritAll="false" />
		<ant antfile="../lams_tool_images/build.xml"        target="deploy-tool" inheritAll="false" />
		<ant antfile="../lams_tool_imscc/build.xml"         target="deploy-tool" inheritAll="false" />
		<ant antfile="../lams_tool_lamc/build.xml"          target="deploy-tool" inheritAll="false" />
		<ant antfile="../lams_tool_laqa/build.xml"          target="deploy-tool" inheritAll="false" />
		<ant antfile="../lams_tool_larsrc/build.xml"        target="deploy-tool" inheritAll="false" />
		<ant antfile="../lams_tool_leader/build.xml"        target="deploy-tool" inheritAll="false" />
		<ant antfile="../lams_tool_mindmap/build.xml"       target="deploy-tool" inheritAll="false" />
		<ant antfile="../lams_tool_nb/build.xml"          	target="deploy-tool" inheritAll="false" />
		<ant antfile="../lams_tool_notebook/build.xml"      target="deploy-tool" inheritAll="false" />
		<ant antfile="../lams_tool_pixlr/build.xml"         target="deploy-tool" inheritAll="false" />
		<ant antfile="../lams_tool_sbmt/build.xml"          target="deploy-tool" inheritAll="false" />
		<ant antfile="../lams_tool_scratchie/build.xml"     target="deploy-tool" inheritAll="false" />
		<ant antfile="../lams_tool_scribe/build.xml"        target="deploy-tool" inheritAll="false" />
		<ant antfile="../lams_tool_spreadsheet/build.xml"   target="deploy-tool" inheritAll="false" />
  		<ant antfile="../lams_tool_survey/build.xml"        target="deploy-tool" inheritAll="false" />
  		<ant antfile="../lams_tool_task/build.xml"          target="deploy-tool" inheritAll="false" />
		<ant antfile="../lams_tool_videorecorder/build.xml" target="deploy-tool" inheritAll="false" />
		<ant antfile="../lams_tool_vote/build.xml"          target="deploy-tool" inheritAll="false" />
		<ant antfile="../lams_tool_wiki/build.xml"          target="deploy-tool" inheritAll="false" />
		<ant antfile="../lams_tool_wookie/build.xml"        target="deploy-tool" inheritAll="false" />
		<ant antfile="../lams_tool_kaltura/build.xml"       target="deploy-tool" inheritAll="false" />
	</target>
	

	<target name="deploy-tools" depends="_deploy-tools, deploy-learning-libraries" 
		    description="Deploys LAMS Tools and special parallel activities." />

	
	<target name="_deploy-learning-library">
		<!-- Internal target: Deploys a parallel activity. -->
		
		<path id="deploy.classpath">
			<fileset dir="../lams_build/deploy-tool/lib">
				<include name="*.jar" />
			</fileset>
			<fileset dir="../lams_build/lib">
				<include name="**/*.jar" />
			</fileset>
		</path>
		
		<property name="dictionary.dir" value="" />

		<property name="library.assembly"     value="assembly/${library.name}" />
		<property name="library.basedir"      value="librarypackages/${library.name}" />
		<property name="library.language.src" value="${library.basedir}/language/lams" />
		<property name="library.language.dst" value="${server.home}/standalone/deployments/lams.ear/lams-dictionary.jar/org/lamsfoundation/lams/library/${library.name}" />

		<copy todir="${library.assembly}/sql" overwrite="true" verbose="true">
			<fileset dir="${library.basedir}">
				<include name="*.sql"/>
			</fileset>
		</copy>

		<copy todir="${library.assembly}/language" overwrite="true">
			<fileset dir="${library.language.src}" />
		</copy>

		<echo>Parsing deploy library XML</echo>
		<copy file="${library.basedir}/deployLibrary.xml" tofile="${library.assembly}/deploy.xml" overwrite="true">
		  	<!-- replace @assemblydir@ in the xml template - this allows it to run under any directory structure -->
	        <filterchain>
	            <striplinecomments>
	               <comment value="!"/>
	            </striplinecomments>
	           <replacetokens>
	                <token key="assemblydir" value="${library.assembly}/sql"/>
	            </replacetokens>
	            <replacetokens>
		            <token key="assemblylangdir" value="${library.assembly}/language"/>
		        </replacetokens>
	            <replacetokens>
		             <token key="lamsear" value="${server.home}/standalone/deployments/lams.ear"/>
		        </replacetokens>
	        </filterchain>
	    </copy>

		<echo>Generating properties XML file</echo>
		<taskdef name="generateDeployLibraryProperties" 
			classname="org.lamsfoundation.lams.tool.deploy.libraryActivity.CreateLibraryPackageTask">
		    <classpath refid="deploy.classpath"/>
		</taskdef>
		<generateDeployLibraryProperties depends="compile" 
			mode="development" 
			outputPath="${library.assembly}"
			configFile="${library.assembly}/deploy.xml"
			dbPassword="${db.password}"
			dbUsername="${db.username}"
			dbDriverUrl="${db.url.build}"
			dbDriverClass="com.mysql.jdbc.Driver"	
		/>
	
		<echo>Deploying language files</echo>
		<copy todir="${library.language.dst}" overwrite="true">
			<fileset dir="${library.language.src}" />
		</copy>

		<java
			classname="org.lamsfoundation.lams.tool.deploy.libraryActivity.DeployLibrary"
			classpathref="deploy.classpath"
			fork="true">
				<arg file="${library.assembly}/deploy.xml"/>
				<arg file="${library.assembly}/language"/>
		</java>
	</target>
	
	
	<target name="deploy-learning-libraries"
		    description="Builds and deploys parallel and other complex activities. Can be done only after Tools are deployed">
		<echo>${ant.project.name}: Deploying Library Activities</echo>

		<echo>Generating deployment package for share resources / forum parallel activity</echo>
		<antcall target="_deploy-learning-library">
			<param name="library.name" value="shareresourcesforum"/>
		</antcall> 
 
		<echo>Generating deployment package for chat / scribe parallel activity</echo>
		<antcall target="_deploy-learning-library">
			<param name="library.name" value="chatscribe"/>
		</antcall> 

		<echo>Generating deployment package for forum / scribe parallel activity</echo>
		<antcall target="_deploy-learning-library">
			<param name="library.name" value="forumscribe"/>
		 </antcall> 
	</target>


	<target name="_deploy-resources">
		<!-- Internal target: Deploys third party JARs and cofiguration files -->
		<echo>${ant.project.name}: Deploying libraries as WildFly modules</echo>
		
		<copy todir="${server.home}/modules/system/layers/base/org/apache/poi/main" overwrite="true" verbose="true">
			<fileset dir="lib/apache-poi">
				<include name="poi-*.jar" />
			</fileset>
		</copy>
		<copy tofile="${server.home}/modules/system/layers/base/org/apache/poi/main/module.xml"
			  file="lib/apache-poi/poi.module.xml" overwrite="true" verbose="true" />
		
		<copy todir="${server.home}/modules/system/layers/base/org/apache/xmlbeans/main" overwrite="true" verbose="true">
			<fileset dir="lib/apache-poi">
				<include name="xmlbeans-*.jar" />
			</fileset>
		</copy>
		<copy tofile="${server.home}/modules/system/layers/base/org/apache/xmlbeans/main/module.xml"
			  file="lib/apache-poi/xmlbeans.module.xml" overwrite="true" verbose="true" />
		
		
		
		<copy todir="${server.home}/modules/system/layers/base/org/xbill/dns/main" overwrite="true" verbose="true">
			<fileset dir="lib/aspirin">
				<include name="dnsjava-*.jar" />
			</fileset>
		</copy>
		<copy tofile="${server.home}/modules/system/layers/base/org/xbill/dns/main/module.xml"
			  file="lib/aspirin/dnsjava.module.xml" overwrite="true" verbose="true" />
		
		<copy todir="${server.home}/modules/system/layers/base/org/apache/aspirin/main" overwrite="true" verbose="true">
			<fileset dir="lib/aspirin">
				<include name="aspirin.jar" />
			</fileset>
		</copy>
		<copy tofile="${server.home}/modules/system/layers/base/org/apache/aspirin/main/module.xml"
			  file="lib/aspirin/aspirin.module.xml" overwrite="true" verbose="true" />
		
		
		
		<copy todir="${server.home}/modules/system/layers/base/com/tacitknowledge/autopatch/main" overwrite="true" verbose="true">
			<fileset dir="lib/autopatch">
				<include name="tk-*.jar" />
			</fileset>
		</copy>
		<copy tofile="${server.home}/modules/system/layers/base/com/tacitknowledge/autopatch/main/module.xml"
			  file="lib/autopatch/autopatch.module.xml" overwrite="true" verbose="true" />
		
		
		
		<copy todir="${server.home}/modules/system/layers/base/javax/wsdl4j/api/1.5" overwrite="true" verbose="true">
			<fileset dir="lib/axis">
				<include name="wsdl4j-*.jar" />
			</fileset>
		</copy>
		<copy tofile="${server.home}/modules/system/layers/base/javax/wsdl4j/api/1.5/module.xml"
			  file="lib/axis/wsdl4j.module.xml" overwrite="true" verbose="true" />
		
		<copy todir="${server.home}/modules/system/layers/base/org/apache/axis/main" overwrite="true" verbose="true">
			<fileset dir="lib/axis">
				<include name="axis*.jar" />
			</fileset>
		</copy>
		<copy tofile="${server.home}/modules/system/layers/base/org/apache/axis/main/module.xml"
			  file="lib/axis/axis.module.xml" overwrite="true" verbose="true" />
		
		
		
		<copy todir="${server.home}/modules/system/layers/base/org/apache/batik/main" overwrite="true" verbose="true">
			<fileset dir="lib/batik">
				<include name="batik-*.jar" />
			</fileset>
		</copy>
		<copy tofile="${server.home}/modules/system/layers/base/org/apache/batik/main/module.xml"
			  file="lib/batik/batik.module.xml" overwrite="true" verbose="true" />
		
		
		
		<copy todir="${server.home}/modules/system/layers/base/net/sf/cglib/main" overwrite="true" verbose="true">
			<fileset dir="lib/cglib">
				<include name="cglib_*.jar" />
			</fileset>
		</copy>
		<copy tofile="${server.home}/modules/system/layers/base/net/sf/cglib/main/module.xml"
			  file="lib/cglib/cglib.module.xml" overwrite="true" verbose="true" />
		
		
		
		<copy todir="${server.home}/modules/system/layers/base/net/fckeditor/main" overwrite="true" verbose="true">
			<fileset dir="lib/fckeditor">
				<include name="fckeditor-*.jar" />
			</fileset>
		</copy>
		<copy tofile="${server.home}/modules/system/layers/base/net/fckeditor/main/module.xml"
			  file="lib/fckeditor/fckeditor.module.xml" overwrite="true" verbose="true" />
		
		
		
		<copy todir="${server.home}/modules/system/layers/base/com/flagstone/main" overwrite="true" verbose="true">
			<fileset dir="lib/flagstone">
				<include name="*.jar" />
			</fileset>
		</copy>
		<copy tofile="${server.home}/modules/system/layers/base/com/flagstone/main/module.xml"
			  file="lib/flagstone/flagstone.module.xml" overwrite="true" verbose="true" />
		
		
		
		<copy todir="${server.home}/modules/system/layers/base/org/apache/commons/digester/main" overwrite="true" verbose="true">
			<fileset dir="lib/jakarta-commons">
				<include name="commons-digester*.jar" />
			</fileset>
		</copy>
		<copy tofile="${server.home}/modules/system/layers/base/org/apache/commons/digester/main/module.xml"
			  file="lib/jakarta-commons/digester.module.xml" overwrite="true" verbose="true" />
		
		<copy todir="${server.home}/modules/system/layers/base/org/apache/commons/fileupload/main" overwrite="true" verbose="true">
			<fileset dir="lib/jakarta-commons">
				<include name="commons-fileupload.jar" />
			</fileset>
		</copy>
		<copy tofile="${server.home}/modules/system/layers/base/org/apache/commons/fileupload/main/module.xml"
			  file="lib/jakarta-commons/fileupload.module.xml" overwrite="true" verbose="true" />
		
		<copy todir="${server.home}/modules/system/layers/base/org/apache/commons/httpclient/main" overwrite="true" verbose="true">
			<fileset dir="lib/jakarta-commons">
				<include name="commons-httpclient-*.jar" />
			</fileset>
		</copy>
		<copy tofile="${server.home}/modules/system/layers/base/org/apache/commons/httpclient/main/module.xml"
			  file="lib/jakarta-commons/httpclient.module.xml" overwrite="true" verbose="true" />
		
		<copy todir="${server.home}/modules/system/layers/base/org/apache/commons/validator/main" overwrite="true" verbose="true">
			<fileset dir="lib/jakarta-commons">
				<include name="commons-validator.jar" />
			</fileset>
		</copy>
		<copy tofile="${server.home}/modules/system/layers/base/org/apache/commons/validator/main/module.xml"
			  file="lib/jakarta-commons/validator.module.xml" overwrite="true" verbose="true" />
		
		
		
		<copy todir="${server.home}/modules/system/layers/base/org/hibernate/cache/main" overwrite="true" verbose="true">
			<fileset dir="lib/jboss">
				<include name="hibernate-jbosscache*.jar" />
			</fileset>
		</copy>
		<copy tofile="${server.home}/modules/system/layers/base/org/hibernate/cache/main/module.xml"
			  file="lib/jboss/hibernate-jbosscache.module.xml" overwrite="true" verbose="true" />
		
		<copy todir="${server.home}/modules/system/layers/base/org/jboss/cache/main" overwrite="true" verbose="true">
			<fileset dir="lib/jboss">
				<include name="jbosscache-core.jar" />
			</fileset>
		</copy>
		<copy tofile="${server.home}/modules/system/layers/base/org/jboss/cache/main/module.xml"
			  file="lib/jboss/jbosscache-core.module.xml" overwrite="true" verbose="true" />
		
		<copy todir="${server.home}/modules/system/layers/base/org/jgroups/main" overwrite="true" verbose="true">
			<fileset dir="lib/jboss">
				<include name="jgroups-all.jar" />
			</fileset>
		</copy>
		<copy tofile="${server.home}/modules/system/layers/base/org/jgroups/main/module.xml"
			  file="lib/jboss/jgroups.module.xml" overwrite="true" verbose="true" />
		
		<copy todir="${server.home}/modules/system/layers/base/org/jboss/jbossweb/main" overwrite="true" verbose="true">
			<fileset dir="lib/jboss">
				<include name="jbossweb.jar" />
			</fileset>
		</copy>
		<copy tofile="${server.home}/modules/system/layers/base/org/jboss/jbossweb/main/module.xml"
			  file="lib/jboss/jbossweb.module.xml" overwrite="true" verbose="true" />
		
		
		
		<copy todir="${server.home}/modules/system/layers/base/org/jdom/0.7" overwrite="true" verbose="true">
			<fileset dir="lib/jdom">
				<include name="jdom.jar" />
			</fileset>
		</copy>
		<copy tofile="${server.home}/modules/system/layers/base/org/jdom/0.7/module.xml"
			  file="lib/jdom/jdom.module.xml" overwrite="true" verbose="true" />
		
		
		
		<copy todir="${server.home}/modules/system/layers/base/org/verisign/joid/main" overwrite="true" verbose="true">
			<fileset dir="lib/joid">
				<include name="joid.jar" />
			</fileset>
		</copy>
		<copy tofile="${server.home}/modules/system/layers/base/org/verisign/joid/main/module.xml"
			  file="lib/joid/joid.module.xml" overwrite="true" verbose="true" />
		
		
		
		<copy todir="${server.home}/modules/system/layers/base/com/google/gson/main" overwrite="true" verbose="true">
			<fileset dir="lib/json">
				<include name="gson-*.jar" />
			</fileset>
		</copy>
		<copy tofile="${server.home}/modules/system/layers/base/com/google/gson/main/module.xml"
			  file="lib/json/gson.module.xml" overwrite="true" verbose="true" />
		
		
		
		<copy todir="${server.home}/modules/system/layers/base/org/apache/lucene/2.4" overwrite="true" verbose="true">
			<fileset dir="lib/lucene">
				<include name="lucene-*.jar" />
			</fileset>
		</copy>
		<copy tofile="${server.home}/modules/system/layers/base/org/apache/lucene/2.4/module.xml"
			  file="lib/lucene/lucene.module.xml" overwrite="true" verbose="true" />
		
		
		
		<copy todir="${server.home}/modules/system/layers/base/com/mysql/main" overwrite="true" verbose="true">
			<fileset dir="lib/mysql">
				<include name="mysql-connector-java-*.jar" />
			</fileset>
		</copy>
		<copy tofile="${server.home}/modules/system/layers/base/com/mysql/main/module.xml"
			  file="lib/mysql/mysql-connector-java.module.xml" overwrite="true" verbose="true" />
		
		
		
		<copy todir="${server.home}/modules/system/layers/base/org/quartz/main" overwrite="true" verbose="true">
			<fileset dir="lib/quartz">
				<include name="quartz.jar" />
			</fileset>
		</copy>
		<copy tofile="${server.home}/modules/system/layers/base/org/quartz/main/module.xml"
			  file="lib/quartz/quartz.module.xml" overwrite="true" verbose="true" />
		
		
		
		<copy todir="${server.home}/modules/system/layers/base/uk/ac/reload/main" overwrite="true" verbose="true">
			<fileset dir="lib/reload">
				<include name="reload-*.jar" />
			</fileset>
		</copy>
		<copy tofile="${server.home}/modules/system/layers/base/uk/ac/reload/main/module.xml"
			  file="lib/reload/reload.module.xml" overwrite="true" verbose="true" />
		
		
		
		<copy todir="${server.home}/modules/system/layers/base/org/springframework/main" overwrite="true" verbose="true">
			<fileset dir="lib/spring">
				<include name="*.jar" />
			</fileset>
		</copy>
		<copy tofile="${server.home}/modules/system/layers/base/org/springframework/main/module.xml"
			  file="lib/spring/spring.module.xml" overwrite="true" verbose="true" />
		
		
		
		<copy todir="${server.home}/modules/system/layers/base/org/apache/oro/main" overwrite="true" verbose="true">
			<fileset dir="lib/struts">
				<include name="jakarta-oro.jar" />
			</fileset>
		</copy>
		<copy tofile="${server.home}/modules/system/layers/base/org/apache/oro/main/module.xml"
			  file="lib/struts/jakarta-oro.module.xml" overwrite="true" verbose="true" />
		
		<copy todir="${server.home}/modules/system/layers/base/org/apache/struts/main" overwrite="true" verbose="true">
			<fileset dir="lib/struts">
				<include name="struts.jar" />
			</fileset>
		</copy>
		<copy tofile="${server.home}/modules/system/layers/base/org/apache/struts/main/module.xml"
			  file="lib/struts/struts.module.xml" overwrite="true" verbose="true" />
		
		<copy todir="${server.home}/modules/system/layers/base/org/apache/strutsel/main" overwrite="true" verbose="true">
			<fileset dir="lib/struts">
				<include name="struts-el.jar" />
			</fileset>
		</copy>
		<copy tofile="${server.home}/modules/system/layers/base/org/apache/strutsel/main/module.xml"
			  file="lib/struts/struts-el.module.xml" overwrite="true" verbose="true" />
		
		
		
		<copy todir="${server.home}/modules/system/layers/base/org/tuckey/urlrewrite/main" overwrite="true" verbose="true">
			<fileset dir="lib/urlrewritefilter">
				<include name="urlrewrite-*.jar" />
			</fileset>
		</copy>
		<copy tofile="${server.home}/modules/system/layers/base/org/tuckey/urlrewrite/main/module.xml"
			  file="lib/urlrewritefilter/urlrewrite.module.xml" overwrite="true" verbose="true" />
			  	
		
			  	
		<copy todir="${server.home}/modules/system/layers/base/com/allaire/wddx/main" overwrite="true" verbose="true">
			<fileset dir="lib/wddx">
				<include name="wddx.jar" />
			</fileset>
		</copy>
		<copy tofile="${server.home}/modules/system/layers/base/com/allaire/wddx/main/module.xml"
			  file="lib/wddx/wddx.module.xml" overwrite="true" verbose="true" />
		
		
		
		<copy todir="${server.home}/modules/system/layers/base/org/apache/xmlcommons/main" overwrite="true" verbose="true">
			<fileset dir="lib/xml-commons">
				<include name="xml-apis*.jar" />
			</fileset>
		</copy>
		<copy tofile="${server.home}/modules/system/layers/base/org/apache/xmlcommons/main/module.xml"
			  file="lib/xml-commons/xmlcommons.module.xml" overwrite="true" verbose="true" />
		
		
		
		<copy todir="${server.home}/modules/system/layers/base/org/xmlpull/main" overwrite="true" verbose="true">
			<fileset dir="lib/xstream">
				<include name="xpp3-*.jar" />
			</fileset>
		</copy>
		<copy tofile="${server.home}/modules/system/layers/base/org/xmlpull/main/module.xml"
			  file="lib/xstream/xpp.module.xml" overwrite="true" verbose="true" />
		
		<copy todir="${server.home}/modules/system/layers/base/org/joda/time/2.1" overwrite="true" verbose="true">
			<fileset dir="lib/xstream">
				<include name="joda-time-*.jar" />
			</fileset>
		</copy>
		<copy tofile="${server.home}/modules/system/layers/base/org/joda/time/2.1/module.xml"
			  file="lib/xstream/joda.module.xml" overwrite="true" verbose="true" />
		
		<copy todir="${server.home}/modules/system/layers/base/com/thoughtworks/xstream/main" overwrite="true" verbose="true">
			<fileset dir="lib/xstream">
				<include name="xstream-*.jar" />
			</fileset>
		</copy>
		<copy tofile="${server.home}/modules/system/layers/base/com/thoughtworks/xstream/main/module.xml"
			  file="lib/xstream/xstream.module.xml" overwrite="true" verbose="true" />
		

		
		<ant antfile="../lams_common/build.xml" target="deploy-libraries" inheritAll="false"/>
		
		
		
		<echo>${ant.project.name}: Deploying configuration files</echo>
		<copy todir="${server.home}/standalone/configuration" overwrite="true" verbose="true">
			<fileset dir="${conf.dir}">
				<include name="standalone.xml" />
			</fileset>
	        <filterset>
	        	<filter token="db.url.run" value="${db.url.run}"/>
	        	<filter token="db.location" value="${db.location}"/>
                <filter token="db.username" value="${db.username}"/>
                <filter token="db.password" value="${db.password}"/>
	        </filterset>
		</copy>
		
		<!-- Mark EAR for WildFly deployment -->
		<delete >
			<fileset dir="${server.home}/standalone/deployments" includes="lams.ear.*"/>
		</delete>
		<touch file="${server.home}/standalone/deployments/lams.ear.dodeploy" />

		<!-- 
		<copy todir="${server.home}/standalone/configuration" overwrite="true" verbose="true">
			<fileset dir="${conf.dir}/${osPropertiesName}/jboss">
				<include name="login-config.xml" />
				<include name="jboss-service.xml" />
			</fileset>
	        <filterset>
	                <filter token="confdir" value="${server.home}/standalone/configuration" />
	        </filterset>
		</copy>
		
		<copy todir="${server.home}/standalone/deployments/lams.ear" overwrite="true" verbose="true">
			<fileset dir="${conf.dir}/${osPropertiesName}/jboss/service">
				<include name="treecache.xml" />
			</fileset>
		</copy>
		
		<copy todir="${server.home}/standalone/deploymentsers/jbossweb.deployer/META-INF" overwrite="true" verbose="true">
			<fileset dir="${conf.dir}/${osPropertiesName}/jboss/jbossweb">
				<include name="war-deployers-jboss-beans.xml" />
			</fileset>
		</copy>
		
		<copy todir="${server.home}/standalone/deployments/jbossweb.sar/" overwrite="true" verbose="true">
			<fileset dir="${conf.dir}/${osPropertiesName}/jboss/jbossweb">
				<include name="server.xml" />
				<include name="context.xml" />
			</fileset>
		</copy>
		
		<copy todir="${server.home}server/default/lib" overwrite="true">	
			<fileset dir="lib/jboss">
				<include name="*.jar" />
			</fileset>
		</copy>
		-->
	</target>
	
	
	<!-- cruise control task : build lams -->
	<target name="lams-cruise" depends="_build-ear, build-db, deploy-ear, _deploy-resources, deploy-tools"
		    description="Builds entire LAMS (used for CruiseControl instance)" />
	
	
	<!-- cruise control task : build lams without tools -->
	<target name="lams-cruise-min-tools" depends="_build-ear, build-db, deploy-ear, _deploy-resources, deploy-tools-minimal"
	        description="Builds entire LAMS without tools (used for CruiseControl instance)" />
	
	
	<target name="slim-jboss" description="Makes a backup and removes unnecessary files from JBoss 5.1; do not run twice!">
		<!-- Fail until it's ready for WildFly -->
		<fail />
		
		<!-- Backup -->
		<copy todir="${server.home}server/default/slim-backup/server/default/deploy">
			<fileset dir="${server.home}/standalone/deployments/">
				<include name="ejb*.xml"/>
				<include name="jms-ra.rar"/>
				<include name="quartz-ra.rar"/>
				<include name="mail*"/>
				<include name="schedule*.xml"/>
				<include name="hsqldb-ds.xml"/>
				<include name="hdscanner-jboss-beans.xml"/>
				<include name="jboss-xa-jdbc.rar"/>
				<include name="sqlexception-service.xml"/>
				<include name="legacy-invokers-service.xml"/>
				<include name="jsr88-service.xml"/>
				<include name="monitoring-service.xml"/>
				<include name="profileservice-jboss-beans.xml"/>
				<include name="transaction-service.xml"/>
				
				<include name="profileservice-secured.jar/"/>
				<include name="uuid-key-generator.sar/"/>
				<include name="messaging/"/>
				<include name="jbossws.sar/"/>	
				<include name="admin-console.war/"/>
				<include name="jmx-remoting.sar/"/>
                <include name="jmx-console.war/"/>	
				<include name="xnio-provider.jar/"/>
				<include name="http-invoker.sar/"/>
                <include name="management/"/>
				<include name="ROOT.war/"/>
			</fileset>
		</copy>
		
		<copy todir="${server.home}server/default/slim-backup/server/default/deployers">
			<fileset dir="${server.home}/standalone/deploymentsers">
				<include name="ejb3-timerservice-jboss-beans.xml"/>
				<include name="jboss-ejb3-endpoint-deployer.jar"/>
				<include name="ejb-deployer-jboss-beans.xml"/>
				<include name="messaging-definitions-jboss-beans.xml"/>
				<include name="hibernate-deployer-jboss-beans.xml"/>
				<include name="jsr77-deployers-jboss-beans.xml"/>
				<include name="logbridge-jboss-beans.xml"/>
				<include name="clustering-deployer-jboss-beans.xml"/>
				
				<include name="bsh.deployer/"/>
				<include name="jbossws.deployer/"/>
				<include name="seam.deployer/"/>
				<include name="xnio.deployer/"/>
				<include name="webbeans.deployer/"/>
			</fileset>
		</copy>
		
		<copy todir="${server.home}server/default/slim-backup/server/default/deployers/jbossweb.deployer"
			  file="${server.home}/standalone/deploymentsers/jbossweb.deployer/web.xml"/>
		<copy todir="${server.home}server/default/slim-backup/server/default/deployers/jbossweb.deployer/META-INF"
			  file="${server.home}/standalone/deploymentsers/jbossweb.deployer/META-INF/war-deployers-jboss-beans.xml"/>
		
		<copy todir="${server.home}server/default/slim-backup/server/default/conf">
			<fileset dir="${server.home}/standalone/configuration">
				<include name="bootstrap.xml"/>
				<include name="standardjboss.xml"/>
				<include name="jax-ws-catalog.xml"/>
				<include name="chap8.keystore"/>	
			</fileset>
		</copy>
		
		<copy todir="${server.home}server/default/slim-backup/server/default/conf/props">
			<fileset dir="${server.home}/standalone/configuration/props">
				<include name="messaging-*.properties"/>
				<include name="jbossws-*.properties"/>
			</fileset>
		</copy>
		
		<copy todir="${server.home}server/default/slim-backup/server/default/conf/bootstrap">
			<fileset dir="${server.home}/standalone/configuration/bootstrap">
				<include name="deployers.xml"/>
			</fileset>
		</copy>
		
		<copy todir="${server.home}server/default/slim-backup/server/">
			<fileset dir="${jboss.server}">
				<include name="all/"/>
				<include name="minimal"/>
				<include name="standard"/>
				<include name="web"/>
			</fileset>
		</copy>
		
		<copy todir="${server.home}server/default/slim-backup/bin/">
			<fileset dir="${server.home}/bin">
				<include name="password_tool.sh"/>
				<include name="probe*"/>
				<include name="twiddle*"/>
				<include name="ws*"/>
			</fileset>
		</copy>
		
		<copy todir="${server.home}server/default/slim-backup/common/lib/">
			<fileset dir="${server.home}/common/lib">
				<include name="antlr.jar"/>
				<include name="autonumber-plugin.jar"/>
				<include name="bcel.jar"/>
				<include name="bsf.jar"/>
				<include name="bsh.jar"/>
				<include name="commons-collections.jar"/>
				<include name="commons-logging.jar"/>
				<include name="dtdparser121.jar"/>
				<include name="hibernate-jmx.jar"/>
				<include name="hibernate-validator.jar"/>
				<include name="hsqldb.jar"/>
				<include name="hsqldb-plugin.jar"/>
				<include name="jbossas-remoting.jar"/>
				<include name="jbossha.jar"/>
				<include name="jboss-iiop.jar"/>
				<include name="jboss-jaspi-api.jar"/>
				<include name="jboss-jsr77.jar"/>
				<include name="jbossjts-jacorb.jar"/>
				<include name="jboss-management.jar"/>
				<include name="jboss-messaging.jar"/>
				<include name="jboss-messaging-int.jar"/>
				<include name="jboss-monitoring.jar"/>
				<include name="jboss-negotiation.jar"/>
				<include name="jboss-profileservice.jar"/>
				<include name="jboss-remoting-aspects.jar"/>
				<include name="jboss-security-aspects.jar"/>
				<include name="jboss-srp.jar"/>
				<include name="jbossws-native-*.jar"/>
				<include name="log4j-snmp-appender.jar"/>
				<include name="mail-plugin.jar"/>
				<include name="scheduler-*.jar"/>
				<include name="xnio-api.jar"/>
			</fileset>
		</copy>
		
		<copy todir="${server.home}server/default/slim-backup/">
			<fileset dir="${server.home}/">
				<include name="jar-versions.xml"/>
				<include name="readme.html"/>
				<include name="docs/"/>
			</fileset>
		</copy>
		
		<!-- Reconfiguration -->
		<copy overwrite="yes" file="conf/slim/bootstrap.xml" tofile="${server.home}/standalone/configuration/bootstrap.xml"/>
		<copy overwrite="yes" file="conf/slim/standardjboss.xml" tofile="${server.home}/standalone/configuration/standardjboss.xml"/>
		<copy overwrite="yes" file="conf/slim/deployers.xml" tofile="${server.home}/standalone/configuration/bootstrap/deployers.xml"/>
		<copy overwrite="yes" file="conf/slim/legacy-invokers-service.xml" tofile="${server.home}/standalone/deployments/legacy-invokers-service.xml"/>
		<copy overwrite="yes" file="conf/slim/war-deployers-jboss-beans.xml"
			                  tofile="${server.home}/standalone/deploymentsers/jbossweb.deployer/META-INF/war-deployers-jboss-beans.xml"/>
		<copy overwrite="yes" file="conf/slim/web.xml"
				              tofile="${server.home}/standalone/deploymentsers/jbossweb.deployer/web.xml"/>
		
		<!-- Delete files -->
		<delete includeemptydirs="true" verbose="true">
		    <fileset dir="${server.home}/standalone/deployments">
				<include name="ejb*.xml"/>
				<include name="jms-ra.rar"/>
				<include name="quartz-ra.rar"/>
				<include name="mail*"/>
				<include name="schedule*.xml"/>
				<include name="hsqldb-ds.xml"/>
				<include name="hdscanner-jboss-beans.xml"/>
				<include name="jboss-xa-jdbc.rar"/>
				<include name="sqlexception-service.xml"/>
				<include name="jsr88-service.xml"/>
				<include name="monitoring-service.xml"/>
				<include name="profileservice-jboss-beans.xml"/>
				<include name="transaction-service.xml"/>
				
				<include name="profileservice-secured.jar/"/>
				<include name="uuid-key-generator.sar/"/>
				<include name="messaging/"/>
				<include name="jbossws.sar/"/>	
				<include name="admin-console.war/"/>
				<include name="jmx-remoting.sar/"/>
                <include name="jmx-console.war/"/>	
				<include name="xnio-provider.jar/"/>
				<include name="http-invoker.sar/"/>
                <include name="management/"/>
				<include name="ROOT.war/"/>
		    </fileset>
			<fileset dir="${server.home}/standalone/deploymentsers">
				<include name="ejb3-timerservice-jboss-beans.xml"/>
				<include name="jboss-ejb3-endpoint-deployer.jar"/>
				<include name="ejb-deployer-jboss-beans.xml"/>
				<include name="messaging-definitions-jboss-beans.xml"/>
				<include name="hibernate-deployer-jboss-beans.xml"/>
				<include name="jsr77-deployers-jboss-beans.xml"/>
				<include name="logbridge-jboss-beans.xml"/>
				<include name="clustering-deployer-jboss-beans.xml"/>
				
				<include name="bsh.deployer/"/>
				<include name="jbossws.deployer/"/>
				<include name="seam.deployer/"/>
				<include name="xnio.deployer/"/>
				<include name="webbeans.deployer/"/>
			</fileset>
			<fileset dir="${server.home}/standalone/configuration">
				<include name="jax-ws-catalog.xml"/>
				<include name="chap8.keystore"/>	
			</fileset>
			<fileset dir="${server.home}/standalone/configuration/props">
				<include name="messaging-*.properties"/>
				<include name="jbossws-*.properties"/>
			</fileset>
			<fileset dir="${jboss.server}">
				<include name="all/"/>
				<include name="minimal/"/>
				<include name="standard/"/>
				<include name="web/"/>
			</fileset>
		    <fileset dir="${server.home}/bin">
				<include name="password_tool.sh"/>
				<include name="probe*"/>
				<include name="twiddle*"/>
				<include name="ws*"/>
		    </fileset>
			<fileset dir="${server.home}/common/lib">
				<include name="antlr.jar"/>
				<include name="autonumber-plugin.jar"/>
				<include name="bcel.jar"/>
				<include name="bsf.jar"/>
				<include name="bsh.jar"/>
				<include name="commons-collections.jar"/>
				<include name="commons-logging.jar"/>
				<include name="dtdparser121.jar"/>
				<include name="hibernate-jmx.jar"/>
				<include name="hibernate-validator.jar"/>
				<include name="hsqldb.jar"/>
				<include name="hsqldb-plugin.jar"/>
				<include name="jbossas-remoting.jar"/>
				<include name="jbossha.jar"/>
				<include name="jboss-iiop.jar"/>
				<include name="jboss-jaspi-api.jar"/>
				<include name="jboss-jsr77.jar"/>
				<include name="jbossjts-jacorb.jar"/>
				<include name="jboss-management.jar"/>
				<include name="jboss-messaging.jar"/>
				<include name="jboss-messaging-int.jar"/>
				<include name="jboss-monitoring.jar"/>
				<include name="jboss-negotiation.jar"/>
				<include name="jboss-profileservice.jar"/>
				<include name="jboss-remoting-aspects.jar"/>
				<include name="jboss-security-aspects.jar"/>
				<include name="jboss-srp.jar"/>
				<include name="jbossws-native-*.jar"/>
				<include name="log4j-snmp-appender.jar"/>
				<include name="mail-plugin.jar"/>
				<include name="scheduler-*.jar"/>
				<include name="xnio-api.jar"/>
			</fileset>
		    <fileset dir="${server.home}">
				<include name="docs/"/>
				<include name="jar-versions.xml"/>
				<include name="readme.html"/>
		    </fileset>
		</delete>
	</target>
	
	
	<target name="slim-jboss-revert" description="Reverts changes made by slim-jboss task">
		<!-- Fail until it's ready for WildFly -->
		<fail />
			
		<copy overwrite="yes" todir="${server.home}" verbose="true">
			<fileset dir="${server.home}server/default/slim-backup/">
				<include name="*/**"/>
			</fileset>
		</copy>
	</target>
</project>
