<?xml version="1.0" encoding="UTF-8"?>

<project name="LAMS-Build" default="usage" basedir=".">

	<!-- import properties from the shared and o/s specific files -->
	<property file="common.properties" />
	<property file="shared.properties" />
	<property file="${osPropertiesName}.properties" />

	<target name="init">
		<mkdir dir="${assembly}" />
	</target>

	<target name="usage" description="print usage message">
		<echo>------------ Utility Methods ------------------------</echo>
		<echo>usage: this message</echo>
		<echo>clean-core: clean sub project from LAMS Core</echo>
		<echo>clean-tools: clean LAMS tools</echo>
		<echo>clean-all: clean tools and core</echo>
		<echo>build-subprojects: build sub projects</echo>
		<echo>build-tool-deploy-utility: build the tool_deploy utility and update copy in lams_build</echo>
		<echo>------------ Build/Deploy LAMS  ------------------------</echo>
		<echo>assemble-ear: assemble ear structure</echo>
		<echo>deploy-ear: copy ear to local jboss server</echo>
		<echo>copyfiles: copy configuration files to local jboss server</echo>
		<echo>----------------------------------------------------------</echo>
		<echo>To deploy LAMS:</echo>
		<echo>   1. copyfiles (this only needs to be done once, or when basic configuration the files change)</echo>
		<echo>   2. assemble-ear</echo>
		<echo>   3. manually refresh the project</echo>
		<echo>   4. deploy-ear</echo>
		<echo>   5. deploy-tools</echo>
		<echo>Do not try to assemble and deploy in the same run - if you do,</echo>
		<echo>Eclipse may not deploy all of the newly created files.</echo>
	</target>

	<!-- clean all LAMS -->

	<target name="clean-all" description="cleans all projects including core" depends="clean-core, clean-tools" />


	<!-- clean all core projects -->
	
	<target name="clean-core" description="Cleans Core projects">
		<ant antfile="../${lams_common}/build.xml" target="clean" inheritAll="false" />
		<ant antfile="../${lams_contentrepository}/build.xml" target="clean-build" inheritAll="false" />
		<ant antfile="../${lams_central}/build.xml" target="clean" />
		<ant antfile="../${lams_learning}/build.xml" target="clean" />
		<ant antfile="../${lams_monitoring}/build.xml"  target="clean" />
		<ant antfile="../${lams_admin}/build.xml" target="clean" />
		<ant antfile="../${lams_www}/build.xml" target="clean" />
		<ant antfile="../${lams_gradebook}/build.xml" target="clean" />
		<ant antfile="../${lams_gradebook}/build.xml" target="clean" />
		<!-- clean dirs for this script only -->
		 <delete dir="./build"></delete>
       		<delete dir="${assembly}"></delete>
        	<delete dir="${jboss.server.instance}/tmp"></delete>
        	<delete dir="${jboss.server.instance}/work"></delete>
	</target>
		
	<!-- clean all tools -->

	<target name="clean-tools" description="Cleans all tool projects">
			<ant antfile="../${tool_forum_dir}/build.xml" target="clean" />
			<ant antfile="../${tool_lanb_dir}/build.xml" target="clean-build" />
			<ant antfile="../${tool_laqa_dir}/build.xml" target="clean" />
			<ant antfile="../${tool_sbmt_dir}/build.xml" target="clean" />
	  		<ant antfile="../${tool_chat_dir}/build.xml" target="clean-build" />
			<ant antfile="../${tool_larsrc_dir}/build.xml" target="clean" />
	 		<ant antfile="../${tool_vote_dir}/build.xml" target="clean" />
	  		<ant antfile="../${tool_notebook_dir}/build.xml" target="clean-build" />
	  		<ant antfile="../${tool_survey_dir}/build.xml" target="clean" />
	  		<ant antfile="../${tool_scribe_dir}/build.xml" target="clean-build" />
	  		<ant antfile="../${tool_task_dir}/build.xml" target="clean" />
			<ant antfile="../${tool_gmap_dir}/build.xml" target="clean-build" />
			<ant antfile="../${tool_spreadsheet_dir}/build.xml" target="clean" />
			<ant antfile="../${tool_daco_dir}/build.xml" target="clean" />
			<ant antfile="../${tool_wiki_dir}/build.xml" target="clean-build" />
			<ant antfile="../${tool_images_dir}/build.xml" target="clean" />
			<ant antfile="../${tool_videorecorder_dir}/build.xml" target="clean-build" />
			<ant antfile="../${tool_mindmap_dir}/build.xml" target="clean-build" />
			<ant antfile="../${tool_assessment_dir}/build.xml" target="clean" />
			<ant antfile="../${tool_pixlr_dir}/build.xml" target="clean-build" />
			<ant antfile="../${tool_eadventure_dir}/build.xml" target="clean" />
			<ant antfile="../${tool_wookie_dir}/build.xml" target="clean-build" />
			<ant antfile="../${tool_imscc_dir}/build.xml" target="clean" />
			<ant antfile="../${tool_bbb_dir}/build.xml" target="clean-build" />

	</target>

	<!-- build sub-projects -->
	<target name="build-subprojects" 
		description="builds sub projects">
		<ant antfile="../${lams_common}/build.xml" target="build-jar" inheritAll="false" />
		<ant antfile="../${lams_contentrepository}/build.xml"
			target="build-jar" inheritAll="false" />
		<ant antfile="../${lams_central}/build.xml" target="build-war" inheritAll="false"/>
		<ant antfile="../${lams_learning}/build.xml" target="build-war" inheritAll="false"/>
		<ant antfile="../${lams_monitoring}/build.xml"  target="build-war" inheritAll="false"/>
		<ant antfile="../${lams_admin}/build.xml" target="build-war" inheritAll="false"/>
		<ant antfile="../${lams_www}/build.xml" target="build-war" inheritAll="false"/>
		<ant antfile="../${lams_gradebook}/build.xml" target="build-jar" inheritAll="false"/>
		<ant antfile="../${lams_gradebook}/build.xml" target="build-war" inheritAll="false"/>
	</target>

	<!-- build tool deployment utility -->
	<target name="build-tool-deploy-utility"
		description="builds the tool deploy utility and copy to lams_build">

		<ant antfile="../${lams_tool_deploy}/build.xml" target="build"
			inheritAll="false" />

		<mkdir dir="${deploy.tool}" />
		<mkdir dir="${deploy.tool}/lib" />
		
		<copy todir="${deploy.tool}" overwrite="yes" flatten="true">
			<fileset dir="../${lams_tool_deploy}">
				<include name="deploy.bat" />
				<include name="deploy.sh" />
			</fileset>
		</copy>

		<copy todir="${deploy.tool}/lib" overwrite="yes" flatten="true">
			<fileset dir="../${lams_tool_deploy}/lib">
				<include name="jakarta-commmons/*.jar" />
				<include name="mysql/*.jar" />
				<include name="xstream/*.jar" />
			</fileset>
		</copy>
		
		<copy todir="${deploy.tool}/lib" overwrite="yes" flatten="true">
			<fileset dir="../${lams_tool_deploy}/build/lib">
				<include name="lams-tool-deploy.jar" />
			</fileset>
		</copy>
		
	</target>

	<!-- cruise control task : build lams -->
	<target name="lams-cruise" depends="assemble-ear, rebuild-db, deploy-ear, copyfiles, deploy-tools" description="builds entire LAMS (used for CruiseControl instance)"> 
		<echo>Building LAMS using CruiseControl</echo>
	</target>
	
	<!-- cruise control task : build lams without tools -->
	<target name="lams-cruise-min-tools" depends="assemble-ear, rebuild-db, deploy-ear, copyfiles, deploy-minimal-tools" description="builds entire LAMS without tools"> 
		<echo>Building LAMS using CruiseControl</echo>
	</target>
	
	<!-- assemble ear -->
	<target name="assemble-ear" depends="init, clean-core, build-subprojects"
		description="Assemble lams ear in exploded form">
		<!-- have to copy the libs etc. to a temp location otherwise we end up with all the directories under lib as well-->
		<mkdir dir="${assembly}/temp" />
		<copy todir="${assembly}/temp" failonerror="true"
			flatten="true">
			<fileset dir="${lib}">
				<patternset id="lib.jars">
					<!--  the desired jars are nominated explicitly so -->
					<!--  we don't release a build only one by accident -->
					<include name="apache-poi/*.jar" />
					<include name="aspirin/*.jar" />
					<include name="autopatch/*.jar" />
					<include name="axis/*.jar" />
					<include name="batik/*.jar" />
					<include name="cglib/*.jar" />
					<include name="dom4j/*.jar" />
					<include name="fckeditor/*.jar" />
					<include name="j2ee/*.jar" />
					<include name="jabber/*.jar" />
					<include name="jakarta-commons/*.jar" />
					<include name="jakarta-taglibs/*.jar" />
					<include name="jdom/*.jar" />
					<include name="jfreechart/*.jar" />
					<include name="mysql/*.jar" />
					<include name="odmg/*.jar" />
					<include name="smack/smack.jar"/>
					<include name="smack/smackx.jar"/>
					<include name="spring/*.jar" />
					<include name="struts/*.jar" />
					<include name="wddx/*.jar" />
					<include name="concurrent/*.jar" />	
					<include name="xml-commons/*.jar" />
					<include name="xstream/*.jar" />		
					<include name="flagstone/*.jar" />
					<include name="lucene/*.jar" />
					<include name="excel/*.jar" />
					<include name="csv/*.jar" />
					<include name="joid/*.jar" />
				</patternset>
			</fileset> 
			<fileset dir="..">
				<include name="${lams_common}/${sub.build.lib}/lams.jar" />
				<include name="${lams_contentrepository}/${sub.build.lib}/*.jar" />
				<include name="${lams_central}/${sub.build.lib}/*.jar" />
				<include name="${lams_monitoring}/${sub.build.lib}/*.jar"/>
				<include name="${lams_monitoring}/${sub.build.lib}/*.war"/>
				<include name="${lams_learning}/${sub.build.lib}/*.jar"/>
				<include name="${lams_learning}/${sub.build.lib}/*.war"/>
				<include name="${lams_admin}/${sub.build.lib}/*.jar"/>
				<include name="${lams_admin}/${sub.build.lib}/*.war"/>
				<include name="${lams_www}/${sub.build.lib}/*.war"/>
				<include name="${lams_gradebook}/${sub.build.lib}/*.jar"/>
				<include name="${lams_gradebook}/${sub.build.lib}/*.war"/>
			</fileset>
		</copy> 
		<!-- lams-central.war is already expanded -->
		<copy todir="${assembly}/temp/" failonerror="true">
			<fileset dir="../${lams_central}/${sub.build.lib}/">
				<include name="lams-central.war/**/*.*" />
			</fileset>
		</copy>		
		<!-- Pull out all the language files -->
		<mkdir dir="${assembly}/temp/lams-dictionary.jar" />
		<copy todir="${assembly}/temp/lams-dictionary.jar" failonerror="true">
			<fileset dir="../${lams_common}/${sub.build.language}"><include name="**" /></fileset>
			<fileset dir="../${lams_contentrepository}/${sub.build.language}"><include name="**" /></fileset> 
			<fileset dir="../${lams_central}/${sub.build.language}"><include name="**" /></fileset>
			<fileset dir="../${lams_monitoring}/${sub.build.language}"><include name="**" /></fileset>
			<fileset dir="../${lams_learning}/${sub.build.language}"><include name="**" /></fileset>
			<fileset dir="../${lams_admin}/${sub.build.language}"><include name="**" /></fileset>
			<fileset dir="../${lams_gradebook}/${sub.build.language}"><include name="**" /></fileset>
		</copy>

		<!-- create a temporary ear -->
		<ear destfile="${assembly.temp.ear}" compress="false"
			appxml="${app.xml}">
			<fileset dir="${assembly}/temp" includes="**" />
		</ear>

		<!-- remove temp lib -->
		<!--		<delete dir="${assembly}/temp" includeEmptyDirs="true" /> -->
		<!-- explode the ear (Why doesn't the EAR task support exploded format?) -->
		<!-- lams-central.war is already exploded when copied -->
		<unjar src="${assembly.temp.ear}" dest="${assembly.lams.ear}" />
		<!-- Add local copy of XSD so developers with no internet access can still build the project -->
		<copy todir="${assembly.lams.ear}/META-INF" failonerror="true">
			<fileset dir="${app.xml.dir}">
				<include name="application_5.xsd" />
			</fileset>
		</copy>
		<move file="${assembly.lams.ear}/lams-www.war" tofile="${assembly.lams.ear}/temp.war"/>
		<unjar src="${assembly.lams.ear}/temp.war" dest="${assembly.lams.ear}/lams-www.war"/>
		<delete file="${assembly.lams.ear}/temp.war"/>
		<!-- delete temp.ear -->
		<delete file="${assembly.temp.ear}" />
	</target>

	<!-- ============================================================================== -->
	<!-- Deploy the ear file to the server                                              -->
	<!-- ============================================================================== -->

	<target name="deploy-ear" 
		description="Delete any old versions of the ear directory">
		<delete dir="${jboss.deploy}"/>
		<copy todir="${jboss.ear.deploy}" overwrite="true"
			failonerror="true">
			<fileset dir="${assembly}">
				<include name="${lams.ear}/**/*.*" />
			</fileset>
		</copy>
	</target>
	
	
	<!-- ============================================================================== -->
	<!-- Deploy the ear file to the win_installer directory                                             -->
	<!-- ============================================================================== -->

	<target name="deploy-ear-updater" depends="assemble-ear"
		description="Delete any old versions of the ear directory">
		<delete dir="../win_installer/assembly"/>
		<copy todir="../win_installer/assembly" overwrite="true"
			failonerror="true">
			<fileset dir="${assembly}">
				<include name="${lams.ear}/**/*.*" />
			</fileset>
		</copy>
	</target>
	
	

	<!-- ============================================================================== -->
	<!-- Deploy the LAMS or RAMS set of tools to the deployed ear 				               			-->
	<!--  Relies on the tools using the parameter jboss.deploy							-->						
	<!-- ============================================================================== -->
	<target name="deploy-common-tools" description="Deploy the tools shared between LAMS and RAMS. Called by deploy-lams-tools and deploy-rams-tools">
		<ant antfile="../${tool_forum_dir}/build.xml" target="deploy-tool"
				inheritAll="false" >
			<property name="jboss.deploy" location="${jboss.deploy}"/>
			<property name="generate.for.installers" value="${generate.for.installers}"/>
		</ant>
		<ant antfile="../${tool_lanb_dir}/build.xml" target="deploy-tool"
				inheritAll="false" >
			<property name="jboss.deploy" location="${jboss.deploy}"/>
			<property name="generate.for.installers" value="${generate.for.installers}"/>
		</ant>
		<ant antfile="../${tool_laqa_dir}/build.xml" target="deploy-tool"
				inheritAll="false" >
			<property name="jboss.deploy" location="${jboss.deploy}"/>
			<property name="generate.for.installers" value="${generate.for.installers}"/>
		</ant>
		<ant antfile="../${tool_sbmt_dir}/build.xml" target="deploy-tool"
				inheritAll="false" >
			<property name="jboss.deploy" location="${jboss.deploy}"/>
			<property name="generate.for.installers" value="${generate.for.installers}"/>
		</ant>
  		<ant antfile="../${tool_chat_dir}/build.xml" target="deploy-tool"
				inheritAll="false" >
			<property name="jboss.deploy" location="${jboss.deploy}"/>
			<property name="generate.for.installers" value="${generate.for.installers}"/>
		</ant> 
		<ant antfile="../${tool_larsrc_dir}/build.xml" target="deploy-tool"
				inheritAll="false" >
			<property name="jboss.deploy" location="${jboss.deploy}"/>
			<property name="generate.for.installers" value="${generate.for.installers}"/>
		</ant>
 		<ant antfile="../${tool_vote_dir}/build.xml" target="deploy-tool"
				inheritAll="false" >
			<property name="jboss.deploy" location="${jboss.deploy}"/>
			<property name="generate.for.installers" value="${generate.for.installers}"/>
		</ant>
  		<ant antfile="../${tool_notebook_dir}/build.xml" target="deploy-tool"
				inheritAll="false" >
			<property name="jboss.deploy" location="${jboss.deploy}"/>
			<property name="generate.for.installers" value="${generate.for.installers}"/>
		</ant>
  		<ant antfile="../${tool_survey_dir}/build.xml" target="deploy-tool"
				inheritAll="false" >
			<property name="jboss.deploy" location="${jboss.deploy}"/>
			<property name="generate.for.installers" value="${generate.for.installers}"/>
		</ant>
  		<ant antfile="../${tool_scribe_dir}/build.xml" target="deploy-tool"
				inheritAll="false" >
			<property name="jboss.deploy" location="${jboss.deploy}"/>
			<property name="generate.for.installers" value="${generate.for.installers}"/>
		</ant>
  		<ant antfile="../${tool_task_dir}/build.xml" target="deploy-tool"
				inheritAll="false" >
			<property name="jboss.deploy" location="${jboss.deploy}"/>
			<property name="generate.for.installers" value="${generate.for.installers}"/>
		</ant>
		<ant antfile="../${tool_gmap_dir}/build.xml" target="deploy-tool"
						inheritAll="false" >
			<property name="jboss.deploy" location="${jboss.deploy}"/>
			<property name="generate.for.installers" value="${generate.for.installers}"/>
		</ant>
		<ant antfile="../${tool_spreadsheet_dir}/build.xml" target="deploy-tool"
						inheritAll="false" >
			<property name="jboss.deploy" location="${jboss.deploy}"/>
			<property name="generate.for.installers" value="${generate.for.installers}"/>
		</ant>
		<ant antfile="../${tool_daco_dir}/build.xml" target="deploy-tool"
						inheritAll="false" >
			<property name="jboss.deploy" location="${jboss.deploy}"/>
			<property name="generate.for.installers" value="${generate.for.installers}"/>
		</ant>
		<ant antfile="../${tool_wiki_dir}/build.xml" target="deploy-tool"
						inheritAll="false" >
			<property name="jboss.deploy" location="${jboss.deploy}"/>
			<property name="generate.for.installers" value="${generate.for.installers}"/>
		</ant>
		<ant antfile="../${tool_images_dir}/build.xml" target="deploy-tool"
						inheritAll="false" >
			<property name="jboss.deploy" location="${jboss.deploy}"/>
			<property name="generate.for.installers" value="${generate.for.installers}"/>
		</ant>
		<ant antfile="../${tool_videorecorder_dir}/build.xml" target="deploy-tool"
						inheritAll="false" >
			<property name="jboss.deploy" location="${jboss.deploy}"/>
			<property name="generate.for.installers" value="${generate.for.installers}"/>
		</ant>
		<ant antfile="../${tool_mindmap_dir}/build.xml" target="deploy-tool"
						inheritAll="false" >
			<property name="jboss.deploy" location="${jboss.deploy}"/>
			<property name="generate.for.installers" value="${generate.for.installers}"/>
		</ant>
		<ant antfile="../${tool_assessment_dir}/build.xml" target="deploy-tool"
						inheritAll="false" >
			<property name="jboss.deploy" location="${jboss.deploy}"/>
			<property name="generate.for.installers" value="${generate.for.installers}"/>
		</ant>
		<ant antfile="../${tool_pixlr_dir}/build.xml" target="deploy-tool"
						inheritAll="false" >
			<property name="jboss.deploy" location="${jboss.deploy}"/>
			<property name="generate.for.installers" value="${generate.for.installers}"/>
		</ant>
		<ant antfile="../${tool_eadventure_dir}/build.xml" target="deploy-tool"
						inheritAll="false" >
			<property name="jboss.deploy" location="${jboss.deploy}"/>
			<property name="generate.for.installers" value="${generate.for.installers}"/>
		</ant>
		<ant antfile="../${tool_wookie_dir}/build.xml" target="deploy-tool"
						inheritAll="false" >
			<property name="jboss.deploy" location="${jboss.deploy}"/>
			<property name="generate.for.installers" value="${generate.for.installers}"/>
		</ant>
		<ant antfile="../${tool_imscc_dir}/build.xml" target="deploy-tool"
						inheritAll="false" >
			<property name="jboss.deploy" location="${jboss.deploy}"/>
			<property name="generate.for.installers" value="${generate.for.installers}"/>
		</ant>
		<ant antfile="../${tool_bbb_dir}/build.xml" target="deploy-tool"
						inheritAll="false" >
			<property name="jboss.deploy" location="${jboss.deploy}"/>
			<property name="generate.for.installers" value="${generate.for.installers}"/>
		</ant>
	</target>

	<target name="deploy-minimal-tools" description="Deploy the tools shared between LAMS and RAMS. Called by deploy-lams-tools and deploy-rams-tools">
  		<ant antfile="../${tool_notebook_dir}/build.xml" target="deploy-tool"
				inheritAll="false" >
			<property name="jboss.deploy" location="${jboss.deploy}"/>
			<property name="generate.for.installers" value="${generate.for.installers}"/>
		</ant>
		<ant antfile="../${tool_videorecorder_dir}/build.xml" target="deploy-tool"
						inheritAll="false" >
			<property name="jboss.deploy" location="${jboss.deploy}"/>
			<property name="generate.for.installers" value="${generate.for.installers}"/>
		</ant>
	</target>
	
	<target name="deploy-lams-tools" depends="test-application, deploy-common-tools" if="isLAMS"
			description="Deploy the LAMS tools. Called by deploy-tools.">
		<echo>Building the LAMS set of tools.</echo>
		<ant antfile="../${tool_lamc_dir}/build.xml" target="deploy-tool"
				inheritAll="false" >
			<property name="jboss.deploy" location="${jboss.deploy}"/>
			<property name="generate.for.installers" value="${generate.for.installers}"/>
		</ant> 
	</target>
			
	<target name="deploy-rams-tools" depends="test-application, deploy-common-tools" if="isRAMS"
			description="Deploys the RAMS tools. Called by deploy-tools.">
		<echo>Building the RAMS set of tools.</echo>
		<!-- No RAMS specific tools yet -->
	</target>
	
	<target name="test-application">
		  <condition property="isLAMS">
		  	<equals arg1="${conf.application}" arg2="lams" />
		  </condition>
		  <condition property="isRAMS">
		  	<equals arg1="${conf.application}" arg2="rams" />
		  </condition>
		  <echo>isLAMS ${isLAMS}</echo>
		  <echo>isRAMS ${isRAMS}</echo>
	</target>
	
	<target name="deploy-tools" depends="deploy-lams-tools,deploy-rams-tools" 
		description="Deploys the desired tools, working out automatically whether they should be the LAMS or RAMS set of tools. Includes any special parallel activities">
		<ant target="deploy-learning-libraries"/>
	</target>

	<!-- use this target only if you are building the special deploy packages needed for the tool upgrader -->
	<target name="deploy-tools-for-upgrader" depends="deploy-lams-tools,deploy-rams-tools" 
		description="Deploys the desired tools, working out automatically whether they should be the LAMS or RAMS set of tools. Doesn't include parallel activities">
	</target>

	<!-- ============================================================================== -->
	<!--  Rebuild the LAMS Database														-->						
	<!-- ============================================================================== -->
	<target name="rebuild-db" description="Rebuild the LAMS Database.">
		<ant antfile="../${lams_common}/build.xml" target="rebuild-db" inheritAll="false" />
	</target>
	
	<!-- ============================================================================== -->
	<!-- Copy the third party jar files and cofiguration files for deployment           -->
	<!-- ============================================================================== -->

	<target name="copyfiles"
		description="copy lib and config files">
		<copy overwrite="yes" todir="${jboss.server.instance}/conf/">
			<fileset dir="${conf.jboss}/">
				<include name="login-config.xml" />
				<include name="jboss-service.xml" />
			</fileset>
	        <filterset>
	                <filter token="confdir" value="${jboss.server.instance}/conf"/>
	        </filterset>
		</copy>
		
		<copy overwrite="yes" todir="${jboss.server.instance}/conf/">
			<fileset dir="${conf.jboss}/">
				<include name="jboss-log4j.xml"/>
			</fileset>
			<filterset>
				<filter token="application" value="${conf.application}"/>
			</filterset>
		</copy>

		<copy overwrite="yes" todir="${jboss.ear.deploy}">
			<fileset dir="${conf.jboss}/service">
				<include name="mysql*.xml" />
				<!--
					<include name="lams-cache-jboss-beans.xml" />
				-->
			</fileset>
	        <filterset>
	            <filter token="db.name" value="${db.name}"/>
                <filter token="db.username" value="${db.username}"/>
                <filter token="db.password" value="${db.password}"/>
	        </filterset>
		</copy>
		
		<copy overwrite="yes" todir="${jboss.deploy}">
			<fileset dir="${conf.jboss}/service">
				<include name="treecache.xml" />
			</fileset>
		</copy>
                	
		
		<copy overwrite="yes" todir="${jboss.ear.deployers}/jbossweb.deployer/META-INF">
			<fileset dir="${conf.jboss}/jbossweb">
				<include name="war-deployers-jboss-beans.xml" />
			</fileset>
		</copy>
		<copy overwrite="yes" todir="${jboss.ear.deploy}/jbossweb.sar/">
			<fileset dir="${conf.jboss}/jbossweb">
				<include name="server.xml" />
				<include name="context.xml" />
			</fileset>
		</copy>
		
		<ant antfile="../${lams_common}/build.xml" target="copy-shared-session-jar" inheritAll="false"/>
		<ant antfile="../${lams_common}/build.xml" target="copy-lams-valve-jar" inheritAll="false"/>
		<copy overwrite="yes" todir="${jboss.server.instance.lib}">	
			<fileset dir="${lib}/jboss">
				<include name="*.jar" />
			</fileset>
		</copy>
		
	</target>

	<target name="test-report" description="Run all the test cases across the system. Takes a long time.">
		<!-- Core projects first -->
 		<ant antfile="../${lams_common}/build.xml" target="insert-test-data" inheritAll="false"/>
 		<ant antfile="../${lams_common}/build.xml" target="test-report" inheritAll="false"/>
 		<ant antfile="../${lams_contentrepository}/build.xml" target="test-report" inheritAll="false"/>
 		<ant antfile="../${lams_common}/build.xml" target="insert-test-data" inheritAll="false"/>
		<ant antfile="../${lams_central}/build.xml" target="test-report" inheritAll="false"/>
 		<ant antfile="../${lams_common}/build.xml" target="insert-test-data" inheritAll="false"/>
 		<ant antfile="../${tool_survey_dir}/build.xml" target="build-db" inheritAll="false"/> 
<!--  		<ant antfile="../${tool_survey_dir}/build.xml" target="build-jar" inheritAll="false"/>  -->
		<ant antfile="../${lams_monitoring}/build.xml" target="test-report" inheritAll="false"/> 
 		<ant antfile="../${lams_learning}/build.xml" target="test-report" inheritAll="false"/> 

		<!--  Now the tools -->
<!-- 		<ant antfile="../${lams_common}/build.xml" target="insert-test-data" inheritAll="false"/>
		<ant antfile="../${tool_forum_dir}/build.xml" target="test-report" inheritAll="false"/>
		<ant antfile="../${tool_imscp_dir}/build.xml" target="test-report" inheritAll="false"/>
		<ant antfile="../${tool_laqa_dir}/build.xml" target="test-report" inheritAll="false"/>
		<ant antfile="../${tool_lanb_dir}/build.xml" target="test-report" inheritAll="false"/>
		<ant antfile="../${tool_sbmt_dir}/build.xml" target="test-report" inheritAll="false"/>
		<ant antfile="../${tool_survey_dir}/build.xml" target="test-report" inheritAll="false"/>
	-->
	</target>
	
	
	<!-- Build and deploy the parallel activities and other complex activities. Must be done after -->
	<!-- the tools are deployed -->
	<target name="deploy-learning-libraries">

		<echo>Deploying Library Activities</echo>
		
		<property name="dictionary.dir" value="${jboss.deploy}/lams-dictionary.jar/org/lamsfoundation/lams/library/" />

		<!-- Generate the deployment package for share resources / forum parallel activity.-->
		<ant antfile="buildcombinedtasks.xml" target="deploy-package-library">
			<property name="assembly.activity" location="${basedir}/assembly/shareresourcesforum"/>
			<property name="package.cfg" location="librarypackages/shareresourcesforum"/>
			<property name="language.file.folder" value="librarypackages/shareresourcesforum/language/${conf.application}/" />
			<property name="dest.language.file.folder" value="${dictionary.dir}/shareresourcesforum/"/>
		</ant> 
 
		<!-- Generate the deployment package for chat / scribe parallel activity. -->
		<ant antfile="buildcombinedtasks.xml" target="deploy-package-library">
			<property name="assembly.activity" value="${basedir}/assembly/chatscribe"/>
			<property name="package.cfg" value="librarypackages/chatscribe"/>
			<property name="language.file.folder" value="librarypackages/chatscribe//language/${conf.application}/" />
			<property name="dest.language.file.folder" value="${dictionary.dir}/chatscribe/"/>
		</ant> 

		<!-- Generate the deployment package for forum / scribe parallel activity. -->
		<ant antfile="buildcombinedtasks.xml" target="deploy-package-library">
			<property name="assembly.activity" value="${basedir}/assembly/forumscribe"/>
			<property name="package.cfg" value="librarypackages/forumscribe"/>
			<property name="language.file.folder" value="librarypackages/forumscribe/language/${conf.application}/" />
			<property name="dest.language.file.folder" value="${dictionary.dir}/forumscribe/"/>
		</ant> 
		
</target>

	<!-- Copy lams.tld and the lams tags from lams-central to the other projects -->
	<target name="copy-tags" description="Copy lams.tld and the lams tags from lams-central to the other projects">
		<ant antfile="../${lams_admin}/build.xml" target="copy-tags" inheritAll="false"/>
		<ant antfile="../${lams_learning}/build.xml" target="copy-tags" inheritAll="false"/>
		<ant antfile="../${lams_monitoring}/build.xml"  target="copy-tags" inheritAll="false"/>
		<ant antfile="../${lams_www}/build.xml" target="copy-tags" inheritAll="false"/>
		<ant antfile="../${tool_assessment_dir}/build.xml" target="copy-tags" inheritAll="false"/>
		<ant antfile="../${tool_chat_dir}/build.xml" target="copy-tags" inheritAll="false"/>
		<ant antfile="../${tool_daco_dir}/build.xml" target="copy-tags" inheritAll="false"/>
		<ant antfile="../${tool_forum_dir}/build.xml" target="copy-tags" inheritAll="false"/>
		<ant antfile="../${tool_gmap_dir}/build.xml" target="copy-tags" inheritAll="false"/>
		<ant antfile="../${tool_images_dir}/build.xml" target="copy-tags" inheritAll="false"/>
		<ant antfile="../${tool_lamc_dir}/build.xml" target="copy-tags" inheritAll="false"/>
		<ant antfile="../${tool_laqa_dir}/build.xml" target="copy-tags" inheritAll="false"/>
		<ant antfile="../${tool_larsrc_dir}/build.xml" target="copy-tags" inheritAll="false"/>
		<ant antfile="../${tool_lanb_dir}/build.xml" target="copy-tags" inheritAll="false"/>
		<ant antfile="../${tool_notebook_dir}/build.xml" target="copy-tags" inheritAll="false"/>
		<ant antfile="../${tool_pixlr_dir}/build.xml" target="copy-tags" inheritAll="false"/>
		<ant antfile="../${tool_sbmt_dir}/build.xml" target="copy-tags" inheritAll="false"/>
		<ant antfile="../${tool_scribe_dir}/build.xml" target="copy-tags" inheritAll="false"/>
		<ant antfile="../${tool_spreadsheet_dir}/build.xml" target="copy-tags" inheritAll="false"/>
		<ant antfile="../${tool_survey_dir}/build.xml" target="copy-tags" inheritAll="false"/>
		<ant antfile="../${tool_task_dir}/build.xml" target="copy-tags" inheritAll="false"/>
		<ant antfile="../${tool_videorecorder_dir}/build.xml" target="copy-tags" inheritAll="false"/>
		<ant antfile="../${tool_vote_dir}/build.xml" target="copy-tags" inheritAll="false"/>
		<ant antfile="../${tool_wiki_dir}/build.xml" target="copy-tags" inheritAll="false"/>
                <ant antfile="../${tool_eadventure_dir}/build.xml" target="copy-tags" inheritAll="false"/>
                <ant antfile="../${tool_wookie_dir}/build.xml" target="copy-tags" inheritAll="false"/>
                <ant antfile="../${tool_imscc_dir}/build.xml" target="copy-tags" inheritAll="false"/>
                <ant antfile="../${tool_bbb_dir}/build.xml" target="copy-tags" inheritAll="false"/>
		
	</target>
	
	<target name="slim-jboss" description="makes a backup and removes unnecessary services from JBoss 5; do not run twice!">
		<!-- Backup -->
		<copy todir="${jboss.server.instance}/slim-backup/deploy">
			<fileset dir="${jboss.ear.deploy}/">
				<include name="ejb2-container-jboss-beans.xml"/>
				<include name="ejb2-timer-service.xml"/>
				<include name="ejb3-connectors-jboss-beans.xml"/>
				<include name="ejb3-container-jboss-beans.xml"/>
				<include name="ejb3-interceptors-aop.xml"/>
				<include name="ejb3-timerservice-jboss-beans.xml"/>
				<include name="jsr88-service.xml"/>
				<include name="monitoring-service.xml"/>
				<include name="profileservice-jboss-beans.xml"/>
				<include name="schedule-manager-service.xml"/>
				<include name="scheduler-service.xml"/>
				<include name="transaction-service.xml"/>
				<include name="jbossws.sar/"/>
				<include name="profileservice-secured.jar/"/>
				<include name="admin-console.war/"/>
				<include name="xnio-provider.jar/"/>
				<include name="http-invoker.sar/"/>
			</fileset>
		</copy>
		
		<copy todir="${jboss.server.instance}/slim-backup/deployers">
			<fileset dir="${jboss.server.instance}/deployers">
				<include name="jsr77-deployers-jboss-beans.xml"/>
				<include name="logbridge-jboss-beans.xml"/>
				<include name="jbossws.deployer/"/>
				<include name="seam.deployer/"/>
			</fileset>
		</copy>
		
		<copy todir="${jboss.server.instance}/slim-backup/conf">
			<fileset dir="${jboss.server.instance}/conf">
				<include name="bootstrap.xml"/>
			</fileset>
		</copy>
		
		<!-- Configuring -->
		<copy overwrite="yes" file="${conf.jboss}/bootstrap.slim.xml" tofile="${jboss.server.instance}/conf/bootstrap.xml" />
		
		<delete file="${jboss.ear.deploy}/ejb2-container-jboss-beans.xml"/>
		<delete file="${jboss.ear.deploy}/ejb2-timer-service.xml"/>
		<delete file="${jboss.ear.deploy}/ejb3-connectors-jboss-beans.xml"/>
		<delete file="${jboss.ear.deploy}/ejb3-container-jboss-beans.xml"/>
		<delete file="${jboss.ear.deploy}/ejb3-interceptors-aop.xml"/>
		<delete file="${jboss.ear.deploy}/ejb3-timerservice-jboss-beans.xml"/>
		<delete file="${jboss.ear.deploy}/jsr88-service.xml"/>
		<delete file="${jboss.ear.deploy}/monitoring-service.xml"/>
		<delete file="${jboss.ear.deploy}/profileservice-jboss-beans.xml"/>
		<delete file="${jboss.ear.deploy}/schedule-manager-service.xml"/>
		<delete file="${jboss.ear.deploy}/scheduler-service.xml"/>
		<delete file="${jboss.ear.deploy}/transaction-service.xml"/>
		
		<delete dir="${jboss.ear.deploy}/jbossws.sar/"/>
		<delete dir="${jboss.ear.deploy}/profileservice-secured.jar/"/>
		<delete dir="${jboss.ear.deploy}/admin-console.war/"/>
		<delete dir="${jboss.ear.deploy}/xnio-provider.jar/"/>
		<delete dir="${jboss.ear.deploy}/http-invoker.sar/"/>
		
		<delete file="${jboss.server.instance}/deployers/jsr77-deployers-jboss-beans.xml"/>
		<delete file="${jboss.server.instance}/deployers/logbridge-jboss-beans.xml"/>
		
		<delete dir="${jboss.server.instance}/deployers/jbossws.deployer"/>
		<delete dir="${jboss.server.instance}/deployers/seam.deployer"/>
	</target>
	
	<target name="slim-jboss-revert" description="reverts changes made by slim-jboss task">
		<copy overwrite="yes" todir="${jboss.ear.deploy}">
			<fileset dir="${jboss.server.instance}/slim-backup/deploy/">
				<include name="*/"/>
			</fileset>
		</copy>
		
		<copy overwrite="yes" todir="${jboss.server.instance}/conf">
			<fileset dir="${jboss.server.instance}/slim-backup/conf">
				<include name="*.xml"/>
			</fileset>
		</copy>
		
		<copy overwrite="yes" todir="${jboss.server.instance}/deployers">
			<fileset dir="${jboss.server.instance}/slim-backup/deployers">
				<include name="*/"/>
			</fileset>
		</copy>
	</target>
</project>
