import org.lamsfoundation.lams.authoring.*;
import org.lamsfoundation.lams.common.dict.*
import org.lamsfoundation.lams.common.*
import org.lamsfoundation.lams.common.util.*
/*
*
* @author      DC
* @version     0.1
* @comments    Tool Activity Data storage class. 
* @see		   Activity
*/
class ToolActivity extends Activity{
	
	private var _authoringURL:String;
	private var _toolDisplayName:String;
	
	//generated by the LAMS server, has to do a round trip to populate them
	private var _toolContentID:Number;
	private var _toolID:Number;
	//flags to tell UI which to disable
	private var _supportsContribute:Boolean;
	private var _supportsDefineLater:Boolean;
	private var _supportsModeration:Boolean;
	private var _supportsRunOffline:Boolean;
	
	
	
	function ToolActivity(activityUIID:Number){
		super(activityUIID);
		//assign default values:
		
	}
	
	
	//to data for serialising:
	
	public function toData():Object{
		var dto = super.toData();
		dto.authoringURL = (_authoringURL) ?  _authoringURL : Config.STRING_NULL_VALUE;	
		dto.toolDisplayName = (_toolDisplayName) ?  _toolDisplayName: Config.STRING_NULL_VALUE;	
		dto.toolContentID = (_toolContentID) ?  _toolContentID: Config.NUMERIC_NULL_VALUE;	
		dto.toolID = (_toolID) ?  _toolID: Config.NUMERIC_NULL_VALUE;	
		dto.supportsContribute = (_supportsContribute!=null) ?  _supportsContribute: Config.BOOLEAN_NULL_VALUE;	
		dto.supportsDefineLater = (_supportsDefineLater!=null) ?  _supportsDefineLater: Config.BOOLEAN_NULL_VALUE;	
		dto.supportsModeration = (_supportsModeration!=null) ?  _supportsModeration: Config.BOOLEAN_NULL_VALUE;	
		dto._supportsRunOffline = (_supportsRunOffline!=null) ?  _supportsRunOffline: Config.BOOLEAN_NULL_VALUE;	
		return dto;
	}
	
	public function clone():ToolActivity{
		//var n:Activity = super.clone();
		
		var n:ToolActivity = new ToolActivity(null);
		
		//parents properties:
		n.objectType = _objectType;
		n.activityTypeID = _activityTypeID;
		n.activityID = _activityID;
		n.activityCategoryID = _activityCategoryID;
		n.activityUIID = _activityUIID;
		n.learningLibraryID = _learningLibraryID;
		n.learningDesignID = _learningDesignID;
		n.libraryActivityID = _libraryActivityID;
		n.parentActivityID = _parentActivityID;
		n.parentUIID = _parentUIID
		n.orderID = _orderID
		n.groupingID = _groupingID;
		n.groupingUIID = _groupingUIID
		n.title = _title;
		n.description = _description;
		n.helpText =  _helpText;
		n.yCoord = _yCoord;
		n.xCoord = _xCoord;
		n.libraryActivityUIImage = _libraryActivityUIImage;
		n.applyGrouping = _applyGrouping;
		n.runOffline = _runOffline;
		n.offlineInstructions = _offlineInstructions;
		n.defineLater = _defineLater;
		n.createDateTime = _createDateTime;
		n.groupingSupportType = _groupingSupportType;
		
		//class props
		n.authoringURL = _authoringURL;
		n.toolDisplayName = _toolDisplayName;
		n.toolContentID = _toolContentID;
		n.toolID = _toolID;
		n.supportsContribute = _supportsContribute;
		n.supportsDefineLater = _supportsDefineLater;
		n.supportsModeration = _supportsRunOffline;
		
		return n;
		
		
	}
	
	//GETTERS + SETTERS
	
	/**
	 * 
	 * @usage   
	 * @param   newauthoringurl 
	 * @return  
	 */
	public function set authoringURL (newauthoringurl:String):Void {
		_authoringURL = newauthoringurl;
	}
	/**
	 * 
	 * @usage   
	 * @return  
	 */
	public function get authoringURL ():String {
		return _authoringURL;
	}

/**
	 * 
	 * @usage   
	 * @param   newtoolDisplayName 
	 * @return  
	 */
	public function set toolDisplayName (newtoolDisplayName:String):Void {
		_toolDisplayName = newtoolDisplayName;
	}
	/**
	 * 
	 * @usage   
	 * @return  
	 */
	public function get toolDisplayName ():String {
		return _toolDisplayName;
	}
	/**
	 * 
	 * @usage   
	 * @param   newtoolContentID 
	 * @return  
	 */
	public function set toolContentID (newtoolContentID:Number):Void {
		_toolContentID = newtoolContentID;
	}
	/**
	 * 
	 * @usage   
	 * @return  
	 */
	public function get toolContentID ():Number {
		return _toolContentID;
	}

	/**
	 * 
	 * @usage   
	 * @param   newtoolID 
	 * @return  
	 */
	public function set toolID (newtoolID:Number):Void {
		_toolID = newtoolID;
	}
	/**
	 * 
	 * @usage   
	 * @return  
	 */
	public function get toolID ():Number {
		return _toolID;
	}
	
		/**
	 * 
	 * @usage   
	 * @param   newsupportsContribute 
	 * @return  
	 */
	public function set supportsContribute (newsupportsContribute:Boolean):Void {
		_supportsContribute = newsupportsContribute;
	}
	/**
	 * 
	 * @usage   
	 * @return  
	 */
	public function get supportsContribute ():Boolean {
		return _supportsContribute;
	}
	
	/**
	 * 
	 * @usage   
	 * @param   newsupportsDefineLater 
	 * @return  
	 */
	public function set supportsDefineLater (newsupportsDefineLater:Boolean):Void {
		_supportsDefineLater = newsupportsDefineLater;
	}
	/**
	 * 
	 * @usage   
	 * @return  
	 */
	public function get supportsDefineLater ():Boolean {
		return _supportsDefineLater;
	}
	
	/**
	 * 
	 * @usage   
	 * @param   newsupportsModeration 
	 * @return  
	 */
	public function set supportsModeration (newsupportsModeration:Boolean):Void {
		_supportsModeration = newsupportsModeration;
	}
	/**
	 * 
	 * @usage   
	 * @return  
	 */
	public function get supportsModeration ():Boolean {
		return _supportsModeration;
	}
	
	/**
	 * 
	 * @usage   
	 * @param   newsupportsRunOffline 
	 * @return  
	 */
	public function set supportsRunOffline (newsupportsRunOffline:Boolean):Void {
		_supportsRunOffline = newsupportsRunOffline;
	}
	/**
	 * 
	 * @usage   
	 * @return  
	 */
	public function get supportsRunOffline ():Boolean {
		return _supportsRunOffline;
	}



}

