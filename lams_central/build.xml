<?xml version="1.0"?>

<project name="LAMS Central" basedir="." default="usage">

	<!-- import properties from the specified file -->
	<property file="build.properties"/>
	<property file="../lams_build/common.properties"/>
	<property file="../lams_build/${osPropertiesName}.properties" />

	<path id="all-libs">
		<fileset dir="${sharedlib}">
			<include name="**/*.jar"/>
		</fileset>
		<fileset dir="${j2eelibs}">
			<include name="**/*.jar"/>
		</fileset>
	</path>
	
	<path id="project.classpath">
		<path refid="all-libs"/>
		<!-- Java CLASSPATH should be added as the last item -->
		<!-- This property is supposed to be set in eclipse  -->
		<pathelement location="${java.class.path}" />
	</path>

	<target name="usage">
		<echo message=""/>
		<echo message="${project} build file"/>
		<echo message="------------------------------------------------------"/>
		<echo message=""/>
		<echo message="Among the available targets are:"/>
		<echo message=""/>
		<echo message="build-war  --> Make war archive for deployment"/>
		<echo message="build-jar  --> Make jar archive for deployment"/>
		<echo message="clean-build  --> Make war archive for deployment"/>
		<echo message=""/>
	</target>

	<target name="init">
	</target>

	<target name="print-classpath">
		<echo message="java.class.path = ${java.class.path}"/>
		<property name="path.string" refid="project.classpath"/>
		<echo message="project.classpath = ${path.string}"/>
	</target>

	
	<!-- ================================================================ -->
	<!-- Preparations									                  -->
	<!-- ================================================================ -->
	<target name="preparedirs">
		<mkdir dir="${build}"/>
		<mkdir dir="${build.lib}"/>
		<mkdir dir="${build.classes.java}"/>
		<mkdir dir="${build.classes.test}"/>
		<mkdir dir="${build.web}"/>				
	</target>


	<target name="clean" depends="preparedirs" description="removes all class files">
		<delete>
			<fileset dir="${build.classes.java}"/>
			<fileset dir="${build.classes.test}"/>
			<fileset dir="${build.lib}"/>
		</delete>
		<mkdir dir="${build.classes.java}"/>	
		<mkdir dir="${build.classes.test}"/>	
		<mkdir dir="${build.lib}"/>
	</target>

	
	<!-- ================================================================ -->
	<!-- Preparations									                  -->
	<!-- ================================================================ -->
	<target name="compile" depends="clean" description="compile java sources">
 	   <!--<property name="cp" refid="project.classpath"/>
	   <echo message="Classpath is ${cp}"/> -->
		<javac srcdir="${src.java.dir}" compiler="modern"
	         	 	destdir="${build.classes.java}" deprecation="on" debug="on">
			<classpath>
				<path refid="project.classpath"/>
			</classpath>
		</javac>
		<!-- Spring files -->
		<copy overwrite="yes" todir="${build.classes.java}/org/lamsfoundation/lams/">
				<fileset dir="${src.java.dir}/org/lamsfoundation/lams/">
						<include name="**/*.xml"/>
						<include name="**/*.properties"/>
				</fileset>
		</copy>
		<!-- Autopatch -->
		<copy overwrite="yes" todir="${build.classes.java}/">
					<fileset dir="${src.java.dir}/">
							<include name="migration.properties"/>
					</fileset>
		</copy>
	</target>

	<target name="compile.test" depends="compile">
		<javac destdir="${build.classes.test}" compiler="modern">
			<src path="${src.test.dir}"/>
			<classpath>
				<path refid="project.classpath"/>
			</classpath>
		</javac>
	</target>
	
	<!-- = = = = = = = = = = = = = = = = = = = = = = = =  -->
	<!-- Make the war archive  for deployment             -->
	<!-- = = = = = = = = = = = = = = = = = = = = = = = =  -->
	<target name="copyConfFlashFiles" description="Copy the Flash files from the conf directory to the web directory">
		<!-- Clean out any old ones first so we don't get rams/lams confused -->
		<delete dir="web/flashxml"/>
		<mkdir dir="web/flashxml"/>
		<copy overwrite="yes" todir="web/flashxml">
			<fileset dir="${conf.dir}/flashxml/${conf.application}">
				<include name="**/*.xml"/>
			</fileset>
		</copy>
	</target>
	
	<target name="copyConfFaviconFile" description="Copy the Favicon ISO file from the conf directory to the web directory">
		<copy overwrite="yes" todir="web">
			<fileset dir="${conf.dir}/favicon/${conf.application}">
				<include name="**/*.ico"/>
			</fileset>
		</copy>
	</target>

	<target name="test-application">
		  <condition property="isLAMS">
		  	<equals arg1="${conf.application}" arg2="lams" />
		  </condition>
		  <condition property="isRAMS">
		  	<equals arg1="${conf.application}" arg2="rams" />
		  </condition>
		  <echo>isLAMS ${isLAMS}</echo>
		  <echo>isRAMS ${isRAMS}</echo>
	</target>

	<target name="update-logo-for-RAMS" depends="test-application" if="isRAMS" description="Overwrite the LAMS logo with the RAMS logo">
		<echo>Setting login logo to RAMS</echo>
		<copy overwrite="yes" todir="${build.lib}/${product}.war/images/css/">
			<fileset dir="${build.lib}/${product}.war/images/ramsthemecss/">
				<include name="rams_login.gif"/>
			</fileset>
		</copy>
		<move overwrite="yes" tofile="${build.lib}/${product}.war/images/css/lams_login.gif"
			file="${build.lib}/${product}.war/images/css/rams_login.gif" verbose="true"/>
	</target>

	<target name="build-war" depends="webdoclet,build-jar,copyConfFlashFiles,copyConfFaviconFile" description="creates war file">
		<delete dir="${build.lib}/${product}.war"/>
		<war warfile="${build.lib}/${product}.war" manifest="${conf.dir}/war/META-INF/MANIFEST.MF"
  				webxml="${conf.webinf.dir}/web.xml">
			<webinf dir="${conf.webinf.dir}">
				<include name="*.xml"/>
				<include name="*.tld"/>
				<include name="*.wsdd"/>
				<include name="conf/**"/>
				<include name="modules/**"/>
				<include name="services/**"/>
				<include name="tags/**"/>
				<include name="*.properties"/>
				<include name="struts/**"/>
				<include name="jstl/**"/>
				<include name="fckeditor/**"/>
				<include name="tiles/**"/>
				<exclude name="web.xml"/>
			</webinf>
			<fileset dir="${conf.web.dir}">
				<include name="*"/>
				<include name="css/*"/>
				<include name="includes/**"/>
				<include name="images/**"/>
				<include name="fckeditor/**"/>
				<include name="development/**"/>
				<include name="flashxml/**"/>
				<include name="toolcontent/**"/>
				<include name="**/*.jsp"/>
				<exclude name="classes"/>
			</fileset>
		</war>
		<move file="${build.lib}/lams-central.war" tofile="${build.lib}/temp.war"/>
		<unjar src="${build.lib}/temp.war" dest="${build.lib}/lams-central.war"/>
		<antcall target="update-logo-for-RAMS"/>
	</target>


	<!-- ================================================================ -->
	<!-- Make jar archive for deployment        		    	          -->
	<!-- ================================================================ -->
	<target name="build-jar" depends="compile" description="creates jar file">
		<delete file="${build.lib}/${product}.jar"/>
		<jar jarfile="${build.lib}/${product}.jar"  manifest="${conf.dir}/jar/META-INF/MANIFEST.MF">
			<fileset dir="${build.classes.java}"/>
			<fileset dir="${build.classes.test}"/>
		</jar>
		<copy overwrite="yes" todir="${build.lib}/language/org/lamsfoundation/lams/central">
			<fileset dir="${conf.language.dir}">
				<include name="**/*.properties"/>
				<include name="**/*.txt"/>
			</fileset>
		</copy>
	</target>
	<!-- =================================================================== -->
	<!-- Run JUnit Tests                                                     -->
	<!-- =================================================================== -->
	<target name="test" depends="compile.test"> 
			<mkdir dir="${build.report}"/>
			<junit printsummary="yes" haltonerror="no" haltonfailure="no" fork="yes">
				<jvmarg value="-Xms512M"/>
				<jvmarg value="-Xmx1024M"/>
				<formatter type="plain" usefile="false"/>
				<formatter type="xml"/>
				<batchtest todir="${build.report}">
					<fileset dir="${src.test.dir}">
						<include name="**/Test*.java"/>
					</fileset>
				</batchtest>			
				<classpath>
					<pathelement location="${build.classes.java}"/>
					<pathelement location="${build.classes.test}"/>
					<pathelement location="${build.web}"/>
					<path refid="project.classpath"/>
				</classpath>			
			</junit>
	</target>
		
	<target name="test-report" depends="test">
		<mkdir dir="${build.report}/html"/> 
		<junitreport todir="${build.report}"> 
			<fileset dir="${build.report}">
				<include name="TEST-*.xml"/>
			</fileset>
			<report todir="${build.report}/html"/> 
		</junitreport>
	</target>

	<!-- =================================================================== -->
	<!-- Run xdoclet for hibernate                                           -->
	<!-- =================================================================== -->
	<taskdef name="webdoclet" classname="xdoclet.modules.web.WebDocletTask">
	    <classpath refid="all-libs"/>
	</taskdef>

	<target name="webdoclet" depends="preparedirs">
		<webdoclet destdir="${generated.java}" force="${xdoclet.force}">
	         <fileset dir="${src.java.dir}">
	            <include name="**/*Servlet.java" />
	            <include name="**/*Action.java" />
	            <include name="**/*ActionForm.java" />
	            <include name="**/*Tag.java" />
	         	<include name="web/planner/*.java" />
	        	<include name="**/*Form.java" />
	         </fileset>

	         <deploymentdescriptor 
				         	servletspec="2.4" 
	         				distributable="false"
	         				destdir="${conf.webinf.dir}"
				         	mergedir="${conf.xdoclet.dir}"
	         				sessiontimeout="${sessiontimeout}"/>
			
	         <strutsconfigxml 
	         				destdir="${conf.struts.dir}"
	         				version="1.2" 
	         				mergedir="${conf.xdoclet.dir}"/>
			 
			 <jsptaglib jspversion="2.0"
						taglibversion="1.0"
					 	shortname="lams"
			 			displayname="LAMSTags"
					 	description="LAMS custom tags"
			 			filename="lams.tld"
					 	validatexml="true"
						destdir="${conf.webinf.dir}"
        				mergedir="${conf.xdoclet.dir}"/>
	     </webdoclet>
	</target>
		
	<!-- deploy-war : for convenience during development. Should be deployed via the master build -->
	<target name="deploy-war" depends="build-war">
		<copy file="${build.lib}/${product}.jar"
				todir="${jboss.deploy}"/>
		<copy todir="${jboss.deploy}/${product}.war">
			<fileset dir="${build.lib}/${product}.war">
				<include name="**/*"/>
			</fileset>
		</copy>
		<copy overwrite="yes" todir="${jboss.deploy}/lams-dictionary.jar/org/lamsfoundation/lams/central">
			<fileset dir="${conf.language.dir}">
				<include name="**/*.properties"/>
			</fileset>
		</copy>
	</target>
	
	<!-- deploy-war : for convenience during development. Should be deployed via the master build -->
	<target name="deploy-jar" depends="build-jar">
		<copy file="${build.lib}/${product}.jar"
				todir="${jboss.deploy}"/>
		<copy overwrite="yes" todir="${jboss.deploy}/lams-dictionary.jar/org/lamsfoundation/lams/central">
			<fileset dir="${conf.language.dir}">
				<include name="**/*.properties"/>
			</fileset>
		</copy>
	</target>

	
	<!-- ================================= -->
	<!--  target: synchronize-deploy          -->            
	<!--  ================================= -->
	<target name="synchronize-deploy" description="copy non-java file into deploy folder - war must be expanded. Do not overwrite the web.xml">
		<copy verbose="yes" todir="${jboss.deploy}/${product}.war">
			<fileset dir="${conf.web.dir}">
				<include name="**/*.*" />
				<exclude name="WEB-INF/web.xml"/>
			</fileset>
		</copy>
	</target>

</project>

