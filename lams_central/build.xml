<?xml version="1.0"?>

<!-- 
  Copyright (C) 2005 LAMS Foundation (http://lamsfoundation.org)

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307
  USA

  http://www.gnu.org/licenses/gpl.txt 
-->
<project name="LAMS Central" basedir="." default="usage">

	<!-- import properties from the specified file -->
	<property file="build.properties"/>

	<path id="all-libs">
		<fileset dir="${sharedlib}">
			<include name="**/*.jar"/>
		</fileset>
		<fileset dir="${sharedlib}">
			<include name="**/*.jar"/>
		</fileset>
		<fileset dir="${j2eelibs}">
			<include name="**/*.jar"/>
		</fileset>
	</path>

	<path id="project.classpath">
		<path refid="all-libs"/>
		<!-- Java CLASSPATH should be added as the last item -->
		<!-- This property is supposed to be set in eclipse  -->
		<pathelement location="${java.class.path}" />
	</path>

	<target name="usage">
		<echo message=""/>
		<echo message="${project} build file"/>
		<echo message="------------------------------------------------------"/>
		<echo message=""/>
		<echo message="Among the available targets are:"/>
		<echo message=""/>
		<echo message="build-war  --> Make war archive for deployment"/>
		<echo message="build-jar  --> Make jar archive for deployment"/>
		<echo message="clean-build  --> Make war archive for deployment"/>
		<echo message=""/>
	</target>

	<target name="init">
	</target>

	<target name="print-classpath">
		<echo message="java.class.path = ${java.class.path}"/>
	</target>

	
	<!-- ================================================================ -->
	<!-- Preparations									                  -->
	<!-- ================================================================ -->
	<target name="preparedirs">
		<mkdir dir="${build}"/>
		<mkdir dir="${build.lib}"/>
		<mkdir dir="${build.classes}"/>
		<mkdir dir="${build.test}"/>
		<mkdir dir="${build.web}"/>				
	</target>


	<target name="clean" depends="preparedirs" description="removes all class files">
		<delete>
			<fileset dir="${build.classes}"/>
		</delete>
		<mkdir dir="${build.classes}"/>	
		<delete dir="${build.lib}"/>
		<mkdir dir="${build.lib}"/>
	</target>

	
	<!-- ================================================================ -->
	<!-- Preparations									                  -->
	<!-- ================================================================ -->
	<target name="compile" depends="clean" description="compile java sources">
 	   <!--<property name="cp" refid="project.classpath"/>
	   <echo message="Classpath is ${cp}"/> -->
		<javac srcdir="${src.java}" compiler="modern"
	         	 	destdir="${build.classes}" deprecation="on" debug="on">
			<classpath>
				<!--pathelement location="${build.classes.java}"/-->
				<path refid="project.classpath"/>
			</classpath>
		</javac>
		<!-- Spring files -->
		<copy overwrite="yes" todir="${build.classes}/org/lamsfoundation/lams/">
				<fileset dir="${src.java}/org/lamsfoundation/lams/">
						<include name="**/*.xml"/>
						<include name="**/*.properties"/>
				</fileset>
		</copy>
	</target>

	<target name="compile.test" depends="compile">
		<javac destdir="${build.test}" compiler="modern">
			<src path="${src.test.java}"/>
			<classpath>
				<path refid="project.classpath"/>
			</classpath>
		</javac>
	</target>
	
	<target name="copyContext">
		<copy overwrite="yes" todir="${build.web}">
			<fileset dir="${web}">
				<include name="**/*.xml"/>
				<include name="**/*.tld"/>
			</fileset>
		</copy>
	</target>
	
	<!-- = = = = = = = = = = = = = = = = = = = = = = = =  -->
	<!-- Make the war archive  for deployment             -->
	<!-- = = = = = = = = = = = = = = = = = = = = = = = =  -->
	<target name="build-war" depends="webdoclet,build-jar" description="creates war file">
		<delete file="${build.lib}/${product}.war"/>
		<copy overwrite="yes" file="${web}/css/aqua.css" tofile="${web}/css/default.css"/>
		<war warfile="${build.lib}/${product}.war" manifest="${conf.dir}/war/META-INF/MANIFEST.MF"
  				webxml="${webinf}/web.xml">
			<webinf dir="${webinf}">
				<include name="*.xml"/>
				<include name="*.tld"/>
				<include name="*.properties"/>
				<include name="struts/**"/>
				<include name="jstl/**"/>
				<include name="tiles/**"/>
				<exclude name="web.xml"/>
			</webinf>
			<classes dir="${build.classes}"/>				
			<fileset dir="${web}">
				<include name="*"/>
				<include name="css/*"/>
				<include name="includes/**"/>
				<include name="images/**"/>
				<include name="fckeditor/**"/>
				<include name="development/**"/>
				<include name="flashxml/**"/>
				<exclude name="lams_example_tool"/>
			</fileset>
		</war>
	</target>

	<!-- ================================================================ -->
	<!-- Make jar archive for deployment        		    	          -->
	<!-- ================================================================ -->
	<target name="build-jar" depends="compile,copyContext" description="creates jar file">
		<delete file="${build.lib}/${product}.jar"/>
		<jar jarfile="${build.lib}/${product}.jar"  manifest="${conf.dir}/jar/META-INF/MANIFEST.MF">
			<fileset dir="${build.classes}"/>
			<fileset dir="${build.test}"/>
			<fileset dir="${build.web}"/>
		</jar>
	</target>
	<!-- =================================================================== -->
	<!-- Run JUnit Tests                                                     -->
	<!-- =================================================================== -->
	<target name="test" depends="compile.test"> 
			<mkdir dir="${build.report}"/>
			<junit printsummary="yes" haltonerror="no" haltonfailure="no" fork="yes">
				<jvmarg value="-Xms512M"/>
				<jvmarg value="-Xmx1024M"/>
				<formatter type="plain" usefile="false"/>
				<formatter type="xml"/>
				<batchtest todir="${build.report}">
					<fileset dir="${src.test.java}">
						<include name="**/Test*.java"/>
					</fileset>
				</batchtest>			
				<classpath>
					<pathelement location="${build.classes}"/>
					<pathelement location="${build.test}"/>
					<pathelement location="${build.web}"/>
					<path refid="project.classpath"/>
				</classpath>			
			</junit>
	</target>
		
	<target name="test-report" depends="test">
		<mkdir dir="${build.report}/html"/> 
		<junitreport todir="${build.report}"> 
			<fileset dir="${build.report}">
				<include name="TEST-*.xml"/>
			</fileset>
			<report todir="${build.report}/html"/> 
		</junitreport>
	</target>

	<!-- =================================================================== -->
	<!-- Run xdoclet for hibernate                                           -->
	<!-- =================================================================== -->
	<taskdef name="webdoclet" classname="xdoclet.modules.web.WebDocletTask">
	    <classpath refid="all-libs"/>
	</taskdef>

	<target name="webdoclet" depends="preparedirs">
		<webdoclet destdir="${generated.java}" force="${xdoclet.force}">
	         <fileset dir="${src.java}">
	            <include name="**/*Servlet.java" />
	            <include name="**/*Action.java" />
	            <include name="**/*ActionForm.java" />
	            <include name="**/*Tag.java" />
	         </fileset>

	         <deploymentdescriptor 
	         				servletspec="2.3" 
	         				destdir="${webinf}"
				         	mergedir="${conf.xdoclet}"
	         				sessiontimeout="${sessiontimeout}"/>
			
	         <strutsconfigxml 
	         				destdir="${webinf.struts}"
	         				version="1.2" 
	         				mergedir="${conf.xdoclet}"/>
			 
			 <jsptaglib jspversion="1.1"
						taglibversion="1.0"
					 	shortname="lams"
			 			displayname="LAMSTags"
					 	description="LAMS custom tags"
			 			filename="lams.tld"
					 	validatexml="true"
						destdir="${webinf}"
        				mergedir="${conf.xdoclet}"/>
	     </webdoclet>
	</target>
		
	
</project>

