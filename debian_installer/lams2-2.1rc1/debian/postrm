#!/bin/sh
# postrm script for lams2
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postrm> `remove'
#        * <postrm> `purge'
#        * <old-postrm> `upgrade' <new-version>
#        * <new-postrm> `failed-upgrade' <old-version>
#        * <new-postrm> `abort-install'
#        * <new-postrm> `abort-install' <old-version>
#        * <new-postrm> `abort-upgrade' <old-version>
#        * <disappearer's-postrm> `disappear' <overwriter>
#          <overwriter-version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

. /usr/share/debconf/confmodule
db_get lams2/db_root_pass
db_root_pass="$RET"

case "$1" in
    remove)
        # Remove the caching jars
        rm -f /usr/share/jboss-4.0.2/server/default/lib/jgroups.jar
        rm -f /usr/share/jboss-4.0.2/server/default/lib/jboss-cache.jar

        # Remove user and group
        deluser lams 2> /dev/null || true

        # Remove the database user
        if [ "$db_root_pass" != "" ] ; then 
            mysql -e "drop user lams@localhost" -u root -p$db_root_pass || true
        else
            mysql -e "drop user lams@localhost" -u root || true
        fi
    ;;

    purge)
        # Remove contents of lams.ear
        rm -rf /usr/share/jboss-4.0.2/server/default/deploy/lams.ear/

        # Remove variable data
        rm -rf /var/lib/lams/

        # Drop the database
        if [ "$db_root_pass" != "" ] ; then
            mysql -e "drop database if exists lams" -u lams -plamsdbpasswd || true
        else
            mysql -e "drop database if exists lams" -u lams || true
        fi
    ;;

    upgrade|failed-upgrade|abort-install|abort-upgrade|disappear)
    ;;

    *)
        echo "postrm called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0


