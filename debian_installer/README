Debian Packaging
================

Steps for doing a full rebuild of debianised lams2 and jboss4 packages.


Building a lams2 package using Ant build script:
- check out desired tag of lams
- run build-lams ant target
- start lams and remove test users, remove Wildfire password
- run copy-build, dump-db ant targets
- update version strings and any scripts related to new version
- update the replace token in each of the copy-<toolname>-tool-package targets
(needs a better way - can't put a variable for token attribute for the replace task)
- run copy-2.x-tool-packages ant targets
- run build-binary-package ant target from command line (requires sudo access)

NOTE: the below steps have been deprecated in favour of the ant build script.


Prerequisites
-------------
 * a Debian or Debian based system
 * packages:
 	* dh-make
 	* dpkg-dev
 	* debconf
 	* debhelper
 * for lams2:
 	* a copy of lams.ear
 	* a dump of the lams database
 	* a copy of lams_build/conf/unix/jboss/ directory


Instructions - lams-jboss4
--------------------------
1.	download jboss-4.0.2.zip
2.	unzip the contents to /path/to/packaging/
4.	cd /path/to/packaging/
5.	mv jboss-4.0.2 lams-jboss4-4.0.2
6.	cd lams-jboss4-4.0.2
7.	dh_make --createorig
8.	answer the wizard questions (choose the first or default options)
9.	rm -rf debian
10.	copy the debian folder from this cvs project into the current directory
11.	sudo dpkg-buildpackage -S -sa (add '-kxxxxxxxx' if you have a gpg key to sign
	it) - this will create a source package in the parent folder
12.	sudo dpkg-buildpackage -b (add '-kxxxxxxxx' if you want to sign it) - this
	will create the binary .deb in the parent folder
	

Instructions - lams2
--------------------
1.	checkout/export lams_* projects as normal (use the project alias 'all')
2.	set lams_build to 'unix', and the path to your jboss folder
3.	create the lams database and lams/lamsdemo user with access to it
4.	do a full build (ant rebuild-db; ant assemble-ear; ant deploy-ear;
	ant deploy-tools; ant copyfiles); include dimdim tool and any others
	that should be included but are not in the main build
5.	cd /path/to/packaging/
6.	mkdir lams2-2.1rc1 (adjust the version as necessary)
7.	cd lams2-2.1rc1
8.	cp -pr /path/to/jboss-4.0.2/server/default/deploy/lams.ear/ .
9.	cp -pr /path/to/lams_build/conf/unix/jboss/ .
10.	mysqldump lams > lams.sql -u root -p
11.	update debian/files, debian/changelog and debian/postinst and others if
	necessary
12.	copy index.jsp, lams2.cnf and other packaged files from this cvs project
	into the current directory
13.	sudo dpkg-buildpackage -S -sa (add '-kxxxxxxxx' if you have a gpg key to sign
	it) - this will create a source package in the parent folder
14.	sudo dpkg-buildpackage -b (add '-kxxxxxxxx' if you want to sign it) - this
	will create the binary .deb in the parent folder
	

Reference
---------
Debian new maintainer's guide:
http://www.debian.org/doc/manuals/maint-guide/

Official Debian packaging policy:
http://www.debian.org/doc/debian-policy/

Nice diagrams indicating how maintenance scripts are used:
http://women.debian.org/wiki/English/MaintainerScripts

Debconf tutorial:
http://www.fifi.org/doc/debconf-doc/tutorial.html

Filesystem hierarchy standard:
http://www.pathname.com/fhs/

