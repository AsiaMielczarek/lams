<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<!--  This configuration uses a local datasource and does not use the cache. -->

<beans>

	<!-- ========================= RESOURCE DEFINITIONS ========================= -->


<!-- Hibernate SessionFactory -->
	  <bean id="notebookSessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean" >
		<property name="dataSource"><ref bean="localDataSource"/></property>

		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.c3p0.minPoolSize">5</prop>
				<prop key="hibernate.c3p0.maxPoolSize">20</prop>
				<prop key="hibernate.c3p0.timeout">1800</prop>
				<prop key="hibernate.c3p0.max_statement">50</prop>
			</props>
		</property>
	</bean>

	<!-- If we really use multiple SessionFactory, we have to change to JTA Transaction Manager -->
	<!-- bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager"/-->
	<!-- Transaction manager for a single Hibernate SessionFactory (alternative to JTA) -->
<!--	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory"><ref local="notebookSessionFactory"/></property>
	</bean>
-->
	
	<!-- ========================= BUSINESS OBJECT DEFINITIONS ======================== -->
<!--	<bean id="notebookService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref bean="transactionManager"/></property>
		<property name ="target">
			<bean class="org.lamsfoundation.lams.tool.notebook.service.NotebookService">
				<property name="notebookAttachmentDAO"><ref bean="notebookAttachmentDAO"/></property>
				<property name="notebookSessionDAO"><ref bean="notebookSessionDAO"/></property>
				<property name="notebookUserDAO"><ref bean="notebookUserDAO"/></property>
				<property name="notebookDAO"><ref bean="notebookDAO"/></property>
				<property name="toolService"><ref bean="lamsToolService"/></property>
			</bean>
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="create*">PROPAGATION_REQUIRED</prop>
				<prop key="copy*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="get*">PROPAGATION_REQUIRED</prop>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="retrieve*">PROPAGATION_REQUIRED</prop>
				<prop key="remove*">PROPAGATION_REQUIRED</prop>
				<prop key="add*">PROPAGATION_REQUIRED</prop>
				<prop key="leaveToolSession">PROPAGATION_REQUIRED</prop>
                <prop key="setAsDefineLater">PROPAGATION_REQUIRED</prop>
                <prop key="setAsRunOffline">PROPAGATION_REQUIRED</prop>
                <prop key="exportToolSession">PROPAGATION_REQUIRED</prop>
				<prop key="importToolContent">PROPAGATION_REQUIRED</prop>
				<prop key="exportToolContent">PROPAGATION_REQUIRED</prop>
				<prop key="import102ToolContent">PROPAGATION_REQUIRED</prop>
				<prop key="setReflectiveData">PROPAGATION_REQUIRED</prop>				
			</props>
		</property>
	</bean> 

-->

	<!--  DAO classes -->
<!--	<bean id="notebookDAO" class="org.lamsfoundation.lams.tool.notebook.dao.hibernate.NotebookDAO">
		<property name="sessionFactory"><ref bean="notebookSessionFactory"/></property>
	</bean>  

	<bean id="notebookSessionDAO" class="org.lamsfoundation.lams.tool.notebook.dao.hibernate.NotebookSessionDAO">
		<property name="sessionFactory"><ref bean="notebookSessionFactory"/></property>
	</bean>
	
	<bean id="notebookUserDAO" class="org.lamsfoundation.lams.tool.notebook.dao.hibernate.NotebookUserDAO">
		<property name="sessionFactory"><ref bean="notebookSessionFactory"/></property>
	</bean>
	
	<bean id="notebookAttachmentDAO" class="org.lamsfoundation.lams.tool.notebook.dao.hibernate.NotebookAttachmentDAO">
		<property name="sessionFactory"><ref bean="notebookSessionFactory"/></property>
	</bean>
-->	
</beans>
