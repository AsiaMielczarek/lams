<?xml version="1.0" encoding="utf-8"?>
<EventMap xmlns:mx="http://www.adobe.com/2006/mxml" xmlns="http://mate.asfusion.com/" xmlns:builders="com.asfusion.mate.actions.builders.*">
	
	<mx:Script>
		<![CDATA[
			import com.asfusion.mate.actions.builders.EventAnnouncer;
			import com.asfusion.mate.actions.builders.HTTPServiceInvoker;
      		import com.asfusion.mate.events.UnhandledFaultEvent;
      
			import mx.events.*;
			import org.lamsfoundation.lams.events.*;
			import org.lamsfoundation.lams.business.*;
			import org.lamsfoundation.lams.views.*;
			
			import org.lamsfoundation.lams.common.dictionary.XMLDictionary;
			import org.lamsfoundation.lams.common.dictionary.XMLDictionaryEvent;
			import org.lamsfoundation.lams.common.util.WDDXParser;
	
			[Bindable]
			private var serverUrl:String;
			
			[Bindable]
			private var lessonID:uint;
			
			[Bindable]
			private var userID:uint;
			
			public function init(serverUrl:String, lessonID:uint, userID:uint):void {
				this.serverUrl = serverUrl;
				this.lessonID = lessonID;
				this.userID = userID;
			}
			
		]]>
	</mx:Script>
	<!-- UnhandledFaultEvent.FAULT -->
	<EventHandlers type="{UnhandledFaultEvent.FAULT}">
      	<EventAnnouncer generator="{LearnerErrorEvent}" type="{LearnerErrorEvent.SHOW_ERROR}">
      		<Properties message="{event.fault.message}" />
      	</EventAnnouncer>
	</EventHandlers>
	
	<!-- FlexEvent.PREINITIALIZE __________________________________________________________________ -->
	<EventHandlers type="{FlexEvent.PREINITIALIZE}">
		<ObjectBuilder id="learnerManager" generator="{LearnerManager}" constructorArguments="{[serverUrl, lessonID, userID]}"/>
	</EventHandlers>

	<!-- FlexEvent.INITIALIZE __________________________________________________________________ -->
	<EventHandlers type="{FlexEvent.INITIALIZE}">
		<MethodInvoker generator="{LearnerManager}" method="setLessonID" arguments="{lessonID}" />
		<MethodInvoker generator="{LearnerManager}" method="setServerURL" arguments="{serverUrl}" />
	</EventHandlers>
	
	<!-- FlexEvent.APPLICATION_COMPLETE ___________________________________________________________ -->
	<EventHandlers type="{FlexEvent.APPLICATION_COMPLETE}">
		<!-- load dict data -->
		<HTTPServiceInvoker instance="{dictionaryService}">
			<Request module="learner" />
			<resultHandlers>
				<MethodInvoker generator="{LearnerManager}" method="setDictionary" arguments="{resultObject}" />
			</resultHandlers>
		</HTTPServiceInvoker>
		<EventAnnouncer generator="{LearnerEvent}" type="{LearnerEvent.GET_LESSON}">
			<Properties lessonID="{lessonID}" />
		</EventAnnouncer>
	</EventHandlers>
	
	<!-- LearnerEvent.GET_LESSON ________________________________________________  -->
	<EventHandlers type="{LearnerEvent.GET_LESSON}">	
		<!-- get lesson -->
		<HTTPServiceInvoker instance="{getLessonService}">
			<Request lessonID="{event.lessonID}" />
			<resultHandlers>
				<MethodInvoker generator="{WDDXParser}" method="parseObject" arguments="{resultObject}" />
				<MethodInvoker generator="{LearnerManager}" method="setLesson" arguments="{[lastReturn]}" />
				<MethodInvoker generator="{LearnerManager}" method="getLesson" />
				<EventAnnouncer generator="{LearnerEvent}" type="{LearnerEvent.GET_LEARNING_DESIGN_DETAILS}">
					<Properties lesson="{lastReturn}" />
				</EventAnnouncer>
			</resultHandlers>
		</HTTPServiceInvoker>
	</EventHandlers>

	<!-- LearnerEvent.GET_LEARNING_DESIGN_DETAILS ________________________________________________  -->
	<EventHandlers type="{LearnerEvent.GET_LEARNING_DESIGN_DETAILS}">	
		<!-- get learning design details -->
		<HTTPServiceInvoker instance="{getLearningDesignDetailsService}">
			<Request learningDesignID="{event.lesson.learningDesignID}" />
			<resultHandlers>
				<MethodInvoker generator="{WDDXParser}" method="parseObject" arguments="{resultObject}" />
				<MethodInvoker generator="{LearnerManager}" method="setLearningDesign" arguments="{[lastReturn]}" />
				<MethodInvoker generator="{LearnerManager}" method="getLesson" />
				<EventAnnouncer generator="{LearnerEvent}" type="{LearnerEvent.GET_FLASH_PROGRESS}">
					<Properties lesson="{lastReturn}" />
				</EventAnnouncer>
			</resultHandlers>
		</HTTPServiceInvoker>
	</EventHandlers>

	<!-- LearnerEvent.GET_FLASH_PROGRESS ________________________________________________  -->
	<EventHandlers type="{LearnerEvent.GET_FLASH_PROGRESS}">	
		<!-- get flash progress -->
		<HTTPServiceInvoker instance="{getFlashProgressService}">
			<Request lessonID="{event.lesson.lessonID}" />
			<resultHandlers>
				<MethodInvoker generator="{WDDXParser}" 
					method="parseObject" arguments="{resultObject}" />
				<MethodInvoker generator="{LearnerManager}" method="setProgress" arguments="{[lastReturn]}" />
			</resultHandlers>
		</HTTPServiceInvoker>
	</EventHandlers>
	
	<!-- LearnerEvent.JOIN_LESSON ________________________________________________  -->
	<EventHandlers type="{LearnerEvent.JOIN_LESSON}">	
		<!-- join lesson -->
		<HTTPServiceInvoker instance="{joinLessonService}">
			<Request lessonID="{event.lesson.lessonID}" />
			<resultHandlers>
				<MethodInvoker generator="{WDDXParser}" 
					method="parseObject" arguments="{resultObject}" />
			</resultHandlers>
		</HTTPServiceInvoker>
	</EventHandlers>
	
	<!-- LearnerEvent.RESUME_LESSON ________________________________________________  -->
	<EventHandlers type="{LearnerEvent.RESUME_LESSON}">	
		<!-- resume lesson -->
		<HTTPServiceInvoker instance="{resumeLessonService}">
			<Request lessonID="{event.lesson.lessonID}" />
			<resultHandlers>
				<MethodInvoker generator="{WDDXParser}" 
					method="parseObject" arguments="{resultObject}" />
			</resultHandlers>
		</HTTPServiceInvoker>
	</EventHandlers>
	
	<!-- LearnerEvent.EXIT_LESSON ________________________________________________  -->
	<EventHandlers type="{LearnerEvent.EXIT_LESSON}">	
		<!-- exit lesson -->
		<HTTPServiceInvoker instance="{exitLessonService}">
			<Request lessonID="{event.lesson.lessonID}" />
			<resultHandlers>
				<MethodInvoker generator="{WDDXParser}" 
					method="parseObject" arguments="{resultObject}" />
			</resultHandlers>
		</HTTPServiceInvoker>
	</EventHandlers>

	<!-- LearnerActivityMouseEvent.SIMPLE_ACTIVITY_DOUBLE_CLICK ________________________________________________  -->
	<EventHandlers type="{LearnerActivityMouseEvent.SIMPLE_ACTIVITY_DOUBLE_CLICK}">	
		<MethodInvoker generator="{LearnerManager}" method="launchActivity" arguments="{event.mouseEvent.currentTarget.data}" />
	</EventHandlers>
	
	<!-- LearnerActivityMouseEvent.COMPLEX_ACTIVITY_ITEM_DOUBLE_CLICK ________________________________________________  -->
	<EventHandlers type="{LearnerActivityMouseEvent.COMPLEX_ACTIVITY_ITEM_DOUBLE_CLICK}">	
		<MethodInvoker generator="{LearnerManager}" method="launchActivity" arguments="{event.listEvent.itemRenderer.data}" />
	</EventHandlers>

	<mx:HTTPService id="getLessonService" url="{serverUrl}learning/learner.do?method=getLesson" resultFormat="xml" />
	<mx:HTTPService id="joinLessonService" url="{serverUrl}learning/learner.do?method=joinLesson" resultFormat="xml" />
	<mx:HTTPService id="resumeLessonService" url="{serverUrl}learning/learner.do?method=resumeLesson" resultFormat="xml" />
	<mx:HTTPService id="exitLessonService" url="{serverUrl}learning/learner.do?method=exitLesson" resultFormat="xml" />
	<mx:HTTPService id="getFlashProgressService" url="{serverUrl}learning/learner.do?method=getFlashProgressData" resultFormat="xml" />
	<mx:HTTPService id="getLearningDesignDetailsService" url="{serverUrl}authoring/author.do?method=getLearningDesignDetails" resultFormat="xml" />
	<mx:HTTPService id="dictionaryService" url="{serverUrl}learning/learner.do?method=getDictionaryXML" resultFormat="e4x" />
	<mx:HTTPService id="launchActivityService" url="{serverUrl}learning/learner.do?method=forwardToLearnerActivityURL" resultFormat="e4x" />	
</EventMap>
