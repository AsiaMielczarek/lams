<?xml version="1.0" encoding="utf-8"?>
<mx:Panel xmlns:mx="http://www.adobe.com/2006/mxml" xmlns="*" width="100%" height="100%"
	xmlns:vos="org.lamsfoundation.lams.vos.*" xmlns:mate="http://mate.asfusion.com/"
	xmlns:model="org.lamsfoundation.lams.model.*" 
	title="{dictionary.getLabel('time.chart.panel.title')}" 
	horizontalAlign="center">

	<mx:Script>
		<![CDATA[
			import org.lamsfoundation.lams.common.dictionary.XMLDictionaryRegistry;
		
			import org.lamsfoundation.lams.common.dictionary.XMLDictionary;
			import mx.charts.chartClasses.IAxis;
			import mx.charts.LinearAxis;
			import mx.events.ItemClickEvent;
			import mx.controls.Button;
			import mx.charts.HitData;
			import mx.charts.CategoryAxis;
			import mx.charts.series.items.PieSeriesItem;
			
			import org.lamsfoundation.lams.vos.CompletedActivity;
			import mx.collections.ArrayCollection;
            import org.lamsfoundation.lams.events.*;
            import org.lamsfoundation.lams.vos.LearnerProgress;
            
			private const LEARNER:uint = 0;
			private const CLASS:uint = 1;
			
			private const ACTIVITY_SPLIT__BUTTON:uint = 0;
			private const COMPLETION__BUTTON:uint = 1;
			
			[Bindable]
			public var selectedLearnerProgress:LearnerProgress;
			
			[Bindable]
			public var learnerProgressData:ArrayCollection = new ArrayCollection();
			
			[Bindable]
			public var _learnerProgressList:ArrayCollection = new ArrayCollection();
			
			[Bindable]
			public var _activityProgressList:ArrayCollection = new ArrayCollection();
			
			[Bindable]
			public var _averageProgressList:ArrayCollection = new ArrayCollection();
			
			[Bindable]
			public var dictionary:XMLDictionaryRegistry;
			
			include 'Chart_functions.as'
			include 'Chart_eventHandlers.as'

			public function loadLearner():void {
				chartViews.selectedIndex = LEARNER;
				
				showAverage.visible = false;
				selectLearnerForm.visible = false;
				
				initButtons();
			}
	
			public function loadClass():void {
				chartViews.selectedIndex = CLASS;
				
				showAverage.selected = true;
				
				initButtons();
				
				chart_button_bar.selectedIndex = COMPLETION__BUTTON;
			}
			
			private function initButtons():void {
	   			Button(chart_button_bar.getChildAt(ACTIVITY_SPLIT__BUTTON)).label = dictionary.getLabel('chart.btn.activity.split');
				Button(chart_button_bar.getChildAt(COMPLETION__BUTTON)).label = dictionary.getLabel('chart.btn_completion.rate');
   			}

			[Bindable]
   			public var learnerFillColor:Number = 0x0000FF;

    		[Bindable]
   			public var avgFillColor:Number = 0x008000;
   			
   			
		]]>
	</mx:Script>
	
	<!-- Event Listeners -->
	<mate:Listener type="{ChartEvent.LOAD_LEARNER}" 		receive="loadLearner()" />
	<mate:Listener type="{ChartEvent.LOAD_CLASS}" 			receive="loadClass()" />
	<mate:Listener type="{ChartEvent.UPDATE}"				receive="loadSelectedLearner()" />
	<mate:Listener type="{ChartEvent.SELECT}"				receive="loadSelectedLearner()" />

	<!-- Model ______________________________________________________________________ -->
	
	<!-- GUI ______________________________________________________________________ -->
	
	<!-- Define custom Line Strokes. -->
	<mx:Stroke id ="s1" color="{learnerFillColor}" weight="2"/>
	<mx:Stroke id ="s2" color="{avgFillColor}" weight="2"/>
		
	<!-- HEADER -->
	<mx:VBox width="100%" height="100%" paddingLeft="10" paddingRight="10" paddingTop="10" paddingBottom="10">
		<mx:Label id="chart_lbl"/>
				
		<!-- Button row -->
		<mx:ToggleButtonBar id="chart_button_bar" horizontalGap="2" itemClick="chartControlHandler(event)">
			<mx:dataProvider >
				<mx:Array>
					<mx:String> </mx:String>
					<mx:String> </mx:String>
				</mx:Array>
			</mx:dataProvider>
		</mx:ToggleButtonBar>
		
		<mx:VBox horizontalAlign="center" width="100%" height="100%">
			<!-- View stack for controlling the different chart views -->    
			<mx:ViewStack id="chartViews" width="100%" height="100%">
				
				<mx:VBox id="learner_pie_box">
					<!-- start Learner progress pie chart -->
					<mx:PieChart id="learnerPieChart" width="100%" dataProvider="{_learnerProgressList}" dataTipFunction="learnerPieDataTip" showDataTips="true" height="100%">
				        <mx:series>
					    		<mx:PieSeries id="learner_pie_ser" field="Duration" nameField="Title" labelField="Title" labelPosition="callout"/>
					    </mx:series>
					</mx:PieChart>
					
					<!-- Legend <mx:Legend dataProvider="{learnerPieChart}" /> -->
					<!-- end Learner progress pie chart -->
				</mx:VBox>
				
				<mx:VBox id="learner_line_box" height="100%" width="100%">
					<!-- start Learner line of completion chart -->
					<mx:CartesianChart id="learnerLineChart" dataProvider="{_learnerProgressList}" width="100%" showDataTips="true" dataTipFunction="learnerPlotDataTrip" dataTipMode="single" height="100%">
						<mx:verticalAxis>
			                <mx:LinearAxis 
			                    title="{dictionary.getLabel('chart.learner.linear.axis.title')}" 
			                    minimum="0"
			                    labelFunction="labelLinAxis"
			                />
		           		</mx:verticalAxis>
		
						<mx:horizontalAxis>
							<mx:CategoryAxis 
				           		dataFunction="dataLearnerPlot"
				           		labelFunction="labelLearnerPlot"
				           		title="{dictionary.getLabel('chart.learner.category.axis.title')}"
				            />
						</mx:horizontalAxis>
						<mx:series>
							<!-- learner plot -->
							<mx:PlotSeries xField="Activity" yField="Completed" itemRenderer="mx.charts.renderers.TriangleItemRenderer" displayName="{dictionary.getLabel('chart.series.completed.time')}" />
							<mx:LineSeries name="completion" xField="Activity" yField="Completed" form="curve" lineStroke="{s1}" />
							
							<!-- average plot -->
							<mx:PlotSeries dataProvider="{_averageProgressList}" xField="Activity" yField="Completed" itemRenderer="mx.charts.renderers.TriangleItemRenderer" displayName="{dictionary.getLabel('chart.series.average.time')}" visible="{showAverage.selected}" />
							<mx:LineSeries dataProvider="{_averageProgressList}" name="average" xField="Activity" yField="Completed" form="curve" lineStroke="{s2}" visible="{showAverage.selected}" />
						</mx:series>
					</mx:CartesianChart>
					
			 	 	<!-- Legend -->
		
					<mx:Legend>
						<mx:LegendItem label="{selectedLearnerProgress.userName}" fontWeight="bold">
							<mx:fill>
								<mx:SolidColor color="{learnerFillColor}" />
							</mx:fill>
						</mx:LegendItem>
						<mx:LegendItem visible="{showAverage.selected}" label="{dictionary.getLabel('chart.legend.average')}" fontWeight="bold">
							<mx:fill>
								<mx:SolidColor color="{avgFillColor}" />
							</mx:fill>
						</mx:LegendItem>
					</mx:Legend>
					
					<!-- end Learner line of completion chart -->
				</mx:VBox>
				
				<mx:VBox id="class_col_box">
					<!-- start Class column chart -->		
					<mx:ColumnChart id="classProgressChart" width="100%" dataProvider="{_learnerProgressList}" height="100%">
					 	<mx:horizontalAxis>
				           <mx:CategoryAxis 
				           		dataProvider="{_learnerProgressList}"
				           		categoryField="Title"
				            />
				        </mx:horizontalAxis>
			            <mx:series>
				    		<mx:ColumnSeries id="cols_ser" xField="Title" yField="Duration" displayName="{dictionary.getLabel('chart.series.duration')}"/>
				    		<mx:ColumnSeries id="avg_ser" xField="Title" yField="Duration" displayName="{dictionary.getLabel('chart.legend.average')}" visible="{showAverage.selected}" />
						</mx:series>
					</mx:ColumnChart>
				</mx:VBox>
			
			</mx:ViewStack>
			
			<mx:Form id="selectLearnerForm" visible="{chartViews.selectedIndex == CLASS}">
				<mx:CheckBox id="showAverage" enabled="true" selected="false" label="{dictionary.getLabel('show.average.checkbox')}" />
				<mx:HBox>
					<mx:ComboBox id="selectedLearner_cmb" dataProvider="{learnerProgressData}" labelFunction="learnerName" selectedIndex="{learnerProgressData.getItemIndex(selectedLearnerProgress)}" change="selectLearnerEvent(event)"/>
					<mx:TextInput id="searchLearner_txt" text="{dictionary.getLabel('search.learner.textbox')}" width="200" enabled="true" click="clearSearch(event)" change="applyFilter()" />
				</mx:HBox>
			</mx:Form>
		</mx:VBox>
	</mx:VBox>

	 
</mx:Panel>