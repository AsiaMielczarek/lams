<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="300" height="115" verticalScrollPolicy="off" horizontalScrollPolicy="off" creationComplete="onCreationComplete()" borderStyle="none">
	<mx:Script>
		<![CDATA[
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import org.lamsfoundation.lams.common.util.LAMSStringUtil;
			import mx.events.FlexEvent;
			import org.lamsfoundation.lams.common.dictionary.XMLDictionary;
			import mx.core.Application;
			
			private var _userId:int;
			public var allowLearnerVideoExport:Boolean;
			public var allowLearnerVideoVisibility:Boolean;
			public var mode:String;
			public var dictionary:XMLDictionary;
			public var contentEditable:Boolean;
		
			[Embed(source="assets/images/user.png")] [Bindable] private var userIcon:Class;
			[Embed(source="assets/images/date.png")] [Bindable] private var dateIcon:Class;
			[Embed(source="assets/images/pencil.png")] [Bindable] private var titleIcon:Class;
			[Embed(source="assets/images/note.png")] [Bindable] private var descriptionIcon:Class;
			[Embed(source="assets/images/cross.png")] [Bindable] private var deleteIcon:Class;
			[Embed(source="assets/images/customer_logo.gif")] [Bindable] private var lamsIcon:Class;
			
			private function onCreationComplete():void{	
				// add a tooltooltip
				if(dictionary)
					deleteButton.toolTip = dictionary.getLabel("videorecorder.tooltip.delete.recording");
				
				// update border
				updateBorder();
				
				// add listeners
				addEventListener(FlexEvent.DATA_CHANGE, dataChanged);
				deleteButton.addEventListener(MouseEvent.CLICK, deleteClick);
			}
			
			[Bindable(event="deleteButtonStatusChanged")]
			private function isDeleteButtonAvailable():Boolean{
				return (( data.userUid == _userId || mode != Application.application.LEARNER_MODE) && contentEditable);
			}
			
			private function updateBorder():void{
				if(LAMSStringUtil.stringToBool(data.isToolContent)){
					this.setStyle("borderStyle", "solid");
				}
				else{
					this.setStyle("borderStyle", "none");
				}
			}
			
			private function dataChanged(event:FlexEvent):void{
				updateBorder();
                dispatchEvent(new Event("deleteButtonStatusChanged"));
			}
			
			public function set userId(value:int):void {
                _userId = value;
                dispatchEvent(new Event("deleteButtonStatusChanged"));
            }

            public function get userid():int {
                return _userId;
            }
		
			// delete recording click handler
			private function deleteClick(event:MouseEvent):void{
				if(event.target.hasOwnProperty("id") && event.target.id == "deleteButton"){
					event.stopImmediatePropagation();
					
					if(dictionary){
						Alert.show(dictionary.getLabel("videorecorder.message.sure.delete"), dictionary.getLabel("videorecorder.confirm"), 3, Sprite(Application.application), confirmDeleteClick);  
					}
					else{
						Alert.show("videorecorder.message.sure.delete", "videorecorder.confirm", 3, Sprite(Application.application), confirmDeleteClick);  
					}
				}
			}
			
			// confirm delete click handler
			private function confirmDeleteClick(event:CloseEvent):void{
				if (event.detail==Alert.YES){
					var recordingId:int = data.recordingId;
					dispatchEvent(new Event("recordingDeleted", true, false));
                }
			}
	    ]]>
	</mx:Script>
	<mx:VBox width="100%" height="100%" paddingBottom="0" paddingLeft="0" paddingRight="0" paddingTop="0" verticalGap="0" verticalScrollPolicy="off" horizontalScrollPolicy="off" borderStyle="none" verticalAlign="middle">
		<mx:HBox width="100%" height="100%" paddingBottom="3" paddingLeft="5" paddingRight="5" paddingTop="5" horizontalGap="4" verticalScrollPolicy="off" horizontalScrollPolicy="off">
			<mx:Image width="95" height="71.25" id="previewImage" source="{data.previewImage}"/>
			<mx:VBox width="100%" height="72" verticalGap="0" horizontalScrollPolicy="off" verticalScrollPolicy="off">
				<mx:HBox>
					<mx:Image  source="{titleIcon}"/>
					<mx:Label fontWeight="bold" id="titleLabel" text="{data.title}" width="100%" textAlign="left"/>
				</mx:HBox>
				<mx:HBox>
					<mx:Image  source="{userIcon}"/>
					<mx:Label id="authorLabel" text="{data.author}" width="100%" textAlign="left"/>
				</mx:HBox>
				<mx:HBox>
					<mx:Image  source="{descriptionIcon}"/>
					<mx:Label id="descriptionLabel" text="{data.description}" width="100%" textAlign="left"/>
				</mx:HBox>
				<mx:HBox>
					<mx:Image  source="{dateIcon}"/>
					<mx:Label id="dateLabel" text="{data.createDate}" fontStyle="italic" width="100%" textAlign="left"/>
				</mx:HBox>
			</mx:VBox>
		</mx:HBox>
		<mx:HBox width="100%" height="100%" paddingTop="0" paddingRight="5" paddingLeft="5" paddingBottom="5" verticalAlign="middle" horizontalScrollPolicy="off" verticalScrollPolicy="off" id="videoProfileButtonBox">
			<mx:Button icon="{deleteIcon}" width="25" height="20" id="deleteButton" visible="{isDeleteButtonAvailable()}"/>
		</mx:HBox>
	</mx:VBox>
</mx:Canvas>
