<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" height="65" width="52" 
	dragExit="dragExit(event);" 
	dragDrop="dragDrop(event);"
	dragEnter="dragEnter(event);"
	>

	<mx:Script>
		<![CDATA[
			import org.lamsfoundation.lams.author.controller.TransitionController;
			import org.lamsfoundation.lams.author.controller.AuthorController;
			import org.lamsfoundation.lams.author.events.TransitionEvent;
			import org.lamsfoundation.lams.author.components.transition.TransitionComponent;
			import org.lamsfoundation.lams.author.events.AuthorEvent;
			import org.lamsfoundation.lams.author.components.activity.ActivityComponent;
			import mx.managers.DragManager;
			import org.lamsfoundation.lams.author.util.Constants;
			import org.lamsfoundation.lams.author.events.AuthorActivityEvent;
			import mx.core.Application;
			import mx.events.DragEvent;

			
			[Bindable]
			[Embed("assets/icons/bin.png")] 
			private var bin:Class;
			
			[Bindable]
			[Embed("assets/icons/bin_over.png")] 
			private var binOver:Class;
			
			private function dragEnter(event:DragEvent):void {
				if (event.dragSource.hasFormat("dragTransition") || event.dragSource.hasFormat("dragActivity"))
                {
                    DragManager.acceptDragDrop(Canvas(event.currentTarget));
                    image.source = binOver;
                }
			}
			
			private function dragExit(event:DragEvent):void {
				image.source = bin;
			}
			
			private function dragDrop(event:DragEvent):void {
				image.source = bin;
				if (event.dragInitiator is ActivityComponent) {
					AuthorController.instance.deleteActivity(event.dragInitiator as ActivityComponent);
				} else if (event.dragInitiator is TransitionComponent) {
					TransitionController.instance.deleteTransition(event.dragInitiator as TransitionComponent);
				}
			}
		]]>
	</mx:Script>
	


	<mx:Image id="image" source="{bin}" styleName="binImage" height="65" width="52"/>

	
</mx:Canvas>
