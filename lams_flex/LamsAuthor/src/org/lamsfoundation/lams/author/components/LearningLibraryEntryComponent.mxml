<?xml version="1.0" encoding="utf-8"?>
<mx:HBox xmlns:mx="http://www.adobe.com/2006/mxml" 
	width="100%" height="25" 
	verticalAlign="middle" 
	horizontalGap="0"
	mouseMove="mouseMoveHandler(event)"
	>
	
	<mx:Script>
		<![CDATA[
			import org.lamsfoundation.lams.author.model.learninglibrary.LearningLibraryEntry;
			import org.lamsfoundation.lams.author.components.activity.*;
			
			import mx.controls.Image;
			import mx.controls.Label;
			import mx.core.DragSource;
			import mx.managers.DragManager;
			import mx.core.UIComponent;
			
			public var iconImage:Image;
			public var title:Label;
			public var learningLibraryEntry:LearningLibraryEntry;
					
			public function load(learningLibraryEntry:LearningLibraryEntry):void {
				this.learningLibraryEntry = learningLibraryEntry;
				
				iconImage = new Image();
				iconImage.source = learningLibraryEntry.icon;
				iconImage.height = 25;
				this.addChild(iconImage);
	
				title = new Label();
				title.text = learningLibraryEntry.title;
				this.addChild(title);
				
			}
			
			
			// The mouseMove event handler for the Image control
	        // initiates the drag-and-drop operation.
	        private function mouseMoveHandler(event:MouseEvent):void 
	        {                
	        	var dragInitiator:LearningLibraryEntryComponent = event.currentTarget as LearningLibraryEntryComponent;
	        	var ds:DragSource = new DragSource();
	        	
	        	if (dragInitiator.learningLibraryEntry.isCombined) {
	        		var combinedAactivityComponent:CombinedActivityComponent = new CombinedActivityComponent();
	        		combinedAactivityComponent.learningLibraryEntry = dragInitiator.learningLibraryEntry
	        		combinedAactivityComponent.load();
					combinedAactivityComponent.x = UIComponent(event.currentTarget).mouseX;
          			combinedAactivityComponent.y = UIComponent(event.currentTarget).mouseY; 
          			ds.addData(combinedAactivityComponent, "img"); 
	            	DragManager.doDrag(dragInitiator, ds, event, combinedAactivityComponent, 25, 15, 1.00, false);   
	        	} else {
	        		var toolActivityComponent:ToolActivityComponent = new ToolActivityComponent();
	        		toolActivityComponent.tool = dragInitiator.learningLibraryEntry.toolTemplates[0];
	        		toolActivityComponent.load();
					toolActivityComponent.x = UIComponent(event.currentTarget).mouseX;
          			toolActivityComponent.y = UIComponent(event.currentTarget).mouseY;
          			ds.addData(toolActivityComponent, "img"); 
	            	DragManager.doDrag(dragInitiator, ds, event, toolActivityComponent, 25, 15, 1.00, false);   
	        	}
	        }
		]]>
	</mx:Script>
</mx:HBox>
