<?xml version="1.0" encoding="utf-8"?>
<ButtonPanel xmlns:mx="http://www.adobe.com/2006/mxml" 
	buttonClick="toggleMininmiseMaximise()" buttonPadding="4"
	buttonIcon="{minimiseIcon}"
	xmlns:group="org.lamsfoundation.lams.author.components.activity.group.*"
	xmlns="org.lamsfoundation.lams.common.ui.components.*"
	layout="absolute"
	minWidth="250"
	rollOver="rollOver(event)"
	rollOut="rollOut(event)"
	title="{Application.application.dictionary.getLabel('pi_title')}"
	styleName="propertyInspectorUnselected"
	visible="false"
	>
	
	<mx:Style source="assets/css/propertyInspector.css" />
	
	<mx:Script>
		<![CDATA[
			import org.lamsfoundation.lams.author.util.AuthorUtil;
			import org.lamsfoundation.lams.author.controller.AuthorController;
			import org.lamsfoundation.lams.author.model.ToolOutputDefinition;
			import mx.events.ListEvent;
			import org.lamsfoundation.lams.author.components.activity.group.LearnerGroupActivityComponent;
			import org.lamsfoundation.lams.author.components.activity.group.MonitorGroupActivityComponent;
			import mx.collections.ArrayCollection;
			import mx.core.UIComponent;
			import org.lamsfoundation.lams.author.components.activity.group.RandomGroupActivityComponent;
			import org.lamsfoundation.lams.author.components.activity.group.GroupActivityComponent;
			import mx.binding.utils.ChangeWatcher;
			import mx.binding.utils.BindingUtils;
			import org.lamsfoundation.lams.author.components.activity.ActivityComponent;
			import org.lamsfoundation.lams.author.components.activity.ToolActivityComponent;
			import mx.core.Application;
			import mx.managers.PopUpManager;
		
			
			public static const MIN_INPUT_WIDTH:int = 100;
			public static const MAX_INPUT_WIDTH:int = 100;
			
			[Bindable] private var selectedActivityComponent:ActivityComponent;
			
			
			private var titleDisabledColors:Object;
			
			[Bindable]
			private var applicationCenter:Point = new Point();
			
			[Bindable]
			[Embed("assets/icons/minimise.png")] 
			private var minimiseIcon:Class;
			
			[Bindable]
			[Embed("assets/icons/maximise.png")] 
			private var maximiseIcon:Class;
						
			public function openPropertyInspector():void {
				visible = true;
				PopUpManager.addPopUp(this, this, false);
				
				applicationCenter.x = Application.application.width/2;
				applicationCenter.y = Application.application.height/2;
			}
			
			public function closePropertyInspector():void {
				visible = false;
				PopUpManager.removePopUp(this);
			}
			
			// Enable the propertyInspector on rollOver
			private function rollOver(event:MouseEvent):void {
					this.styleName = "propertyInspectorSelected";
					setChildIndex(opacityLayer, 0);
			}
			
			// Disable and white out the propertyInspector on rollOut
			private function rollOut(event:MouseEvent):void {

				// Check the mouse is not still within the area of the propertyInspector
				if (event.localX < 0 || event.localX > width || event.localY < 0 || event.localY > height){
					this.styleName = "propertyInspectorUnselected"
					setChildIndex(opacityLayer, this.getChildren().length -1);
					focusManager.hideFocus();
				}
				
			}
			
			// Minimise/Maximise the property inspector
			private function toggleMininmiseMaximise():void {
				if (vbox.visible) {
					this.vbox.visible = false;
					this.vbox.includeInLayout = false;
					this.opacityLayer.visible = false;
					this.opacityLayer.includeInLayout = false;
					this.mybtn.setStyle("icon", maximiseIcon);
				} else {
					this.vbox.visible = true;
					this.vbox.includeInLayout = true;
					this.opacityLayer.visible = true;
					this.opacityLayer.includeInLayout = true;
					this.mybtn.setStyle("icon", minimiseIcon);
				}
			}
		]]>
	</mx:Script>
	
	<mx:Binding destination="selectedActivityComponent" source="AuthorController.instance.selectedActivityComponent" />
	<mx:Binding destination="selectedActivityComponent.title" source="txtTitle.text" />
	
	<mx:VBox id="vbox" height="100%" width="100%" 
		horizontalAlign="center" verticalGap="2" paddingBottom="3" paddingLeft="2" paddingRight="2" top="5">
		<mx:Grid id="grid" verticalGap="4">
			<mx:GridRow height="16" visible="{selectedActivityComponent != null}" 
				includeInLayout="{selectedActivityComponent != null}">
				<mx:GridItem>
					<mx:Label text="{Application.application.dictionary.getLabel('pi_lbl_title')}" height="22" />
				</mx:GridItem>
				<mx:GridItem>
					<mx:TextInput id="txtTitle" width="100" maxChars="256" height="22" 
						text="{selectedActivityComponent.title}" />
				</mx:GridItem>
			</mx:GridRow>
			<!--<mx:GridRow id="groupingGridRow" visible="{AuthorUtil.activitySupportsGrouping(selectedActivityComponent.activityTypeID)}" 
				includeInLayout="{AuthorUtil.activitySupportsGrouping(selectedActivityComponent.activityTypeID)}">
				<mx:GridItem>
					<mx:Label text="{Application.application.dictionary.getLabel('grouping_act_title')}" />
				</mx:GridItem>
				<mx:GridItem>
					<mx:ComboBox id="groupingCombo" change="groupChange(event)" labelField="title" dataProvider="{currentAvailableGroups}" width="{MIN_INPUT_WIDTH}" dropdownWidth="250"  />
				</mx:GridItem>
			</mx:GridRow>-->
		</mx:Grid>
	</mx:VBox>
	<mx:Canvas id="opacityLayer" height="100%" width="100%" backgroundColor="white" backgroundAlpha="0.6" />
	
	<mx:ArrayCollection id="currentAvailableGroups" />
	<mx:ArrayCollection id="toolOutputDefs" />
	

</ButtonPanel>
