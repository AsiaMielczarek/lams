<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" width="328" height="196" title="New Recording Details" xmlns:flexlib="http://code.google.com/p/flexlib/" creationComplete="onCreationComplete()">

	<mx:Script>
        <![CDATA[
        	import mx.controls.Alert;
        	import mx.core.UITextField;
        	import mx.managers.IFocusManagerComponent;
        	import mx.core.UIComponent;
        	import mx.events.ValidationResultEvent;
        	import org.lamsfoundation.lams.common.dictionary.XMLDictionary;       
            import mx.managers.PopUpManager;
            import mx.validators.Validator;
	       	
	       	private var _dictionary:XMLDictionary;
	       	private var focussedFormControl:DisplayObject;
	       	
	       	[Bindable] private var formIsValid:Boolean = false;
	       	
		   	private function onCreationComplete():void{
		   		focusManager.setFocus(titleInput);
		   	}
		   			   	
		   	public function init(dictionary:XMLDictionary):void{
		   		this.dictionary = dictionary;
		   		this.title = dictionary.getLabel("videorecorder.new.recording.details");
		   		titleLabel.text = dictionary.getLabelAndConcatenate("videorecorder.title", [":"]);
		   		descriptionLabel.text = dictionary.getLabelAndConcatenate("videorecorder.description", [":"]);
		   		titleInput.prompt = dictionary.getLabelAndReplace("videorecorder.enter.something.here", ["videorecorder.title"], true);
		   		descriptionInput.prompt = dictionary.getLabelAndReplace("videorecorder.enter.something.here", ["videorecorder.description"], true);
		   		doneButton.label = dictionary.getLabel("button.save");
		   		doneButton.toolTip = dictionary.getLabel("videorecorder.tooltip.save.recording");
		   	}
		   	
		   	public function set dictionary(dictionary:XMLDictionary):void{
		   		_dictionary = dictionary;
		   	}
		   	
		   	public function get dictionary():XMLDictionary{
		   		return _dictionary;
		   	}
		   	
			// validate the form
			private function validateForm(event:Event):void 
			{
				// get focused component
				focussedFormControl = event.target as DisplayObject;  
				
			    // mark as valid           
			    formIsValid = true;
			    
				//check each validator
			    validate(titleValidator);
				validate(descValidator);
			}
			
			// validate a given validator
			private function validate(validator:Validator):Boolean
			{   
				var validatorSource:DisplayObject = validator.source as DisplayObject;
				var suppressEvents:Boolean = (validatorSource != focussedFormControl);
				var event:ValidationResultEvent = validator.validate(null, suppressEvents); 
				var currentControlIsValid:Boolean = (event.type == ValidationResultEvent.VALID);
				
				formIsValid = formIsValid && currentControlIsValid;
				
				return currentControlIsValid;
			}
		   	
        ]]>
    </mx:Script>
    
    <mx:StringValidator id="titleValidator" source="{titleInput}" property="text" minLength="1"/>
    <mx:StringValidator id="descValidator" source="{descriptionInput}" property="text" minLength="1"/>

	<mx:Label x="10" y="10" text="Title:" id="titleLabel"/>
	<mx:Label x="10" y="39" text="Description:" id="descriptionLabel"/>
	<flexlib:PromptingTextInput y="8" editable="true" id="titleInput" prompt="Enter title here" left="89" right="14" change="validateForm(event)"/>
	<flexlib:PromptingTextArea wordWrap="true" editable="true" prompt="Enter description here" id="descriptionInput" left="89" right="14" top="38" bottom="10" change="validateForm(event)"/>
	<mx:ControlBar height="41" y="431">
		<mx:HBox width="100%" height="100%" horizontalAlign="right">
			<mx:Button label="Done" id="doneButton" enabled="{formIsValid}" click="dispatchEvent(new Event('popUpClose'))"/>
		</mx:HBox>
	</mx:ControlBar>
</mx:TitleWindow>
