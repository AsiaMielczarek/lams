<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<!--
 - Application context definition for LAMS. Used to deploy to JBOSS.
-->

<beans>

	<import resource="commonContext.xml"/>

	<!-- JNDI DataSource for all "core" components 		  -->
	<!-- uses lams-ds datasource set up in the app-server -->
	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName"><value>java:jdbc/lams-ds</value></property>
	</bean>

	<!-- JNDI DataSource for all tools				      -->
	<!-- uses tool-ds datasource set up in the app-server -->
	<bean id="toolDataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName"><value>java:jdbc/tool-ds</value></property>
	</bean>

	<!--  Transaction manager for all transactions involving the core classes or the content repository. -->
	
	<!--  If your code calls classes in the content repository or in the core, and your data needs   -->
	<!--  to be consistent with the rest of the system (and what data doesn't.... ), then you 		 -->
	<!--  must use this transaction manager. If you do not, then the core code data changes will be  -->
	<!--  committed independent of your changes. 			 										 -->
	<bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
	</bean>

</beans>

