<?xml version="1.0" encoding="UTF-8"?>

<project name="LAMS Common" basedir="." default="print-usage">
	
	<import file="../lams_build/build_base.xml"/> 

	<!-- Below are Tool specifc targets and targets overriding ones from the imported base file. -->
	<fileset id="hbm.fileset" dir="${src.java.dir}"
		     description="List of Java files for _build-hbm target.">
		<!-- Configuration -->
		<include name="**/ConfigurationItem.java" />
		<include name="**/Registration.java" />
		<include name="**/Timezone.java" />
		<!-- Event Notification and Pedagogical Planner -->
		<include name="**/Event.java" />
		<include name="**/Subscription.java" />
		<include name="**/LogEvent.java" />
		<include name="**/PedagogicalPlanner*.java" />
		<include name="**/DataFlowObject.java" />
		<!-- Evaluation -->
		<include name="**/ActivityEvaluation.java" />
		<include name="**/GradebookUserActivity.java" />
		<include name="**/GradebookUserLesson.java" />
		<!-- Notebook -->
		<include name="**/NotebookEntry.java" />
	</fileset>
	
	
	<target name="print-usage" depends="build_base.print-usage"
	        description="Displays Ant targets descriptions">
		<echo>
		build-db-test           --> Inserts test data to database.
		</echo>	
	</target>
		
		
	<target name="_build-jar" depends="_compile-java, _build-hbm, _copy-language">
		<echo>${ant.project.name}: Building main JAR</echo>
		<jar jarfile="${build.lib}/${product}.jar">
			<fileset dir="${build.classes.java}">
				<exclude name="**/LoginRequestValve.class"/>
				<exclude name="**/SingleSignOn.class"/>
			</fileset>
		</jar>
		
		<echo>${ant.project.name}: Building Session JAR</echo>
		<jar jarfile="${build.lib}/lams-session.jar">
			<fileset dir="${build.classes.java}">
				<include name="${product.path.filesystem}/web/session/*"/>
			</fileset>
		</jar>
		
		<echo>${ant.project.name}: Building Valve JAR</echo>
		<jar jarfile="${build.lib}/lams-valve.jar">
			<fileset dir="${build.classes.java}">
				<include name="${product.path.filesystem}/integration/security/LoginRequestValve.class"/>
				<include name="${product.path.filesystem}/integration/security/SingleSignOn.class"/>
			</fileset>
		</jar>
	</target>

	
	<target name="deploy-libraries" depends="_build-jar" description="Deploys library JARs.">
		<echo>Deploying library JARs</echo>
		<copy todir="${jboss.server.instance}/lib" overwrite="true" verbose="true">
			<fileset dir="${build.lib}/">
				<include name="lams-session.jar" />
				<include name="lams-valve.jar" />
			</fileset>
		</copy>
	</target>
	
	
	<target name="build-db" depends="_clean-dirs"
		description="Rebuilds LAMS database.">
		
		<echo>Rebuilding LAMS database</echo>
		<tstamp/>
		<copy todir="${build.sql}" overwrite="true" verbose="true">
			<fileset dir="${db.scripts}/">
				<include name="${lamsconf.table.sql}" />
                <include name="create_lams_11_db.sql" />
			</fileset>
	        <filterset>
	            <filter token="datetimestamp" value="${DSTAMP}${TSTAMP}"/>
                    <filter token="dbname" value="${db.name}"/>
	        </filterset>
		</copy>
		
		<echo>Executing SQL scripts</echo>
		<sql driver="${db.driver}"
		     url="${db.url.build}"
			 userid="${db.username}"
			 password="${db.password}"
			 encoding="${db.encoding}">
			<classpath>
				<fileset dir="${db.driver.dir}" includes="*.jar"/> 
			</classpath>
			
			<transaction src="${build.sql}/create_lams_11_db.sql"/>
			<transaction src="${db.scripts}/drop_lams_11_tables.sql"/>
			<transaction src="${db.scripts}/create_lams_11_tables.sql"/>
			<!-- Create tables for LAMS and other application's integration -->
			<transaction src="${db.scripts}/create_integration_tables.sql"/>
			<transaction src="${db.scripts}/insert_${conf.application}_users.sql"/> 
			<transaction src="${db.scripts}/insert_types_data.sql"/>
			<transaction src="${build.sql}/${lamsconf.table.sql}"/>
			<!-- Create Quartz table --> 
	    	<transaction src="${db.scripts}/create_quartz_table.sql"/>
			<!-- Create tables for Core Notebook Service -->
			<transaction src="${db.scripts}/create_notebook_tables.sql"/>
			<!-- Create tables for Presence Chat Service -->
			<transaction src="${db.scripts}/create_presence_chat_tables.sql"/>
			<!-- Test the scripts for translations -->
            <!-- <transaction src="${db.scripts}/shaun/all.sql"/> -->
		</sql>
	</target>


	<target name="_build-db-test">
		<!-- Internal target: Inserts test data to database -->
		<echo>${ant.project.name}: Inserting test data to database</echo>
		<antcall target="_db-script">
		    <param name="sql.script" value="${db.scripts}/insert_test_data.sql"/>
		</antcall>
	</target>
	
	
	<target name="test-report" depends="_build-db-test, build_base.test-report"
	        description="Runs JUnit tests and generates report." />


	<target name="deploy-war" depends="_target-not-available"
		    description="Deploys WAR." />
	
		
	<target name="explode-war" depends="_target-not-available"
		    description="Explodes deployed WAR to folder." />
	
	
	<target name="explode-war-delete" depends="_target-not-available"
		    description="Deletes exploded WAR folder." />
	
	
	<target name="explode-war-synchronize" depends="_target-not-available"
		    description="Copies web files into exploded WAR folder." />
	
	
	<!-- This target seems obsolete but left for future reference.
	<target 
      name="middlegen-learningdesign" 
      description="Run Middlegen For LearningDesign" 
      unless="middlegen.skip"
      depends="init,fail-if-no-xdoclet-1.2.x,check-driver-present,panic-if-driver-not-present"
    >
		<taskdef
         name="middlegen-learningdesign"
         classname="middlegen.MiddlegenTask"
         classpathref="all-libs"
        />

		<middlegen-learningdesign
         appname="learningdesign"
         prefsdir="${middlegen}"
         gui="${middlegen.gui}"
         databaseurl="${db.url.build}"
         driver="${db.driver}"
         username="${db.username}"
         password="${db.password}"
         schema="${db.schema}"
         catalog="${db.catalog}"
         includeViews="false"
        >

			<hibernate 
			destination="${conf.hibernate.mapping.dir}"
			package="${package.learningdesign.name}"
            genXDocletTags="true"
            javaTypeMapper="middlegen.plugins.hibernate.HibernateJavaTypeMapper"
            />

			<table name="lams_learning_activity"/>
			<table name="lams_learning_design"/>
			<table name="lams_learning_library"/>
			<table name="lams_learning_transition"/>
			<table name="lams_group"/>
			<table name="lams_grouping"/>

		</middlegen-learningdesign>
	</target>
	-->
</project>