<?xml version="1.0"?>

<!-- 
The DOCTYPE declaration declares the location of database-specific parts of the
Ant build file. 
-->
<!DOCTYPE project [
	<!ENTITY properties SYSTEM "file:./properties.xml">
]>

<project name="LAMS" basedir="." default="usage">

	<!-- import properties from the specified file -->
	&properties;

	<path id="all-libs">
		<fileset dir="${lib.dir}">
			<include name="**/*.jar"/>
		</fileset>
	</path>

	<target name="usage">
		<echo message=""/>
		<echo message="${project.name} build file"/>
		<echo message="------------------------------------------------------"/>
		<echo message=""/>
		<echo message="Among the available targets are:"/>
		<echo message=""/>
		<echo message="middlegen-learningdesign    --> Run middlegen for learningdesign tables"/>
		<echo message="hbm2java-learningdesign  --> Run hbm2java for learningdesign mapping files"/>
		<echo message=""/>
	</target>

	<target name="init">
		<available property="xdoclet-jars-installed" file="lib/xdoclet/xdoclet-${xdoclet.version}.jar"/>
	</target>

	<!-- =================================================================== -->
	<!-- Fails if XDoclet 1.2.x is not on classpath                          -->
	<!-- =================================================================== -->
	<target name="fail-if-no-xdoclet-1.2.x" unless="xdoclet-jars-installed">
		<fail>
	      You must download several jar files before you can build Middlegen.
	      Execute the "download-deps" target. Then try to build again.

	      If you are behind a proxy, you should define the properties
	      http.proxyHost and http.proxyPort. Example:
	      
	      ant -Dhttp.proxyHost=foo.com -Dhttp.proxyPort=8080
	      
	      It's also possible to download the jars manually.
	     </fail>
	</target>

	<target name="check-driver-present">
		<available file="${database.driver.file}" type="file" property="driver.present"/>
	</target>
	<target name="panic-if-driver-not-present" unless="driver.present">
		<fail>
	      The JDBC driver you have specified by including one of the files in ${basedir}/config/database
	      doesn't exist. You have to download this driver separately and put it in ${database.driver.file}
	      Please make sure you're using a version that is equal or superior to the one we looked for.
	      If you name the driver jar file differently, please update the database.driver.file property
	      in the ${basedir}/config/database/xxx.xml file accordingly.
	     </fail>
	</target>


	<!-- =================================================================== -->
	<!-- Run Middlegen For LearningDesign                                                       -->
	<!-- =================================================================== -->
	<target 
      name="middlegen-learningdesign" 
      description="Run Middlegen For LearningDesign" 
      unless="middlegen.skip"
      depends="init,fail-if-no-xdoclet-1.2.x,check-driver-present,panic-if-driver-not-present"
    >
		<taskdef
         name="middlegen-learningdesign"
         classname="middlegen.MiddlegenTask"
         classpathref="all-libs"
        />

		<middlegen-learningdesign
         appname="learningdesign"
         prefsdir="${middlegen.dir}"
         gui="${gui}"
         databaseurl="${database.url}"
         driver="${database.driver}"
         username="${database.userid}"
         password="${database.password}"
         schema="${database.schema}"
         catalog="${database.catalog}"
         includeViews="false"
        >

			<hibernate 
			destination="${hbm.dir}"
			package="${package.learningdesign.name}"
            genXDocletTags="true"
            javaTypeMapper="middlegen.plugins.hibernate.HibernateJavaTypeMapper"
            />

			<table name="lams_learning_activity"/>
			<table name="lams_learning_design"/>
			<table name="lams_learning_library"/>
			<table name="lams_learning_transition"/>
			<table name="lams_group"/>
			<table name="lams_grouping"/>

		</middlegen-learningdesign>

	</target>

	<!-- =================================================================== -->
	<!-- Run hbm2java for learningdesign                                                       -->
	<!-- =================================================================== -->
	<target name="hbm2java-learningdesign" description="Generate .java from .hbm files.">
		<taskdef
         name="hbm2java-learningdesign"
         classname="net.sf.hibernate.tool.hbm2java.Hbm2JavaTask"
         classpathref="all-libs"
      />
		<hbm2java-learningdesign output="${src.java.dir}">
			<fileset dir="${hbm.dir}/${package.learningdesign.dir}">
				<include name="*.hbm.xml"/>
			</fileset>
		</hbm2java-learningdesign>
	</target>

</project>

