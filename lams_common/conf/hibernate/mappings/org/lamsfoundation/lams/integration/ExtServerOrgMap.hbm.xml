<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd" >
    
<hibernate-mapping>
<!-- 
    Created by the Middlegen Hibernate plugin 2.1

    http://boss.bekk.no/boss/middlegen/
    http://www.hibernate.org/
-->

<class 
    name="org.lamsfoundation.lams.integration.ExtServerOrgMap" 
    table="lams_ext_server_org_map"
>
    <meta attribute="class-description" inherit="false">
       @hibernate.class
        table="lams_ext_server_org_map"
    </meta>
	
    <id
        name="sid"
        type="java.lang.Integer"
        column="sid"
    >
        <meta attribute="field-description">
           @hibernate.id
            generator-class="native"
            type="java.lang.Integer"
            column="sid"


        </meta>
        <meta attribute="use-in-equals">true</meta>
        <generator class="native" />
    </id>

    <property
        name="serverid"
        type="java.lang.String"
        column="serverid"
        not-null="true"
        unique="true"
        length="255"
    >
        <meta attribute="use-in-tostring">true</meta>
        <meta attribute="field-description">
           @hibernate.property
            column="serverid"
            unique="true"
            length="255"
            not-null="true"
        </meta>    
    </property>
    <property
        name="serverkey"
        type="java.lang.String"
        column="serverkey"
        not-null="true"
        length="65535"
    >
        <meta attribute="use-in-tostring">true</meta>
        <meta attribute="field-description">
           @hibernate.property
            column="serverkey"
            length="65535"
            not-null="true"
        </meta>    
    </property>
    <property
        name="servername"
        type="java.lang.String"
        column="servername"
        not-null="true"
        length="255"
    >
        <meta attribute="use-in-tostring">true</meta>
        <meta attribute="field-description">
           @hibernate.property
            column="servername"
            length="255"
            not-null="true"
        </meta>    
    </property>
    <property
        name="serverdesc"
        type="java.lang.String"
        column="serverdesc"
        length="65535"
    >
        <meta attribute="field-description">
           @hibernate.property
            column="serverdesc"
            length="65535"
        </meta>    
    </property>
    <property
        name="prefix"
        type="java.lang.String"
        column="prefix"
        not-null="true"
        unique="true"
        length="11"
    >
        <meta attribute="field-description">
           @hibernate.property
            column="prefix"
            unique="true"
            length="11"
            not-null="true"
        </meta>    
    </property>
    <property
        name="userinfoUrl"
        type="java.lang.String"
        column="userinfo_url"
        not-null="true"
        length="65535"
    >
        <meta attribute="field-description">
           @hibernate.property
            column="userinfo_url"
            length="65535"
            not-null="true"
        </meta>    
    </property>
    <property
        name="timeoutUrl"
        type="java.lang.String"
        column="timeout_url"
        not-null="true"
        length="65535"
    >
        <meta attribute="field-description">
           @hibernate.property
            column="timeout_url"
            length="65535"
            not-null="true"
        </meta>    
    </property>
    <property
        name="disabled"
        type="java.lang.Boolean"
        column="disabled"
        not-null="true"
        length="1"
    >
        <meta attribute="field-description">
           @hibernate.property
            column="disabled"
            length="1"
            not-null="true"
        </meta>    
    </property>

    <!-- Associations -->
  
    <!-- bi-directional one-to-many association to ExtCourseClassMap -->
    <set
        name="extCourseClassMaps"
        lazy="true"
        inverse="true"
		cascade="none"
    >
        <meta attribute="field-description">
           @hibernate.set
            lazy="true"
            inverse="true"
            cascade="none"

           @hibernate.collection-key
            column="ext_server_org_map_id"

           @hibernate.collection-one-to-many
            class="org.lamsfoundation.lams.integration.ExtCourseClassMap"
        </meta>
        <key>
            <column name="ext_server_org_map_id" />
        </key>
        <one-to-many 
            class="org.lamsfoundation.lams.integration.ExtCourseClassMap"
        />
    </set>
    <!-- bi-directional one-to-many association to ExtUserUseridMap -->
    <set
        name="extUserUseridMaps"
        lazy="true"
        inverse="true"
		cascade="none"
    >
        <meta attribute="field-description">
           @hibernate.set
            lazy="true"
            inverse="true"
            cascade="none"

           @hibernate.collection-key
            column="ext_server_org_map_id"

           @hibernate.collection-one-to-many
            class="org.lamsfoundation.lams.integration.ExtUserUseridMap"
        </meta>
        <key>
            <column name="ext_server_org_map_id" />
        </key>
        <one-to-many 
            class="org.lamsfoundation.lams.integration.ExtUserUseridMap"
        />
    </set>
    <!-- bi-directional many-to-one association to Organisation -->
    <many-to-one
        name="organisation"
        class="org.lamsfoundation.lams.usermanagement.Organisation"
        not-null="true"
        lazy="false"
    >
        <meta attribute="field-description">
           @hibernate.many-to-one
            not-null="true"
           	lazy="false"         
           @hibernate.column name="orgid"
        </meta>
        <column name="orgid" />
    </many-to-one>

</class>
</hibernate-mapping>
