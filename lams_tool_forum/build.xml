<?xml version="1.0" encoding="UTF-8"?>
<project name="LAMS Forum" basedir="." default="_build">
	<!-- begin properties *******************************************************************************************-->
	<!-- import properties from the specified file -->
	<property file="build.properties"/>
	<property file="../lams_build/common.properties"/>
	
	<property name="project.displayname" value="${project} - ${project.displayname}"/>
	<property name="project.description" value="${project} - ${project.description}"/>

	<!-- fixed filesystem property structure /-->
	<property name="lib.dir" value="${basedir}/lib"/>
	<property name="classes.dir" value="${build}/classes"/>

    <property name="test.lib.dir" value="${basedir}/test/lib"/>
    <property name="test.classes.dir" value="${basedir}/test/classes"/>
    <property name="test.result" value="${basedir}/test/testresult"/>

	<!-- end properties *********************************************************************************************-->

	<!-- begin path *************************************************************************************************-->
	<path id="all-libs">
		<fileset dir="${lib}">
			<include name="**/*.jar"/>
		</fileset>
		<fileset dir="${sharedlib}">
			<include name="**/*.jar"/>
		</fileset>
		<fileset dir="${j2eelibs}">
			<include name="**/*.jar"/>
		</fileset>
	</path>

	<path id="project.classpath">
		<path refid="all-libs"/>
		<!-- Java CLASSPATH should be added as the last item -->
		<!-- This property is supposed to be set in eclipse  -->
		<pathelement location="${java.class.path}" />
	</path>

	<path id="build.class.path">
		<fileset dir="${lib.dir}/build">
			<include name="**/*.jar"/>
		</fileset>
    </path>

	<!-- end path ***************************************************************************************************-->

	<!-- begin tasks ***********************************************************************************************/-->
	<target name="init">
		<echo>+------------------------------------------+</echo>
		<echo>| build initializing                       |</echo>
		<echo>+------------------------------------------+</echo>

		<antcall target="mkdirs"/>

		<echoproperties/>
	</target>

	<target name="mkdirs">
		<echo>+------------------------------------------+</echo>
		<echo>| creating directory structure             |</echo>
		<echo>+------------------------------------------+</echo>

		<!-- build filesystem structure /-->
		<mkdir dir="${classes.dir}"/>
		<mkdir dir="${lib.dir}"/>
        <mkdir dir="${build}"/>
        <mkdir dir="${build.report}"/>
        <mkdir dir="${build.lib}"/>
        <mkdir dir="${build.deploy}"/>
        <mkdir dir="${test.classes.dir}"/>
        <mkdir dir="${test.result}"/>
	</target>


	<target name="clean" description="Delete all generated files">
		<echo>+------------------------------------------+</echo>
		<echo>| clean                                    |</echo>
		<echo>+------------------------------------------+</echo>

		<delete dir="${classes.dir}"/>
		<delete dir="${build}"/>
		<delete dir="${build.report}"/>
		<delete dir="${build.lib}"/>
		<delete dir="${build.deploy}"/>
        <delete dir="${test.classes.dir}"/>
        <delete dir="${test.result}"/>

	</target>
			
	<target name="compile" description="Compiles the Task" depends="init">
		<echo>+------------------------------------------+</echo>
		<echo>| compile                                  |</echo>
		<echo>+------------------------------------------+</echo>

		<javac srcdir="${src.dir}"
            source="1.4"
            debug="on"
            compiler="modern"
            classpathref="project.classpath"
            destdir="${classes.dir}"/>
	</target>

	<target name="hibernate" depends="compile">
		<echo>+------------------------------------------+</echo>
		<echo>| generating hibernate metadata            |</echo>
		<echo>+------------------------------------------+</echo>

		<taskdef name="hibernatedoclet"
			classname="xdoclet.modules.hibernate.HibernateDocletTask"
			classpathref="all-libs"/>

		<echo>Building hbm.xml files using XDoclet to ${conf.hibernate.mapping.dir} from ${src.dir}</echo>

		<hibernatedoclet
			destdir="${conf.hibernate.mapping.dir}"
			excludedtags="@version,@author,@todo"
			force="true">
				<fileset dir="${src.dir}">
					<include name="**/*.java"/>
				</fileset>
			<hibernate version="2.0"/>
		</hibernatedoclet>

    </target>

    <target name="compiletest" description="Compiles the test classes" depends="clean, compile, hibernate">
        <echo>+------------------------------------------+</echo>
        <echo>| compile                                  |</echo>
        <echo>+------------------------------------------+</echo>
         <mkdir dir="${test.classes.dir}"/>

	      <copy todir="${test.classes.dir}">
            <fileset dir="${src.dir}">
			    <include name="**/*.xml"/>
            </fileset>
          </copy>
          <copy todir="${test.classes.dir}">
			<fileset dir="${classes.dir}">
                <include name="**/*.class"/>
                <include name="**/*.hbm.xml"/>
            </fileset>
          </copy>

        <javac srcdir="${src.test.dir}"
            source="1.4"
            debug="on"
            compiler="modern"
            classpathref="project.classpath"
            destdir="${test.classes.dir}"/>
    </target>
	
	
	<!-- =================================================================== -->
	<!-- Forum Database tasks                                               -->
	<!-- =================================================================== -->
	<target name="clean-db"	description="clean forum database.">
		<sql driver="${db.driver}" url="${db.url}" userid="${db.username}"
				password="${db.password}">
			<classpath>
				<pathelement location="${db.driver.jar}"/>
			</classpath>
			<transaction src="${db.scripts}/cleanup_lams_tool_forum.sql"/>
		</sql>
	</target>
	
	<target name="init-db"	description="drop and create forum database.">
		<sql driver="${db.driver}" url="${db.url}" userid="${db.username}"
				password="${db.password}">
			<classpath>
				<pathelement location="${db.driver.jar}"/>
			</classpath>
			<transaction src="${db.scripts}/drop_lams_tool_forum.sql"/>
			<transaction src="${db.scripts}/create_lams_tool_forum.sql"/>
		</sql>
	</target>
	
	<target name="build-db"	depends="init-db" 
							description="build qa tool database.">
		<sql driver="${db.driver}" url="${db.url}" userid="${db.username}"
				password="${db.password}">
			<classpath>
				<pathelement location="${db.driver.name}"/>
			</classpath>
			<transaction src="${db.scripts}/insert_lams_tool_forum_data.sql"/>
		</sql>
	</target>

    <target name="junit" depends="compiletest, init-db">
        <echo>+-------------------------------------------+</echo>
        <echo>| run junit tests and save results in /test |</echo>
        <echo>+-------------------------------------------+</echo>
        <mkdir dir="${test.result}"/>

        <junit dir="${basedir}"
             printsummary="yes"
             errorProperty="test.failed"
             failureProperty="test.failed">
         <jvmarg value="-Xmx512m"/>
         <!--
         <jvmarg value="-ea"/>
         <jvmarg value="-esa"/>
         -->
         <jvmarg value="-Djava.endorsed.dirs=${lib.dir}/endorsed"/>

         <classpath id="junit.class.path">
             <path location="${test.classes.dir}"/>
             <path refid="project.classpath"/>
         </classpath>

         <formatter type="xml"/>


         <batchtest fork="yes" todir="${test.result}">
             <fileset dir="${src.test.dir}">
                 <include name="org/lamsfoundation/lams/tool/forum/**/*.*"/>
                 <exclude name="org/lamsfoundation/lams/tool/forum/core/BaseTestCase.java"/>
                 <exclude name="org/lamsfoundation/lams/tool/forum/core/SpringAwareTestCase.java"/>
             </fileset>
         </batchtest>
     </junit>
    <fail message="Tests failed. Check log and/or reports." if="test.failed"/>
    </target>

    <target name="merge" description="merges dependencies for the jar file">
		<echo>+------------------------------------------+</echo>
		<echo>| merge stuff into jar file                |</echo>
		<echo>+------------------------------------------+</echo>

	 	<copy overwrite="yes" todir="${classes.dir}">
			<fileset dir="${src.dir}">
				<include name="**/*.xml"/>
				<include name="**/*.properties"/>
			</fileset>
		</copy>
	</target>

	<target name="jar" description="JARs the Task" depends="hibernate, compile, merge">
		<echo>+------------------------------------------+</echo>
		<echo>| create jar file                          |</echo>
		<echo>+------------------------------------------+</echo>
		<delete file="${build.lib}/${product}.jar"/>
		<jar destfile="${build.lib}/${product}.jar">
			<fileset dir="${classes.dir}">
			</fileset>
			<fileset dir="${conf.hibernate.mapping.dir}">
			</fileset>
		</jar> 
	</target>

    <target name="web"  description="generates xdoclet for web">
	    <taskdef
	        name="webdoclet"
	        classname="xdoclet.modules.web.WebDocletTask"
	        classpathref="project.classpath"
	    />
		<webdoclet destDir="${conf.webinf.dir}" force="${xdoclet.force}" 
			mergedir="${conf.xdoclet.dir}" >
			
         <fileset dir="${src.dir}">
            <include name="**/*Action.java" />
            <include name="**/*Form.java" />
         </fileset>

         <deploymentdescriptor servletspec="2.3" sessiontimeout="${sessiontimeout}"/>
			
         <strutsconfigxml validatexml="true" version="1.2"/>
      </webdoclet>

	</target>

	<target name="build-war" depends="web,jar" description="creates war file">
		<echo>+------------------------------------------+</echo>
		<echo>| build jar file                           |</echo>
		<echo>+------------------------------------------+</echo>
		<delete file="${build.lib}/${product}.war"/>
		<war warfile="${build.lib}/${product}.war" 
  				webxml="${conf.webinf.dir}/web.xml" manifest="${conf.dir}/war/META-INF/MANIFEST.MF">
			<webinf dir="${conf.webinf.dir}">
				<include name="*.tld"/>
				<include name="*.xml"/>
				<include name="struts/*"/>
				<exclude name="web.xml"/>
			</webinf>
			<fileset dir="${conf.web.dir}">
				<include name="*"/>
				<include name="includes/**"/>
				<include name="jsps/**"/> 
			</fileset>
		</war>
	</target>

	<!-- =================================================================== -->
	<!-- Deploy the jar and war                               				 -->
	<!-- =================================================================== -->
	<target name="deploy-war" depends="build-war" description="Deploy the IMS Content Package tool war file and jar file">
		<copy file="${build.lib}/${product}.jar"
				todir="${jboss.deploy}"/> 
		<copy file="${build.lib}/${product}.war"
				todir="${jboss.deploy}"/> 
	</target>

	<!-- =================================================================== -->
	<!-- Generate the deploy package                                         -->
	<!-- =================================================================== -->
	<target name="create-deploy-package" depends="build-war" 
		description="Generate the deployment package.">

		<echo>+------------------------------------------+</echo>
		<echo>| Generate the deployment package.         |</echo>
		<echo>+------------------------------------------+</echo>
		<path id="deploy.lib.classpath">
			<fileset dir="${deploy.tool.dir}">
				<include name="lib/*.jar"/>
			</fileset>
		</path> 
			  
		<mkdir dir="${build.deploy}"/>
		<mkdir dir="${build.deploy}/lib"/> 
		<mkdir dir="${build.deploy}/sql"/> 
		 
		<copy overwrite="yes" todir="${build.deploy}/sql">
			<fileset dir="${db.scripts}/">
				<include name="create_lams_tool_forum.sql"/>
				<include name="drop_lams_tool_forum.sql"/>
				<include name="activity_insert.sql"/>
				<include name="library_insert.sql"/>
				<include name="tool_insert.sql"/>
			</fileset>
		</copy>

		<copy overwrite="yes" todir="${build.deploy}/">
			<fileset dir="${deploy.tool.dir}">
				<include name="*.*"/>
			</fileset>
		</copy>

		<copy overwrite="yes" todir="${build.deploy}/lib">
			<fileset dir="${deploy.tool.dir}/lib">
				<include name="*.jar"/>
			</fileset>
		</copy>

		<taskdef name="generateDeployProperties" 
			classname="org.lamsfoundation.lams.tool.deploy.CreatePackageTask">
		    <classpath refid="deploy.lib.classpath"/>
		</taskdef>

		<generateDeployProperties depends="compile" 
			mode="development" 
			outputPath="${build.deploy}"
			dbPassword="${db.password}"
			dbUsername="${db.username}"
			dbDriverUrl="${db.url}"
			dbDriverClass="com.mysql.jdbc.Driver"
			deployFiles="${build.lib}/${product}.war,${build.lib}/${product}.jar"
			toolSignature="${signature}"
			toolTablesScriptPath="${db.scripts}/create_lams_tool_forum.sql"
			toolTablesDeleteScriptPath="${db.scripts}/drop_lams_tool_forum.sql"
			toolActivityInsertScriptPath="${db.scripts}/activity_insert.sql"
			toolLibraryInsertScriptPath="${db.scripts}/library_insert.sql"
			toolInsertScriptPath="${db.scripts}/tool_insert.sql"
			lamsEarPath="${jboss.deploy}"
			toolContext="${toolContext}"
			toolWebUri="${product}.war"
			/>
	</target>

	<target name="deploy-tool" depends="create-deploy-package" 
		description="Build the war, jar and run the deploy tool. Deletes most old tool references from db, creates db tables, application.xml in ear, copies war and jar file to ear. deploy-tool is only designed to be run in a development environment, or on an empty db. Do not run on a production environment.">

		<path id="deploy.classpath">
			<fileset dir="${build.deploy}">
				<include name="lib/*.jar"/>
			</fileset>
		</path> 

		<echo>Deploying the Forum tool</echo>
	
		<java
			classname="org.lamsfoundation.lams.tool.deploy.Deploy"
			classpathref="deploy.classpath"
			fork="true">
				<arg file="${build.deploy}/deploy.properties"/>
				<arg value="True"/> <!-- forcedb -->
		</java>
					
	</target>

	<!-- begin navigation tasks *************************************************************************************-->
	<target
        name="_build"
        depends="init, clean, mkdirs, compile, merge, jar, web">
		<echo>+------------------------------------------+</echo>
		<echo>| built war file                           |</echo>
		<echo>+------------------------------------------+</echo>
	</target>

 	<!-- end navigation tasks ***************************************************************************************-->
	<!-- end tasks **************************************************************************************************-->
</project>
