<?xml version="1.0" encoding="UTF-8"?>
<project default="deploy" name="LAMS/WebCt Integration" basedir="./">
	
	<property file="build.properties" />
	<property file="db/conf/${dbType}.properties" />
	<property name="project" value="BlackboardPlugin"/>
	<property name="product" value="lams2-webct-integration"/>
	<property name="version" value="1.0.1"/>
	
	

	<property name="build" value="${basedir}/build"/>
	<property name="package" value="${basedir}/package"/>
	<property name="build.web" value="${build}/web"/>
	<property name="build.lib" value="${build}/lib"/>
	<property name="build.webinf" value="${build}/WEB-INF"/>
	<property name="sqlDir" value="${basedir}/db/sql" />
	
	<!--
	<property name="dbUrl" value="jdbc:sqlserver://${dbHost}:${dbPort}" />
	<property name="dbDriver" value="com.microsoft.sqlserver.jdbc.SQLServerDriver" />
	<property name="dbDriverClassPath" value="lib/sqljdbc.jar" />
	-->
	
	
	<property name="lib" value="${basedir}/lib"/>
	<property name="src" value="${basedir}/src/org/"/>
	<property name="web" value="${basedir}/web"/>
	<property name="webinf" value="${basedir}/WEB-INF"/>
	<property name="deploy.dir" value="${webctDeployableComponentsDir}/lams2" />
	<property name="jar" value="${product}-${version}.jar"/>
	<property name="jarfile" value="${build}/${jar}"/>
	
	<property name="package.dir" value="${package}/${product}-${version}/"/>

	
	<path id="project.classpath">
		<!-- If Eclipse is not used, this should be ${build.classes} -->
		<pathelement location="${classes}" />
        <fileset dir="${lib}">
			<include name="*.jar" />
        </fileset>
	</path>
	  
	<!-- ================================================================ -->
	<!-- Preparations									          -->
	<!-- ================================================================ -->
	<target name="preparedirs">
		<mkdir dir="${build}"/>
		<mkdir dir="${build.lib}"/>
		<mkdir dir="${build.web}"/>
	</target>
	
	<target name="clean" description="removes all class files">
		<delete includeEmptyDirs="true" quiet="true">
	  		<fileset dir="${build}"/>
		</delete>
	</target>
	
	<!-- ================================================================ -->
	<!-- making the jar packages						    	          -->
	<!-- ================================================================ -->
   
	
	<target name="copy" description="Copy files to build dir">
		<copy todir="${build}" overwrite="true">
   			<fileset dir="${basedir}">
   			      <include name="DeployableComponentConfig.xml"/>
   			</fileset>
   			<filterset>
   				<filter token="dbUrl" value="${dbUrl}" />
   				<filter token="dbPort" value="${dbPort}" />
   				<filter token="dbName" value="${dbName}" />
   				<filter token="dbUser" value="${dbUser}" />
   				<filter token="dbDriver" value="${dbDriver}" />
   				<filter token="dbTable" value="${dbTable}" />
   				<filter token="dbPass" value="${dbPass}" />
   				<filter token="lamsServerUrl" value="${lamsServerUrl}" />
   				<filter token="serverId" value="${serverId}" />
   				<filter token="secretKey" value="${secretKey}" />
   				<filter token="reqSrc" value="${reqSrc}" />
   				<filter token="imgUrl" value="${imgUrl}" />
   			</filterset>
	   			
	   	</copy>
	   	
	   	<copy todir="${build.web}" overwrite="true">
   	   			<fileset dir="${web}" />
   	   	</copy>	
   	
		<copy todir="${build}/web/lib/tigra" overwrite="true">
			
			<fileset dir="${basedir}/web/lib/tigra">
				<include name="tree_tpl.js"/>
		   	</fileset>
			<filterset>
				<filter token="imgUrl" value="${imgUrl}" />
			</filterset>
		</copy>
	</target>
		
	<target name="compile" depends="clean, preparedirs" description="compile java sources">
   		<javac srcdir="${src}"
         	 	destdir="${build}" 
   				deprecation="on" 
   				debug="on"
   				source="1.4">
  			<classpath>
      			<path refid="project.classpath"/>
      		</classpath>
		</javac>
   	
   		<copy todir="${build}" overwrite="true">
   			<fileset dir="${basedir}">
   			      <include name="DeployableComponentConfig.xml"/>
   			</fileset>
   			<filterset>
   				<filter token="dbUrl" value="${dbUrl}" />
   				<filter token="dbPort" value="${dbPort}" />
   				<filter token="dbName" value="${dbName}" />
   				<filter token="dbUser" value="${dbUser}" />
   				<filter token="dbDriver" value="${dbDriver}" />
   				<filter token="dbTable" value="${dbTable}" />
   				<filter token="dbPass" value="${dbPass}" />
   				<filter token="lamsServerUrl" value="${lamsServerUrl}" />
   				<filter token="serverId" value="${serverId}" />
   				<filter token="secretKey" value="${secretKey}" />
   				<filter token="reqSrc" value="${reqSrc}" />
   				<filter token="imgUrl" value="${imgUrl}" />
   			</filterset>
   			
   		</copy>
   	
   		<copy todir="${build.web}" overwrite="true">
   	   			<fileset dir="${web}" />
   	   	</copy>	
   	
		<copy todir="${build}/web/lib/tigra" overwrite="true">
			
			<fileset dir="${basedir}/web/lib/tigra">
				<include name="tree_tpl.js"/>
		   	</fileset>
			<filterset>
				<filter token="imgUrl" value="${imgUrl}" />
			</filterset>
		</copy>
   	
   		
	</target>
	
	<!-- ================================================================ -->
	<!-- making the war packages for deployment			    	          -->
	<!-- ================================================================ -->
	<target name="package" depends="compile" description="creates jar file">
		<jar jarfile="${jarfile}">
			<fileset dir="${build}" />					
		</jar>	
  	</target>
			
	<target name="create-install-package" depends="package" description="creates jar file">
		
		<delete includeEmptyDirs="true" quiet="true">
			<fileset dir="${package.dir}"/>
		</delete>
		
		
		<mkdir dir="${package.dir}"/>
		<mkdir dir="${package.dir}/lams2"/>
		
		<copy todir="${package.dir}/lams2" overwrite="true">
   			<fileset dir="${lib}">
   				<include name="commons-codec-1.3.jar" />
   				<include name="authmoduledata_ce_1.4.jar" />
   				<include name="mysql-connector-java-3.1.12-bin.jar" />
   				<include name="xercesImpl.jar" />
   			</fileset>
		</copy>
		
		<copy todir="${package.dir}/lams2" overwrite="true">
   			<fileset dir="${build}">
   				<include name="${jar}" />
   			</fileset>
		</copy>
		
		<copy todir="${package.dir}" overwrite="true">
   			<fileset dir="${basedir}" >
   				<include name="license.txt" />
   				<include name="readme.txt" />
   				<include name="release_notes.txt" />
			</fileset>
		</copy>
		
		<copy todir="${package.dir}" overwrite="true">
   			<fileset dir="${basedir}/db/sql/" >
   				<include name="createTable_MySql.sql" />
			</fileset>
		</copy>


		<zip destfile="${package}/${product}-${version}.zip"
		       basedir="${package.dir}"
		       excludes="CVS"
		/>
		
  	</target>	
	
	<target name="deploy" depends="package" description="creates jar file">
		<copy todir="${deploy.dir}" overwrite="true" file="${jarfile}" />
	
		<copy todir="${deploy.dir}" overwrite="false">
   			<fileset dir="${lib}">
   				<include name="commons-codec-1.3.jar" />
   				<include name="authmoduledata_ce_1.4.jar" />
   				<!-- include name="sqljdbc.jar" / -->
   				<include name="mysql-connector-java-3.1.12-bin.jar" />
   			</fileset>
		</copy>	
	</target>
		
		
	<target name="create-table">
		<sql 
			driver="${dbDriver}"
			classpath="${dbDriverClassPath}"
			url="${dbUrl}"
			userid="${dbUser}"
			password="${dbPass}"
			encoding="utf8"
			onerror="continue"
		>
			<transaction src="${sqlDir}/createTable_${dbType}.sql" />
		</sql>	
	</target>
	
	<target name="delete-table">
			<sql 
				driver="${dbDriver}"
				classpath="${dbDriverClassPath}"
				url="${dbUrl}"
				userid="${dbUser}"
				password="${dbPass}"
				encoding="utf8"
   				onerror="continue"
			>
				<transaction src="${sqlDir}/deleteTable_${dbType}.sql" />
			</sql>	
	</target>

</project>
