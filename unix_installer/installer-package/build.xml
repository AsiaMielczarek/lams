<?xml version="1.0" encoding="UTF-8"?>

<project name="Unix-Build-Script-2.0.4" default="build" basedir=".">

 	<property name="VERSION" value="2.0.4" />
 	<property name="PACKAGE-ROOT" value="build/lams-unix-installer-2.0.4" />
	<property name="db.username" value="lams" />
	<property name="db.password" value="lamsdemo" />
	<property name="db.name" value="lams" />
	
	<description>
		Unix build script for lams ${VERSION}
	</description>
	
	<target name="dump-db" description="Dump full LAMS database contents.">
		<exec executable="mysqldump" 
		     output="${basedir}/database/lams.dump" failonerror="true">
		      <arg line="-u${db.username}" />
		      <arg line="--password=${db.password}" />
		      <arg line="${db.name}" />
		</exec>
	</target>
	
	<target name="build" depends="clean" description="Compile all sources.">

		<!-- create the necessary directories -->
		<mkdir dir="${PACKAGE-ROOT}" /> 
		<mkdir dir="${PACKAGE-ROOT}/log" /> 
		<mkdir dir="${PACKAGE-ROOT}/sql-scripts" /> 
		<mkdir dir="${PACKAGE-ROOT}/doc" />
		
		<!-- copy files to new created folders -->
		<exec executable="cp" failonerror="true">
			<arg line="-r" />
		    <arg line="ant" />
		    <arg line="ant-scripts" />
		    <arg line="assembly" />
		    <arg line="bin" />
			<arg line="conf" />
		    <arg line="database" />
		    <arg line="install-lams.sh" />		
			<arg line="wrapper" />		
			<arg line="readme" />
			<arg line="license" />
			<arg line="lams.properties" />
			<arg line="${PACKAGE-ROOT}" />
		</exec>
		
		<exec executable="cp" failonerror="true">
			<arg line="doc/setLamsConfiguration.sql" />
		    <arg line="${PACKAGE-ROOT}/doc" />
		</exec>
		
		<exec executable="cp" failonerror="true">
			<arg line="sql-scripts/create-database.sql" />
		    <arg line="${PACKAGE-ROOT}/sql-scripts" />
		</exec>
	
		<exec executable="cp" failonerror="true">
			<arg line="bin/checkmysql.class" />
			<arg line="bin/testJava.class" />
			<arg line="bin/run-lams.sh" />
			<arg line="${PACKAGE-ROOT}/bin" />	
		</exec>

		<!-- create ${PACKAGE-ROOT}.tar.gz and place it in the build directory -->
		<tar longfile="gnu" destfile="${PACKAGE-ROOT}.tar" basedir="build" excludes="*.tar.gz, *.tar.gz.bak"/>
		<gzip zipfile="${PACKAGE-ROOT}.tar.gz" src="${PACKAGE-ROOT}.tar" />
		
		<delete failonerror="false" file="${PACKAGE-ROOT}.tar" />
	</target>
	
	<!-- clean the installation, the .bak file will remain in the build dir -->
	<target name="clean" description="Clean up output directories.">
		<delete dir="${PACKAGE-ROOT}" failonerror="false"/>
		
		<!-- backup existing tar.gz file if it exists-->
		<delete file="${PACKAGE-ROOT}.tar.gz" failonerror="false"/>
	</target>
	
</project>
