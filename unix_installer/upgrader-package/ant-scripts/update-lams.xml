<?xml version="1.0" encoding="UTF-8"?>

<!--
#   Copyright (C) 2008 LAMS Foundation (http://lamsfoundation.org)
#   License Information: http://lamsfoundation.org/licensing/lams/2.0/
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License version 2.0 
#   as published by the Free Software Foundation.
# 
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
# 
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301
#   USA
# 
#   http://www.gnu.org/licenses/gpl.txt 
#
#   Author: Luke Foxton
-->

<project name="update-lams" basedir=".">
    <property file="../lams.properties" />
    <property file="lang.properties"/>
	
    <!-- Main Task, calls all the other tasks -->
    <target name="update-lams" description="Runs the entire update process">
        <!--<antcall target="configure-jboss" />-->
        <!--<antcall target="copy-core-jars-wars" />-->
    	
    	
        <antcall target="update-core-database" />
        <!-- <target="update-mysql-ds" /> -->
        <antcall target="update-lams-www-war" />
    	<antcall target="update-lams-central-war" />
    	
    	<antcall target="deploy-new-tools" />
    	
    	<antcall target="update-application-xml" />
    	
    	<antcall target="update-2.3-specific"/>
    	
        <antcall target="language-pack" />
        <antcall target="set-lams-configuration" />
    </target>


    <target name="configure-jboss" description="Copying jboss-cash.jar and jgroups.jar from server/all/lib to ${DEFAULT_DIR}/lib">
        <echo message="Copying jboss-cache.jar and jgroups.jar from ${JBOSS_DIR}/server/all/lib to ${DEFAULT_DIR}/lib"/>
        <copy file="${JBOSS_DIR}/server/all/lib/jboss-cache.jar" todir="${DEFAULT_DIR}/lib" failonerror="true" overwrite="true" />
        <copy file="${JBOSS_DIR}/server/all/lib/jgroups.jar" todir="${DEFAULT_DIR}/lib" failonerror="true" overwrite="true" />

        <copy todir="${JBOSS_DIR}/bin" overwrite="true" failonerror="true">
            <fileset dir="../bin/">
                <include name="run-lams.sh" />
            </fileset>
            <filterset> 
                <filter token="JAVA_HOME" value="${JDK_DIR}" />
            </filterset>
        </copy>

        <chmod file="${JBOSS_DIR}/bin/run-lams.sh" perm="755"/>
    </target>

    <target name="copy-core-jars-wars" description="Overwrites lams.ear files built from assemble-ear ant task. Does not deploy tools">
        <echo message="Overwriting assembled files into the deploy directory"/>
        <copy todir="${DEPLOY_DIR}/lams.ear" overwrite="true">
            <fileset dir="../assembly/lams.ear" >
                <exclude name="*.bak"/>
                <exclude name="*.tmp"/>
                <exclude name="**/lams-www.war/**"/>
                <exclude name="**/META-INF/**"/>
                <exclude name="**/lams-dictionary.jar/org/lamsfoundation/lams/library/**"/>
            </fileset>
        </copy>

        <copy todir="${DEFAULT_DIR}/lib" overwrite="true">
            <fileset dir="../assembly">
                <include name="lams-valve.jar"/>
                <include name="lams-session.jar"/>
            </fileset>
        </copy> 
    
        <echo message="lams.ear successfully updated"/>
    </target>

    <target name="update-core-database" description="Runs the sql scripts required to update the database">
        <echo>Updating core database</echo>
        <ant antfile="update-core-database.xml" output="../log/update-core-database.log" target="update-core-database" />
    </target>

    <target name="update-lams-www-war" description="Updates files in lams-www.war">
        <echo>Updating lams-www.war</echo>


        <copy todir="${DEPLOY_DIR}/lams.ear/lams-www.war/images" overwrite="true">
            <fileset dir="../assembly/lams.ear/lams-www.war/images/">
                <include name="learner.logo.swf"/>
                <include name="monitor.logo.swf"/>
                <include name="preloader.logo.swf"/>
                <include name="about.logo.swf"/>
            </fileset>          
        </copy>
    
        <copy todir="${DEPLOY_DIR}/lams.ear/lams-www.war/WEB-INF/tags" overwrite="true">
            <fileset dir="../assembly/lams.ear/lams-www.war/WEB-INF/tags">
				<include name="*.tag"/>
   			</fileset>
       	</copy>
        
        <copy todir="${DEPLOY_DIR}/lams.ear/lams-www.war/WEB-INF" overwrite="true">
            <fileset dir="../assembly/lams.ear/lams-www.war/WEB-INF">
                <include name="lams.tld"/>
            </fileset>
        </copy> 
    	
    	<copy todir="${DEPLOY_DIR}/lams.ear/lams-www.war/" overwrite="true">
            <fileset dir="../assembly/lams.ear/lams-www.war/">
                <include name="htmltemplates.xml"/>
            	<include name="copyright.jsp"/>
            </fileset>
        </copy> 
    	
    	<copy todir="${DEPLOY_DIR}/lams.ear/lams-www.war/images" overwrite="true">
            <fileset dir="../assembly/lams.ear/lams-www.war/images">
                <include name="template*.gif"/>
            </fileset>
        </copy>

    </target>
	
	<target name="update-lams-central-war" description="Updates files in lams-central.war">
        <echo>Updating lams-central.war</echo>
		<copy todir="${DEPLOY_DIR}/lams.ear/lams-central.war" overwrite="true">
            <fileset dir="../assembly/lams.ear/lams-central.war">
                <exclude name="META-INF/MANIFEST.MF"/>
            	<exclude name="WEB-INF/web.xml"/>
            </fileset>          
        </copy>
    </target>
	
	<target name="language-pack" description="Runs the latest language pack included with the updater">
		<echo>Applying language pack</echo>
		
		<!-- Overwrite language files, but leave the combined task language files alone -->
		<copy todir="${DEPLOY_DIR}/lams.ear/lams-dictionary.jar" overwrite="true">
            <fileset dir="../assembly/lams.ear/lams-dictionary.jar">
                <exclude name="**/library/**"/>
            </fileset>          
        </copy>
		
		<!-- Overwrite flash language files-->
		<copy todir="${DEPLOY_DIR}/lams.ear/lams-central.war/flashxml" overwrite="true">
	            <fileset dir="../assembly/lams.ear/lams-central.war/flashxml/"/>
	   	</copy>
    	
		<!-- Copy combined activity language files to appropriate directory -->
    	<java classname="copyllid" failonerror="true" fork="true">
        	<arg value="${JBOSS_DIR}"/>
        	<arg value="${DB_USER}"/>
        	<arg value="${DB_PASS}"/>
        	<arg value="${DB_NAME}"/>
        	<arg value="${SQL_URL}"/>
        	<classpath>
                <pathelement path="../bin:../tools/lib/mysql-connector-java-5.0.8-bin.jar"/>
            </classpath>
        </java>
		
        <sql driver="com.mysql.jdbc.Driver" 
            classpath="../tools/lib/mysql-connector-java-5.0.8-bin.jar" 
            url="${SQL_URL}" 
            userid="${DB_USER}" 
            password="${DB_PASS}"
            encoding="utf8"
            onerror="abort"
            >
            <transaction src="../sql-scripts/updateLocales.sql" />
        </sql>

		<!--
    	<ant antfile="language-pack.xml" output="../log/language-pack.log" target="update-languages" inheritAll="true">
        </ant>
        -->
    </target>


    <target name="explode-wars" description="Explodes the lams-learning and lams-monitoring wars so their files can be altered by the tool deployer">
        <ant antfile="update-deploy-tools.xml" output="../log/explode-wars.log" target="explode-wars">
            <property name="jboss.deploy" value="${EAR_DIR}"/>
        </ant>
    </target>

    <target name="compress-wars" description="Compresses the lams-learning and lams-monitoring wars after their files have been altered by the tool deployer">
        <ant antfile="update-deploy-tools.xml" output="../log/compress-wars.log" target="compress-wars">
            <property name="jboss.deploy" value="${EAR_DIR}"/>
        </ant>
    </target>
    	
    <target name="deploy-new-tools" description="Deploys any new tools added for this updater, must be updated for each release">
    	<antcall target="explode-wars"/>
    	
    	<echo>Deploying new tools</echo>
    	
    	<!-- ============= 2.3 Tools ============== -->
    	<antcall target="deploy-new-tool">
    	   	<param name="signature" value="laasse10"/>
    	</antcall>
    	<antcall target="deploy-new-tool">
    	   	<param name="signature" value="laimag10"/>
    	</antcall>
    	<antcall target="deploy-new-tool">
    	   	<param name="signature" value="lamind10"/>
    	</antcall>
    	<antcall target="deploy-new-tool">
    	   	<param name="signature" value="lapixl10"/>
    	</antcall>
    	<antcall target="deploy-new-tool">
    	   	<param name="signature" value="lavidr10"/>
    	</antcall>
    	<!-- ============= 2.3 Tools ============== -->
    	
    	<antcall target="compress-wars"/>
    </target>
    	
	<target name="deploy-new-tool" description="Fully deploys a tool">
    	<antcall target="filter-deploy-xml">
    	    <param name="signature" value="${signature}"/>
    	</antcall>
    	<ant antfile="update-deploy-tools.xml" output="../log/deploy-${signature}.log" target="deploy-tool">
            <property name="prop.path" value="${signature}"/>
        </ant>
	</target>
    	
    <target name="filter-deploy-xml" description="Filters a new tool's deploy.xml and fills in the appropriate values for this install">
    	<ant antfile="update-deploy-tools.xml" output="../log/create-${signature}-deploy.log" target="create-deploy-package">
            <property name="prop.path" value="${signature}"/>
        </ant>
   	</target>
	
	<target name="update-application-xml" description="Updates application.xml to include all required modules for the current version">
		<ant antfile="update-deploy-tools.xml" output="../log/update-application-xml.log" target="update-application-xml">
            <property name="prop.path" value="lachat11"/>
        </ant>
	</target>
	
	<target name="update-2.3-specific" description="Does updates specific to 2.3, delete after 2.3">
		<!-- Add pixlr dir to lams-www -->
		<mkdir dir="${EAR_DIR}/lams-www/images/pixlr"/>
		<copy file="../tools/lapixl10/blank.jpg" todir="${EAR_DIR}/lams-www.war/images/pixlr"/>
	</target>	

    <target name="set-lams-configuration" description="Updates the lams_configuration table with all the settings from lams.properties">
        <sql driver="com.mysql.jdbc.Driver" 
            classpath="${DEPLOY_DIR}/lams.ear/mysql-connector-java-5.0.8-bin.jar" 
            url="${SQL_URL}" 
            userid="${DB_USER}" 
            password="${DB_PASS}"
            encoding="utf8"
            onerror="abort"
            >
            <transaction src="../sql-scripts/setLamsConfiguration.sql" />
        </sql>
    </target>
	
	<target name="slim-jboss" description="makes a backup and removes unnecessary services from JBoss 4.0.2;
		do not run it twice, otherwise you will need to copy standardjboss.xml and ejb-deployer.xml
		from the original JBoss distribution and then build the whole LAMS project">
		<!-- Backup -->
		<copy todir="${DEFAULT_DIR}/slim-backup/deploy">
			<fileset dir="${DEPLOY_DIR}/">
				<include name="ejb-deployer.xml"/>
				<include name="client-deployer-service.xml"/>
				<include name="schedule-manager-service.xml"/>
				<include name="scheduler-service.xml"/>
				<include name="bsh-deployer.xml"/>
				<include name="jboss-aop.deployer/"/>
				<include name="jboss-ws4ee.sar/"/>
				<include name="jmx-console.war/"/>
				<include name="http-invoker.sar/"/>
			</fileset>
		</copy>
		
		<copy todir="${DEFAULT_DIR}/slim-backup/conf">
			<fileset dir="${DEFAULT_DIR}/conf">
				<include name="jboss-service.xml"/>
				<include name="standardjboss.xml"/>
			</fileset>
		</copy>
		
		<copy todir="${DEFAULT_DIR}/slim-backup/lib">
			<fileset dir="${DEFAULT_DIR}/lib">
				<include name="autonumber-plugin.jar"/>
				<include name="bcel.jar"/>
				<include name="jboss-jaxrpc.jar"/>
				<include name="jboss-saaj.jar"/>
				<include name="scheduler-plugin.jar"/>
				<include name="scheduler-plugin-example.jar"/>
				<include name="bsh-1.3.0.jar"/>
				<include name="bsh-deployer.jar"/>
			</fileset>
		</copy>
		
		<!-- Configuring -->
		<property name="JBOSS_CONF_DIR" value="${basedir}/../conf/unix/jboss/"></property>
		<copy overwrite="yes" file="${JBOSS_CONF_DIR}/ejb-deployer.slim.xml" tofile="${DEPLOY_DIR}/ejb-deployer.xml" />
		<copy overwrite="yes" file="${JBOSS_CONF_DIR}/jboss-service.slim.xml" tofile="${DEFAULT_DIR}/conf/jboss-service.xml" />
		<copy overwrite="yes" file="${JBOSS_CONF_DIR}/standardjboss.slim.xml" tofile="${DEFAULT_DIR}/conf/standardjboss.xml" />
		
		
		<delete dir="${DEPLOY_DIR}jboss-aop.deployer" />
		<delete dir="${DEPLOY_DIR}/jboss-ws4ee.sar" />
		<delete dir="${DEPLOY_DIR}/jmx-console.war"/>
		<delete dir="${DEPLOY_DIR}/http-invoker.sar"/>
		
		<delete file="${DEPLOY_DIR}/client-deployer-service.xml"/>
		<delete file="${DEPLOY_DIR}/schedule-manager-service.xml"/>
		<delete file="${DEPLOY_DIR}/scheduler-service.xml"/>
		<delete file="${DEPLOY_DIR}/bsh-deployer.xml"/>
		
		<delete file="${DEFAULT_DIR}/lib/autonumber-plugin.jar"/>
		<delete file="${DEFAULT_DIR}/lib/bcel.jar"/>
		<delete file="${DEFAULT_DIR}/lib/jboss-jaxrpc.jar"/>
		<delete file="${DEFAULT_DIR}/lib/jboss-saaj.jar"/>
		<delete file="${DEFAULT_DIR}/lib/scheduler-plugin.jar"/>
		<delete file="${DEFAULT_DIR}/lib/scheduler-plugin-example.jar"/>
		<delete file="${DEFAULT_DIR}/lib/bsh-1.3.0.jar"/>
		<delete file="${DEFAULT_DIR}/lib/bsh-deployer.jar"/>
	</target>
	
	<target name="slim-jboss-revert" description="reverts changes made by slim-jboss task">
		<copy overwrite="yes" todir="${DEPLOY_DIR}">
			<fileset dir="${DEFAULT_DIR}/slim-backup/deploy/">
				<include name="*/"/>
			</fileset>
		</copy>
		
		<copy overwrite="yes" todir="${DEFAULT_DIR}/conf">
			<fileset dir="${DEFAULT_DIR}/slim-backup/conf">
				<include name="*.xml"/>
			</fileset>
		</copy>
		
		<copy overwrite="yes" todir="${DEFAULT_DIR}/lib">
			<fileset dir="${DEFAULT_DIR}/slim-backup/lib">
				<include name="*"/>
			</fileset>
		</copy>
	</target>
</project>
