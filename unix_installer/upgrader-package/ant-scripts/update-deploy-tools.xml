<?xml version="1.0" encoding="UTF-8"?>
<project name="update-deploy-tools" basedir="." >
	<!-- begin properties *******************************************************************************************-->
	<!-- import properties from the specified file -->
	
	<property file="../tools/${prop.path}/build.properties" />
	<property file="../lams.properties"/>
	<property file="tools.properties" />

	<!-- =================================================================== -->
	<!-- Generate the deploy package                                         -->
	<!-- =================================================================== -->
	<target name="create-deploy-package" description="Generate the deployment package.">
		
		<echo>+------------------------------------------+</echo>
        <echo>| Generate the deployment package.         |</echo>
        <echo>+------------------------------------------+</echo>
        <echo>Copying deploy.xml for ${signature}</echo>
	    
		<mkdir dir="${build.deploy}/filtered"/>
		<copy overwrite="yes" todir="${build.deploy}/filtered"> 
			<fileset dir="${build.deploy}">
                <include name="deploy.xml" />
            </fileset>
			<filterset>  
				<filter token="dbUsername" value="${db.username}" />
				<filter token="dbPassword" value="${db.password}" />
				<filter token="dbDriverUrl" value="${db.url}" />
				<filter token="dbDriverClass" value="${db.Driver}" />
				<filter token="lamsear" value="${DEFAULT_DIR}/deploy/lams.ear" />
				<filter token="toolDeployPackageDir" value="${build.deploy}" />
			</filterset>
		</copy>
		
		<move file="${build.deploy}/filtered/deploy.xml" tofile="${build.deploy}/deploy.xml"/>
		<delete dir="${build.deploy}/filtered"/>
	    
		<echo>Deploy package for ${signature} created.</echo>
		
		<!--
		<path id="deploy.lib.classpath">
			<fileset dir="${deploy.tool.dir}">
				<include name="lib/*.jar"/>
			</fileset>
		</path> 

		<taskdef name="generateDeployProperties" 
			classname="org.lamsfoundation.lams.tool.deploy.CreateToolPackageTask">
		    <classpath refid="deploy.lib.classpath"/>
		</taskdef>

		<generateDeployProperties 
			mode="production" 
			outputPath="${build.deploy}"
			dbPassword="${db.password}"
			dbUsername="${db.username}"
			dbDriverUrl="${SQL_URL}"
			dbDriverClass="com.mysql.jdbc.Driver"
			deployFiles="${build.deploy}/${product}.war,${build.deploy}/${product}.jar"
			toolJarFileName="${product}.jar"
			toolSignature="${signature}"
			toolVersion="${tool.version}"
			hideTool="${hideTool}"
			minServerVersionNumber="${min.server.version.number}"
			toolUpdateScriptPath="${build.deploy}/sql/updatescripts/updateTo${tool.version}.sql"
			toolTablesScriptPath="${build.deploy}/sql/create_lams_tool_forum.sql" 
			toolTablesDeleteScriptPath="${build.deploy}/sql/drop_lams_tool_forum.sql" 
			toolActivityInsertScriptPath="${build.deploy}/sql/activity_insert.sql" 
			toolLibraryInsertScriptPath="${build.deploy}/sql/library_insert.sql" 
			toolInsertScriptPath="${build.deploy}/sql/tool_insert.sql" 
			toolApplicationContextPath="/org/lamsfoundation/lams/tool/forum/forumApplicationContext.xml"
			lamsEarPath="${DEFAULT_DIR}/deploy/lams.ear"
			toolContext="${toolContext}"
			toolWebUri="${product}.war"
			languageFilesPackage="${language.files.package}">

			
			<fileset dir="${build.deploy}/language">
				<include name="**/*.properties"/>
				<include name="**/*.txt"/>
			</fileset>
				
		</generateDeployProperties>
		
		<echo>Deploy packaqe for ${signature} created.</echo>
		-->	
		
		
	</target>
	
	<target name="update-custom-tool-contexts" description="Updates the web.xmls for the non-custom tools">
        <echo>Updating web.xml and MANIFEST.MF for lams-central.war, lams-monitor.war and lams-learning.war. using for custom tools</echo>
        <path id="deploy.lib.classpath">
            <fileset dir="${deploy.tool.dir}">
                <include name="lib/*.jar"/>
            </fileset>
        </path> 
        
        <java classname="org.lamsfoundation.lams.tool.deploy.AddCustomWebXmlContexts" classpathref="deploy.lib.classpath" fork="true">
            <arg value="${DEFAULT_DIR}/deploy/lams.ear" />
            <arg value="${db.username}" />
            <arg value="${db.password}" />
            <arg value="${SQL_URL}" />
        </java> 
    </target>
	
	<target name="update-application-xml" description="Adds/Removes java modules to application.xml">
		<path id="deploy.lib.classpath">
			<fileset dir="${deploy.tool.dir}">
				<include name="lib/*.jar"/>
			</fileset>
		</path>

		<!-- 2.2 SPECIFIC UPDATE!!!!!!!!!!!! -->
		<echo>BEGIN Updating application.xml</echo>
		<java classname="org.lamsfoundation.lams.tool.deploy.AddModuleToApplicationXmlTask" classpathref="deploy.lib.classpath" fork="true">
			<arg value="${DEFAULT_DIR}/deploy/lams.ear" />
			<arg value="transform.jar" />
		</java>
		<java classname="org.lamsfoundation.lams.tool.deploy.AddModuleToApplicationXmlTask" classpathref="deploy.lib.classpath" fork="true">
			<arg value="${DEFAULT_DIR}/deploy/lams.ear" />
			<arg value="translate.jar" />
		</java>
		<java classname="org.lamsfoundation.lams.tool.deploy.AddModuleToApplicationXmlTask" classpathref="deploy.lib.classpath" fork="true">
			<arg value="${DEFAULT_DIR}/deploy/lams.ear" />
			<arg value="JabberHTTPBind-1.1.1.jar" />
		</java>
		<java classname="org.lamsfoundation.lams.tool.deploy.AddModuleToApplicationXmlTask" classpathref="deploy.lib.classpath" fork="true">
			<arg value="${DEFAULT_DIR}/deploy/lams.ear" />
			<arg value="tk-autopatch-1.2.0-b2-cvs.jar" />
		</java>
		<java classname="org.lamsfoundation.lams.tool.deploy.AddModuleToApplicationXmlTask" classpathref="deploy.lib.classpath" fork="true">
			<arg value="${DEFAULT_DIR}/deploy/lams.ear" />
			<arg value="tk-discovery-1.0.0.jar" />
		</java>
		<!-- END 2.2 SPECIFIC UPDATE!!!!!!!!!!!! -->

	</target>
	
	
	<target name="explode-wars" description="explodes lams_learning.war and lams-monitoring.war">
		<move file="${DEFAULT_DIR}/deploy/lams.ear/lams-learning.war" tofile= "${DEFAULT_DIR}/deploy/lams.ear/lams-learning.war.bak" />
		<move file="${DEFAULT_DIR}/deploy/lams.ear/lams-monitoring.war" tofile= "${DEFAULT_DIR}/deploy/lams.ear/lams-monitoring.war.bak" />
		<unwar src="${DEFAULT_DIR}/deploy/lams.ear/lams-learning.war.bak" dest="${DEFAULT_DIR}/deploy/lams.ear/lams-learning.war" />
		<unwar src="${DEFAULT_DIR}/deploy/lams.ear/lams-monitoring.war.bak" dest="${DEFAULT_DIR}/deploy/lams.ear/lams-monitoring.war" />
				
	</target>
		
	<target name="compress-wars" description="compresses lams_learning.war and lams-monitoring.war">
			
		<move file="${DEFAULT_DIR}/deploy/lams.ear/lams-learning.war" tofile= "${DEFAULT_DIR}/deploy/lams.ear/lams-learning.war.tmp" failonerror="false"/>
		<move file="${DEFAULT_DIR}/deploy/lams.ear/lams-monitoring.war" tofile= "${DEFAULT_DIR}/deploy/lams.ear/lams-monitoring.war.tmp" failonerror="false"/>
		
		<war warfile="${DEFAULT_DIR}/deploy/lams.ear/lams-monitoring.war" manifest="${DEFAULT_DIR}/deploy/lams.ear/lams-monitoring.war.tmp/META-INF/MANIFEST.MF" 
		  				webxml="${DEFAULT_DIR}/deploy/lams.ear/lams-monitoring.war.tmp/WEB-INF/web.xml">
			
			<webinf dir="${DEFAULT_DIR}/deploy/lams.ear/lams-monitoring.war.tmp/WEB-INF">
				<include name="**/*.xml"/>
				<include name="**/*.tld"/>
				<include name="struts/*"/>
				<include name="jstl/*"/>
				<include name="tags/*"/>
				<exclude name="web.xml"/>
			</webinf>
			<fileset dir="${DEFAULT_DIR}/deploy/lams.ear/lams-monitoring.war.tmp">
				<include name="*"/>
				<include name="css/*"/>
				<include name="branching/*"/>
				<include name="gate/*"/>
				<include name="grouping/*"/>
				<include name="images/*"/>
				<include name="template/*"/>
			</fileset>
		</war>
		
		<war warfile="${DEFAULT_DIR}/deploy/lams.ear/lams-learning.war" manifest="${DEFAULT_DIR}/deploy/lams.ear/lams-learning.war.tmp/META-INF/MANIFEST.MF" 
				  				webxml="${DEFAULT_DIR}/deploy/lams.ear/lams-learning.war.tmp/WEB-INF/web.xml">
					
			<webinf dir="${DEFAULT_DIR}/deploy/lams.ear/lams-learning.war.tmp/WEB-INF">
				<include name="*.xml"/>
				<include name="struts/*"/>
				<include name="struts/tlds/*"/>
				<include name="jstl/*"/>
				<include name="jstl/tlds/*"/>
				<include name="tags/*"/>
				<include name="lams.tld"/>
				<exclude name="web.xml"/>
			</webinf>
			<fileset dir="${DEFAULT_DIR}/deploy/lams.ear/lams-learning.war.tmp">
				<include name="*"/>
				<include name="css/*"/>
				<include name="branching/*"/>
				<include name="common/*" />
				<include name="exportPortfolio/*"/>
				<include name="notebook/*"/>
				<include name="gate/*"/>
				<include name="grouping/*"/>
				<include name="images/*"/>
				<include name="layout/*"/>
				<include name="test/*"/>
			</fileset>
		</war>
		
		
		<delete dir="${DEFAULT_DIR}/deploy/lams.ear/lams-learning.war.tmp" failonerror="false" />
		<delete dir="${DEFAULT_DIR}/deploy/lams.ear/lams-monitoring.war.tmp" failonerror="false" />
		
	</target>
			
	<target name="deploy-tool" description="runs the tool deployer for a given tool">
		<path id="deploy.lib.classpath">
			<fileset dir="${deploy.tool.dir}">
				<include name="lib/*.jar"/>
			</fileset>
		</path> 
		
		<echo>Deploying the ${signature} Tool</echo>

		<java classname="org.lamsfoundation.lams.tool.deploy.Deploy" classpathref="deploy.lib.classpath" fork="true">
			<arg file="${build.deploy}/deploy.xml" />
			<arg value="False" />
		</java>
	</target>
	
	<target name="update-tool-context">
			<echo>Updating web.xml and MANIFEST.MF for lams-central.war, lams-monitor.war and lams-learning.war. using config from ${build.deploy}/deploy.xml</echo>
			
			<path id="deploy.lib.classpath">
				<fileset dir="${deploy.tool.dir}">
					<include name="lib/*.jar"/>
				</fileset>
			</path> 
			
			<java classname="org.lamsfoundation.lams.tool.deploy.UpdateToolContextPath" classpathref="deploy.lib.classpath" fork="true">
					<arg file="${build.deploy}/deploy.xml" />
			</java>	
	</target>
	
	
</project>
