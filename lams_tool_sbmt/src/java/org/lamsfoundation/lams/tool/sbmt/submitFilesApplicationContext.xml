<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<!-- Application context definition for Submit Files Tool -->

<beans>

	<!-- ========================= RESOURCE DEFINITIONS ========================= -->
	<!-- Local DataSource that works in any environment -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName"><value>com.mysql.jdbc.Driver</value></property>
		<property name="url"><value>jdbc:mysql://localhost/lams?zeroDateTimeBehavior=convertToNull&amp;characterEncoding=utf8</value></property>
		<property name="username"><value>lams</value></property>
		<property name="password"><value>lamsdemo</value></property>
	</bean>
  
  	<!-- Hibernate SessionFactory -->
	<bean id="sbmtSessionFactory" class="org.springframework.orm.hibernate.LocalSessionFactoryBean">
		<property name="dataSource"><ref local="dataSource"/></property>
		<property name="mappingResources">
			<list>
				<value>org/lamsfoundation/lams/tool/sbmt/SubmitFilesContent.hbm.xml</value>
				<value>org/lamsfoundation/lams/tool/sbmt/SubmitFilesReport.hbm.xml</value>
				<value>org/lamsfoundation/lams/tool/sbmt/SubmitFilesSession.hbm.xml</value>				
				<value>org/lamsfoundation/lams/tool/sbmt/SubmissionDetails.hbm.xml</value>				
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">net.sf.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.c3p0.minPoolSize">5</prop>
				<prop key="hibernate.c3p0.maxPoolSize">20</prop>
				<prop key="hibernate.c3p0.timeout">1800</prop>
				<prop key="hibernate.c3p0.max_statement">50</prop>
			</props>
		</property>
	</bean>
  	<!-- If we really use multiple SessionFactory, we have to change to JTA Transaction Manager -->
	<!-- bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager"/-->
	<!-- Transaction manager for a single Hibernate SessionFactory (alternative to JTA) -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate.HibernateTransactionManager">
		<property name="sessionFactory"><ref local="sbmtSessionFactory"/></property>
	</bean>

	<!-- Submit Files related beans-->
	
	<bean id="submitFilesContentDAO" class="org.lamsfoundation.lams.tool.sbmt.dao.hibernate.SubmitFilesContentDAO">
		<property name="sessionFactory"><ref local="sbmtSessionFactory"/></property>
	</bean>
	
	<bean id="submitFilesSessionDAO" class="org.lamsfoundation.lams.tool.sbmt.dao.hibernate.SubmitFilesSessionDAO">
		<property name="sessionFactory"><ref local="sbmtSessionFactory"/></property>
	</bean>
	
	<bean id="submitFilesReportDAO" class="org.lamsfoundation.lams.tool.sbmt.dao.hibernate.SubmitFilesReportDAO">
		<property name="sessionFactory"><ref local="sbmtSessionFactory"/></property>
	</bean>	
	
	<bean id="submissionDetailsDAO" class="org.lamsfoundation.lams.tool.sbmt.dao.hibernate.SubmissionDetailsDAO">
		<property name="sessionFactory"><ref local="sbmtSessionFactory"/></property>
	</bean>
	
	<bean id="submitFilesServiceTarget" class="org.lamsfoundation.lams.tool.sbmt.service.SubmitFilesService">
		<property name="submitFilesContentDAO"><ref bean="submitFilesContentDAO"/></property>
		<property name="submitFilesSessionDAO"><ref bean="submitFilesSessionDAO"/></property>
		<property name="submitFilesReportDAO"><ref bean="submitFilesReportDAO"/></property>
		<property name="submissionDetailsDAO"><ref bean="submissionDetailsDAO"/></property>
		<property name="userDAO"><ref bean="userDAO"/></property>
	</bean>
	
	<bean id="submitFilesService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name ="transactionManager"><ref bean ="transactionManager"/></property>
		<property name ="target"><ref bean="submitFilesServiceTarget"/></property>
		
		<!-- TransactionProxyFactoryBean by default just proxies all interfaces implemented by the target object -->
		<!-- AuthoringService is class so needs to be proxied via CGLIB -->
		<!-- Specify "proxyTargetClass" = "true" to generate a CGLIB proxy-->
		<!-- property name="proxyTargetClass"><value>true</value></property-->     
		
		<property name="transactionAttributes">
			<props>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="store*">PROPAGATION_REQUIRED</prop>
				<prop key="copy*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>	
	
</beans>
