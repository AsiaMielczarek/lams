<?xml version="1.0" encoding="UTF-8"?>

<project name="LAMS Tool Deploy Utility " basedir="." default="deploy">

	<property name="sharedlib" value="../lams_build/lib" />
	<property name="deploy.tool.dir" value="../lams_build/deploy-tool/lib" />
	 <property name="lib.dir" value="lib"/>
	
	<property name="build.classes.java" value="build/classes" />
	<property name="build.classes.test" value="build/test" />
	<property name="build.lib" value="build/lib" />
	<property name="jar.file" value="${build.lib}/lams-tool-deploy.jar" />
	<property name="build.report" value="build/report" />

	<property name="src.java.dir" value="src/java" />
	<property name="src.test.dir" value="test/java" />

	<property name="test.file.dir" value="test/file" />
	<property name="debug" value="on" />

	
	<path id="libs.classpath">
        <fileset dir="${lib.dir}">
            <include name="**/*.jar"/>
        </fileset>
		<fileset dir="${sharedlib}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${deploy.tool.dir}">
			<include name="commons-*.jar" />
		</fileset>
	</path>

	<path id="product.classpath">
		<pathelement location="${build.classes.java}" />
		<path refid="libs.classpath" />
	</path>

	
	<target name="_clean-dirs">
		<!-- Internal target: Recreates dirs for compiled output files. -->
		<echo>${ant.project.name}: Removing cache and build folders</echo>
		<delete dir="build" quiet="true" />
		
		<echo>${ant.project.name}: Creating build dir structure</echo>
		<mkdir dir="${build.classes.java}" />
		<mkdir dir="${build.classes.test}" />
		<mkdir dir="${build.lib}" />
		<mkdir dir="${build.report}"/>
		<mkdir dir="${build.report}/html"/> 
	</target>

	
	<target name="_compile-java" depends="_clean-dirs">
		<!-- Internal target: Compile Java sources. -->
		<echo>${ant.project.name}: Compiling Java sources</echo>
		<javac srcdir="${src.java.dir}"
			   compiler="modern"
               source="1.5"
               debug="${debug}"
			   debuglevel="lines,vars,source"
               classpathref="libs.classpath"
               destdir="${build.classes.java}"
		/>
		
		<echo>${ant.project.name}: Copying additional non-Java sources</echo>
	 	<copy todir="${build.classes.java}" overwrite="true">
			<fileset dir="${src.java.dir}">
				<include name="**/*.properties"/>
			</fileset>
		</copy>
	</target>
	
	
	<target name="_compile-test" depends="_compile-java">
		<!-- Internal target: Compile test Java sources. -->
		<javac srcdir="${src.test.dir}"
			   compiler="modern"
			   source="1.5"
	           debug="${debug}"
			   debuglevel="lines,vars,source"
			   destdir="${build.classes.test}"
			   classpathref="product.classpath" />
	</target>
	
	
	<target name="_build-jar" depends="_compile-java">
		<!-- Internal target: Creates JAR file. -->
		<echo>${ant.project.name}: Building JAR</echo>
		<jar jarfile="${jar.file}">
			<fileset dir="${build.classes.java}" />
		</jar>
	</target>


	<target name="deploy" depends="_build-jar" description="Builds and copies JAR to lams_build/deploy-tool/lib">
		<copy todir="${deploy.tool.dir}" file="${jar.file}" />
	</target>
	
	
	<target name="test-report" depends="_compile-test" description="Runs JUnit tests and generates report.">
		<junit printsummary="withOutAndErr"
			   haltonerror="no"
		       haltonfailure="no"
			   showoutput="on"
		       errorProperty="test.failed"
			   failureProperty="test.failed"
			   fork="yes">
			<!--
			<jvmarg value="-Xms512M" />
			<jvmarg value="-Xmx1024M" />
			-->
			<formatter type="plain" usefile="false" />
			<formatter type="xml" />
			<batchtest todir="${build.report}">
				<fileset dir="${src.test.dir}">
					<include name="**/*Test.java" />
					<!-- base class for test cases -->
					<exclude name="**/ToolDBTest.java" />
					<exclude name="**/ToolDBTest.java" />
				</fileset>
			</batchtest>
			<classpath>
				<pathelement location="${build.classes.test}" />
				<path refid="product.classpath" />
				<fileset dir="${test.file.dir}" />
			</classpath>
		</junit>
		
		<junitreport todir="${build.report}">
			<fileset dir="${build.report}">
				<include name="TEST-*.xml" />
			</fileset>
			<report todir="${build.report}/html" />
		</junitreport>
	</target>
</project>