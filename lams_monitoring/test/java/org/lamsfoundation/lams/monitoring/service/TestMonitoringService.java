/* ********************************************************************************
 *  Copyright Notice
 *  =================
 * This file contains propriety information of LAMS Foundation. 
 * Copying or reproduction with prior written permission is prohibited.
 * Copyright (c) 2005 
 * Created on 9/02/2005
 ******************************************************************************** */

package org.lamsfoundation.lams.monitoring.service;

import java.util.LinkedList;

import org.lamsfoundation.lams.AbstractLamsTestCase;
import org.lamsfoundation.lams.learningdesign.Grouping;
import org.lamsfoundation.lams.lesson.Lesson;
import org.lamsfoundation.lams.lesson.dao.ILessonDAO;
import org.lamsfoundation.lams.lesson.dao.hibernate.LessonDAO;
import org.lamsfoundation.lams.usermanagement.Organisation;
import org.lamsfoundation.lams.usermanagement.User;
import org.lamsfoundation.lams.usermanagement.service.IUserManagementService;


/**
 * 
 * @author Jacky Fang 9/02/2005
 * 
 */
public class TestMonitoringService extends AbstractLamsTestCase
{
    //---------------------------------------------------------------------
    // Dependent services
    //---------------------------------------------------------------------
    private IMonitoringService monitoringService;
    private IUserManagementService usermanageService;
    private ILessonDAO lessonDao; 
    //---------------------------------------------------------------------
    // Testing Data - Constants
    //---------------------------------------------------------------------
    private final Integer TEST_USER_ID = new Integer(1);
    private final Integer TEST_LEARNER_ID = new Integer(2);
    private final Integer TEST_STAFF_ID = new Integer(3);    
    private final long TEST_LEARNING_DESIGN_ID = 1;
    private final Integer TEST_ORGANIZATION_ID = new Integer(1);
    //it might be different because it is automatically generated by database
    //TODO create a get lesson by design method in lesson dao.
    private final Long TEST_LESSON_ID = new Long(1);
    //---------------------------------------------------------------------
    // Testing Data - Instance Variables
    //---------------------------------------------------------------------
    private User testUser;
    private User testStaff;
    private User testLearner;
    private Organisation testOrganisation;
    /*
     * @see AbstractLamsCommonTestCase#setUp()
     */
    protected void setUp() throws Exception
    {
        super.setUp();
        monitoringService = (IMonitoringService)this.context.getBean("monitoringService");
        usermanageService = (IUserManagementService)this.context.getBean("userManagementService");
        lessonDao = (LessonDAO)this.context.getBean("lessonDAO");
       
        initializeTestingData();
    }
    /**
     * @see AbstractLamsCommonTestCase#tearDown()
     */
    protected void tearDown() throws Exception
    {
        super.tearDown();
    }

    /**
     * Constructor for TestMonitoringService.
     * @param name
     */
    public TestMonitoringService(String name)
    {
        super(name);
    }
    
    /**
     * @see org.lamsfoundation.lams.AbstractLamsTestCase#getContextConfigLocation()
     */
    protected String[] getContextConfigLocation()
    {
        return new String[] { "/org/lamsfoundation/lams/tool/toolApplicationContext.xml",
                			  "/org/lamsfoundation/lams/monitoring/monitoringApplicationContext.xml",
                			  "/org/lamsfoundation/lams/lesson/lessonApplicationContext.xml",
                			  "/org/lamsfoundation/lams/authoring/mockAuthoringApplicationContext.xml",
                              "/org/lamsfoundation/lams/tool/survey/dataAccessContext.xml",
                              "/org/lamsfoundation/lams/tool/survey/surveyApplicationContext.xml",        					  
        					  "applicationContext.xml"};
    }
    
    public void testCreateLesson()
    {
        LinkedList learners = new LinkedList();
        learners.add(testLearner);
        LinkedList staffs = new LinkedList();
        staffs.add(testStaff);
        
        monitoringService.createLesson(TEST_LEARNING_DESIGN_ID,
                                       testUser,
                                       testOrganisation,
                                       learners,
                                       staffs);
        
        Lesson createdLesson = lessonDao.getLesson(TEST_LESSON_ID);
        assertNotNull(createdLesson);
        assertEquals("verify the design",TEST_LEARNING_DESIGN_ID,createdLesson.getLearningDesign().getLearningDesignId().longValue());
        assertEquals("verify the user", TEST_USER_ID,createdLesson.getUser().getUserId());
        assertEquals("verify the organization",TEST_ORGANIZATION_ID,createdLesson.getOrganisation().getOrganisationId());
        assertEquals("verify the lesson state",Lesson.CREATED,createdLesson.getLessonStateId());
        
        assertEquals("verify number of the learners",1,createdLesson.getAllLearners().size());
        assertEquals("verify the lesson class",Grouping.CLASS_GROUPING_TYPE,createdLesson.getLessonClass().getGroupingTypeId());
        assertEquals("verify the staff group",staffs.size(),createdLesson.getLessonClass().getStaffGroup().getUsers().size());
        assertEquals("verify the learner group",1,createdLesson.getLessonClass().getGroups().size());
        
        //createdLesson.getLessonClass().getGroups().clear();
        //lessonDao.deleteLesson(createdLesson);
    }

    public void testStartlesson()
    {
        monitoringService.startlesson(TEST_LESSON_ID.longValue());
        assertTrue(true);
        
        Lesson startedLesson = lessonDao.getLesson(TEST_LESSON_ID);
        
        assertNotNull(startedLesson);
        assertEquals("verify the lesson status",Lesson.STARTED_STATE,startedLesson.getLessonStateId());
        
        
    }

    public void testForceCompleteLessonByUser()
    {
    }

    /**
     * Initialize all instance variables for testing
     */
    private void initializeTestingData()
    {
        testUser = usermanageService.getUserById(TEST_USER_ID);
        testStaff = usermanageService.getUserById(TEST_STAFF_ID);
        testLearner = usermanageService.getUserById(TEST_LEARNER_ID);        
        testOrganisation = usermanageService.getOrganisationById(TEST_ORGANIZATION_ID);
    }
}
