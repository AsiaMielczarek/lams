<?xml version="1.0"?>

<!-- -->

<project name="lams_monitoring" default="usage" basedir="." >
	
	<!-- import properties from the specified file -->
	<property file="build.properties"/>
	<property file="../lams_build/common.properties"/>

	<path id="all-libs">
		<fileset dir="${sharedlib}">
			<include name="**/*.jar"/>
		</fileset>
		<fileset dir="${j2eelibs}">
			<include name="**/*.jar"/>
		</fileset>
	</path>
   
	<path id="project.classpath">
		<path refid="all-libs" />
		<!-- Java CLASSPATH should be added as the last item -->
		<!-- This property is supposed to be set in eclipse  -->
		<pathelement location="${java.class.path}" />
	</path>	
   
	<target name="usage">
		<echo message=""/>
		<echo message="${name} build file"/>
		<echo message="------------------------------------------------------"/>
		<echo message=""/>
		<echo message="Among the available targets are:"/>
		<echo message=""/>
		<echo message="build-jar    --> create jar" />
		<echo message="build-war    --> create jar and war" />
		<echo message="test-report  --> run tests" />
		<echo message=""/>

	</target>
	<target name="init">
        <available property="xdoclet-jars-installed" file="lib/xdoclet/xdoclet-${xdoclet.version}.jar"/>
    </target>

	
	<!-- ================================================================ -->
	<!-- Preparations									                  -->
	<!-- ================================================================ -->
	<target name="preparedirs">
		<mkdir dir="${build}"/>
		<mkdir dir="${build.classes.java}"/>
		<mkdir dir="${build.classes.test}"/>
		<mkdir dir="${build.lib}"/>
	</target>


	<target name="clean" depends="preparedirs" description="removes all class files">
		<delete>
			<fileset dir="${build.classes.java}"/>
			<fileset dir="${build.classes.test}"/>
			<fileset dir="${build.lib}"/>
		</delete>
	</target>

	<target name="compile.java" depends="clean" description="compile java sources">
		<javac srcdir="${src.java.dir}" compiler="modern"
	           destdir="${build.classes.java}" deprecation="on" debug="on">
			<classpath>
				<path refid="project.classpath"/>
			</classpath>
		</javac>
  		<copy overwrite="yes" todir="${build.classes.java}">
  			<fileset dir="${src.java.dir}">
  				<include name="*.hbm.xml"/>
  			</fileset>
  		</copy>		
		<copy overwrite="yes" todir="${build.classes.java}">
			<fileset dir="${src.java.dir}">
  				<include name="**/*.properties"/>
				<include name="**/*.xml"/>
			</fileset>
		</copy>
	</target>
	
	<target name="compile.test" depends="compile.java">
		<javac destdir="${build.classes.test}" compiler="modern">
			<src path="${src.test.dir}"/>
			<classpath>
				<pathelement location="${build.classes.java}"/>
				<path refid="project.classpath"/>
			</classpath>
		</javac>
		<copy overwrite="yes" todir="${build.classes.java}">
			<fileset dir="${src.test.dir}">
				<include name="*.xml"/>
			</fileset>
		</copy>
	</target>

	<!-- ================================================================ -->
	<!-- Make jar archive for deployment        		    	          -->
	<!-- ================================================================ -->
	<target name="build-jar" depends="compile.java" description="creates jar file">
		<delete file="${build.lib}/${product}.jar"/>
		<jar jarfile="${build.lib}/${product}.jar" manifest="${conf.dir}/jar/META-INF/MANIFEST.MF">
			<fileset dir="${build.classes.java}">
			</fileset>
			<fileset dir="${build.classes.test}">
			</fileset>			
		</jar>
	</target>

	<!-- = = = = = = = = = = = = = = = = = = = = = = = =  -->
	<!-- Make the war archive  for deployment             -->
	<!-- = = = = = = = = = = = = = = = = = = = = = = = =  -->
	<target name="build-war" depends="build-jar,webdoclet" description="creates war file">
		<delete file="${build.lib}/${product}.war"/>
		<war warfile="${build.lib}/${product}.war" manifest="${conf.dir}/war/META-INF/MANIFEST.MF" 
  				webxml="${conf.webinf.dir}/web.xml">
			<webinf dir="${conf.webinf.dir}">
				<include name="**/*.xml"/>
				<include name="**/*.tld"/>
				<include name="struts/*"/>
				<include name="jstl/*"/>
				<exclude name="web.xml"/>
			</webinf>
			<fileset dir="${conf.web.dir}">
				<include name="*"/>
				<include name="css/*"/>
				<include name="gate/*"/>
				<include name="images/*"/>
				<include name="template/*"/>
			</fileset>
		</war>
	</target>
   <!-- =================================================================== -->
   <!-- Fails if XDoclet 1.2.x is not on classpath                          -->
   <!-- =================================================================== -->
   <target name="fail-if-no-xdoclet-1.2" unless="xdoclet-jars-installed">
      <fail>
      You must download several jar files before you can build Middlegen.
      Execute the "download-deps" target. Then try to build again.

      If you are behind a proxy, you should define the properties
      http.proxyHost and http.proxyPort. Example:
      
      ant -Dhttp.proxyHost=foo.com -Dhttp.proxyPort=8080
      
      It's also possible to download the jars manually.
      </fail>
   </target>

   <target name="check-driver-present">
      <available file="${database.driver.file}" type="file" property="driver.present"/>
   </target>
   <target name="panic-if-driver-not-present" unless="driver.present">
      <fail>
      The JDBC driver you have specified by including one of the files in ${basedir}/config/database
      doesn't exist. You have to download this driver separately and put it in ${database.driver.file}
      Please make sure you're using a version that is equal or superior to the one we looked for.
      If you name the driver jar file differently, please update the database.driver.file property
      in the ${basedir}/config/database/xxx.xml file accordingly.
      </fail>
   </target>

   <!-- =================================================================== -->
   <!-- generate a Clover html report                                       -->
   <!-- =================================================================== -->
   <target name="clover">
      <property name="cp" refid="lib.class.path"/>
      <property name="cp2" value="${cp};${ant.home}/lib/clover.jar"/>
      <java 
         classname="com.cortexeb.tools.clover.reporters.html.HtmlReporter" 
         fork="no"
         classpath="${cp2}"
      >
         <arg line="-o ${build.dir}/clover -i C:/temp/clover/demo_coverage.db -t 'Middlegen coverage'"/>
      </java>
   </target>

   <!-- =================================================================== -->
   <!-- Run xdoclet for hibernate                                           -->
   <!-- =================================================================== -->
	<taskdef name="webdoclet" classname="xdoclet.modules.web.WebDocletTask">
	    <classpath refid="all-libs"/>
	</taskdef>


	<target name="webdoclet" depends="preparedirs">
		<webdoclet destdir="${generated.java}" force="${xdoclet.force}">

         <fileset dir="${src.java.dir}">
            <include name="**/*Servlet.java" />
            <include name="**/*Action.java" />
            <include name="**/*Form.java" />
         </fileset>

         <deploymentdescriptor servletspec="2.3" destdir="${conf.webinf.dir}"
			mergedir="${conf.xdoclet.dir}" sessiontimeout="${sessiontimeout}"/>
		
		 <strutsconfigxml destdir="${conf.struts.dir}"
				mergedir="${conf.xdoclet.dir}" version="1.2" />	
       </webdoclet>
   </target>
	
	   <!-- =================================================================== -->
	   <!-- Run junit tests														-->
	   <!-- =================================================================== -->
	<target name="test" depends="compile.test"> 
		<delete failonerror="false">
			<fileset dir="${build.report}"/>
		</delete>
		<mkdir dir="${build.report}" />
		<junit printsummary="yes" haltonerror="no" haltonfailure="no"
			fork="yes">
			<jvmarg value="-Xms512M"/>
			<jvmarg value="-Xmx1024M"/>
			<formatter type="plain" usefile="false" />
			<formatter type="xml" />
			<batchtest todir="${build.report}">
				<fileset dir="${src.test.dir}">
					<include name="**/TestMonitoringService.java" />
					<include name="**/TestGateAction.java" /> 
					<!-- does not work <include name="**/TestMonitoringAction.java" /> -->
				</fileset>
			</batchtest>
			<classpath>
				<pathelement location="${build.classes.java}" />
				<pathelement location="${build.classes.test}" />
				<pathelement location="${conf.hibernate.mapping.dir}" />
				<pathelement location="${conf.web.dir}" />
				<path refid="project.classpath" />
			</classpath>
		</junit>
	</target>

	<target name="test-report" depends="test" description="Run the tests - requires the survey tables to exist">
		<mkdir dir="${build.report}/html" />
		<junitreport todir="${build.report}">
			<fileset dir="${build.report}">
				<include name="TEST-*.xml" />
			</fileset>
			<report todir="${build.report}/html" />
		</junitreport>
	</target>

	
	<target name="deploy-war" depends="build-war">
		<copy file="${build.lib}/${product}.jar"
				todir="${jboss.deploy}"/>
		<copy file="${build.lib}/${product}.war"
				todir="${jboss.deploy}"/>
	</target>
</project>
