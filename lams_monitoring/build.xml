<?xml version="1.0"?>

<!-- -->


<project name="lams_monitoring" default="usage" basedir="." >
	
   <property                                       file="build.properties"/>


   
   <!-- define the datasource.jndi.name in case the imported ejb file doesn't -->
   <property name="datasource.jndi.name"           value="${name}/datasource"/>

	<path id="all-libs">
		<fileset dir="${lib.dir}">
			<include name="**/*.jar"/>
			<exclude name="**/gnujaxp.jar"/>
		</fileset>
	</path>
	
	<path id="project.classpath">
		<path refid="all-libs" />
		<!-- Java CLASSPATH should be added as the last item -->
		<!-- This property is supposed to be set in eclipse  -->
		<pathelement location="${java.class.path}" />
	</path>	
   
	<target name="usage">
		<echo message=""/>
		<echo message="${name} build file"/>
		<echo message="------------------------------------------------------"/>
		<echo message=""/>
		<echo message="Among the available targets are:"/>
		<echo message=""/>
		<echo message="build    --> build all; don't create JARs"/>
		<echo message="alljars  --> create all JAR files"/>
		<echo message="tests    --> run tests"/>
		<echo message=""/>

	</target>
	<target name="init">
        <available property="xdoclet-jars-installed" file="lib/xdoclet/xdoclet-${xdoclet.version}.jar"/>
    </target>

	
	<!-- ================================================================ -->
	<!-- Preparations									                  -->
	<!-- ================================================================ -->
	<target name="preparedirs">
		<mkdir dir="${build}"/>
		<mkdir dir="${build.classes.java}"/>
		<mkdir dir="${build.classes.test}"/>
		<mkdir dir="${build.lib}"/>
	</target>


	<target name="clean" depends="preparedirs" description="removes all class files">
		<delete>
			<fileset dir="${build.classes.java}"/>
			<fileset dir="${build.classes.test}"/>
			<fileset dir="${build.lib}"/>
		</delete>
	</target>

	<target name="compile.java" depends="clean" description="compile java sources">
		<javac srcdir="${src.dir.java}" compiler="modern"
	           destdir="${build.classes.java}" deprecation="on" debug="on">
			<classpath>
				<path refid="project.classpath"/>
			</classpath>
		</javac>
  		<copy overwrite="yes" todir="${build.classes.java}">
  			<fileset dir="${src.dir.test}">
  				<include name="*.hbm.xml"/>
  			</fileset>
  		</copy>		
		<copy overwrite="yes" todir="${build.classes.java}/${monitoring.path}">
			<fileset dir="${src.dir.test}/${monitoring.path}">
				<include name="*.xml"/>
			</fileset>
		</copy>
	</target>
	
	<target name="compile.test" depends="compile.java">
		<javac destdir="${build.classes.test}" compiler="modern">
			<src path="${src.dir.test}"/>
			<classpath>
				<pathelement location="${build.classes.java}"/>
				<path refid="project.classpath"/>
			</classpath>
		</javac>
	</target>

	<!-- = = = = = = = = = = = = = = = = = = = = = = = =  -->
	<!-- Make the war archive  for deployment             -->
	<!-- = = = = = = = = = = = = = = = = = = = = = = = =  -->
	<target name="build-war" depends="compile.java,webdoclet" description="creates war file">
		<delete file="${build.lib}/${product}.war"/>
		<war warfile="${build.lib}/${product}.war" 
  				webxml="${conf.webinf.dir}/web.xml">
			<webinf dir="${conf.webinf.dir}">
				<include name="*.xml"/>
				<include name="struts/*"/>
				<include name="jstl/*"/>
				<include name="spring/*"/>
				<exclude name="web.xml"/>
			</webinf>
			<classes dir="${build.classes.java}"/>
			<lib dir="${conf.webinf.dir}/lib"/>
			<fileset dir="${conf.web.dir}">
				<include name="*"/>
			</fileset>
		</war>
	</target>
   <!-- =================================================================== -->
   <!-- Fails if XDoclet 1.2.x is not on classpath                          -->
   <!-- =================================================================== -->
   <target name="fail-if-no-xdoclet-1.2" unless="xdoclet-jars-installed">
      <fail>
      You must download several jar files before you can build Middlegen.
      Execute the "download-deps" target. Then try to build again.

      If you are behind a proxy, you should define the properties
      http.proxyHost and http.proxyPort. Example:
      
      ant -Dhttp.proxyHost=foo.com -Dhttp.proxyPort=8080
      
      It's also possible to download the jars manually.
      </fail>
   </target>

   <target name="check-driver-present">
      <available file="${database.driver.file}" type="file" property="driver.present"/>
   </target>
   <target name="panic-if-driver-not-present" unless="driver.present">
      <fail>
      The JDBC driver you have specified by including one of the files in ${basedir}/config/database
      doesn't exist. You have to download this driver separately and put it in ${database.driver.file}
      Please make sure you're using a version that is equal or superior to the one we looked for.
      If you name the driver jar file differently, please update the database.driver.file property
      in the ${basedir}/config/database/xxx.xml file accordingly.
      </fail>
   </target>

   <!-- =================================================================== -->
   <!-- generate a Clover html report                                       -->
   <!-- =================================================================== -->
   <target name="clover">
      <property name="cp" refid="lib.class.path"/>
      <property name="cp2" value="${cp};${ant.home}/lib/clover.jar"/>
      <java 
         classname="com.cortexeb.tools.clover.reporters.html.HtmlReporter" 
         fork="no"
         classpath="${cp2}"
      >
         <arg line="-o ${build.dir}/clover -i C:/temp/clover/demo_coverage.db -t 'Middlegen coverage'"/>
      </java>
   </target>

   <!-- =================================================================== -->
   <!-- Run xdoclet for hibernate                                           -->
   <!-- =================================================================== -->
	<taskdef name="webdoclet" classname="xdoclet.modules.web.WebDocletTask">
	    <classpath refid="all-libs"/>
	</taskdef>


	<target name="webdoclet" depends="preparedirs">
		<webdoclet destdir="${generated.java}" force="${xdoclet.force}">

         <fileset dir="${src.dir.java}">
            <include name="**/*Action.java" />
            <include name="**/*Form.java" />
         </fileset>

         <deploymentdescriptor servletspec="2.3" destdir="${conf.webinf.dir}"
			mergedir="${conf.xdoclet.dir}" sessiontimeout="${sessiontimeout}"/>
		
		 <strutsconfigxml destdir="${conf.struts.dir}"
				mergedir="${conf.xdoclet.dir}" version="1.2" />	
       </webdoclet>
   </target>

	
</project>
